

Microchip MPLAB XC8 Assembler V2.41 build 20230208172133 
                                                                                               Wed Oct 09 19:48:55 2024

Microchip MPLAB XC8 C Compiler v2.41 (Free license) build 20230208172133 Og1 
     1                           	processor	18F4580
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     7                           	psect	idataBANK2,global,class=CODE,delta=1,noexec
     8                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     9                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    10                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    12                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    14                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    15                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    16                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    17                           	psect	text0,global,reloc=2,class=CODE,delta=1
    18                           	psect	text1,global,reloc=2,class=CODE,delta=1
    19                           	psect	text2,global,reloc=2,class=CODE,delta=1
    20                           	psect	text3,global,reloc=2,class=CODE,delta=1
    21                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=1
    22                           	psect	text5,global,reloc=2,class=CODE,delta=1
    23                           	psect	text6,global,reloc=2,class=CODE,delta=1
    24                           	psect	text7,global,reloc=2,class=CODE,delta=1
    25                           	psect	text8,global,reloc=2,class=CODE,delta=1
    26                           	psect	text9,global,reloc=2,class=CODE,delta=1
    27                           	psect	text10,global,reloc=2,class=CODE,delta=1
    28                           	psect	text11,global,reloc=2,class=CODE,delta=1
    29                           	psect	text12,global,reloc=2,class=CODE,delta=1
    30                           	psect	text13,global,reloc=2,class=CODE,delta=1
    31                           	psect	text14,global,reloc=2,class=CODE,delta=1
    32                           	psect	text15,global,reloc=2,class=CODE,delta=1
    33                           	psect	text16,global,reloc=2,class=CODE,delta=1
    34                           	psect	text17,global,reloc=2,class=CODE,delta=1
    35                           	psect	text18,global,reloc=2,class=CODE,delta=1
    36                           	psect	text19,global,reloc=2,class=CODE,delta=1
    37                           	psect	text20,global,reloc=2,class=CODE,delta=1
    38                           	psect	text21,global,reloc=2,class=CODE,delta=1
    39                           	psect	text22,global,reloc=2,class=CODE,delta=1
    40                           	psect	text23,global,reloc=2,class=CODE,delta=1
    41                           	psect	text24,global,reloc=2,class=CODE,delta=1
    42                           	psect	text25,global,reloc=2,class=CODE,delta=1
    43                           	psect	text26,global,reloc=2,class=CODE,delta=1
    44                           	psect	text27,global,reloc=2,class=CODE,delta=1
    45                           	psect	text28,global,reloc=2,class=CODE,delta=1
    46                           	psect	text29,global,reloc=2,class=CODE,delta=1
    47                           	psect	text30,global,reloc=2,class=CODE,delta=1
    48                           	psect	text31,global,reloc=2,class=CODE,delta=1
    49                           	psect	text32,global,reloc=2,class=CODE,delta=1
    50                           	psect	text33,global,reloc=2,class=CODE,delta=1
    51                           	psect	text34,global,reloc=2,class=CODE,delta=1
    52                           	psect	text35,global,reloc=2,class=CODE,delta=1
    53                           	psect	text36,global,reloc=2,class=CODE,delta=1
    54                           	psect	text37,global,reloc=2,class=CODE,delta=1,group=1
    55                           	psect	text38,global,reloc=2,class=CODE,delta=1,group=1
    56                           	psect	text39,global,reloc=2,class=CODE,delta=1
    57                           	psect	text40,global,reloc=2,class=CODE,delta=1
    58                           	psect	text41,global,reloc=2,class=CODE,delta=1
    59                           	psect	text42,global,reloc=2,class=CODE,delta=1,group=1
    60                           	psect	text43,global,reloc=2,class=CODE,delta=1,group=1
    61                           	psect	text44,global,reloc=2,class=CODE,delta=1,group=1
    62                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    63                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    64                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    65                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    66                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    67                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    68                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    69   000000                     
    70                           ; Version 2.20
    71                           ; Generated 12/02/2020 GMT
    72                           ; 
    73                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    74                           ; All rights reserved.
    75                           ; 
    76                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    77                           ; 
    78                           ; Redistribution and use in source and binary forms, with or without modification, are
    79                           ; permitted provided that the following conditions are met:
    80                           ; 
    81                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    82                           ;        conditions and the following disclaimer.
    83                           ; 
    84                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    85                           ;        of conditions and the following disclaimer in the documentation and/or other
    86                           ;        materials provided with the distribution.
    87                           ; 
    88                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    89                           ;        software without specific prior written permission.
    90                           ; 
    91                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    92                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    93                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    94                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    95                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    96                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    97                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    98                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    99                           ; 
   100                           ; 
   101                           ; Code-generator required, PIC18F4580 Definitions
   102                           ; 
   103                           ; SFR Addresses
   104   000000                     
   105                           	psect	idataCOMRAM
   106   002A0E                     __pidataCOMRAM:
   107                           	callstack 0
   108                           
   109                           ;initializer for read_switches@once
   110   002A0E  01                 	db	1
   111                           
   112                           ;initializer for _set
   113   002A0F  01                 	db	1
   114                           
   115                           ;initializer for _attempt
   116   002A10  03                 	db	3
   117                           
   118                           ;initializer for _sec
   119   002A11  78                 	db	120
   120                           
   121                           	psect	idataBANK0
   122   00282E                     __pidataBANK0:
   123                           	callstack 0
   124                           
   125                           ;initializer for _pass
   126   00282E  31                 	db	49
   127   00282F  31                 	db	49
   128   002830  31                 	db	49
   129   002831  31                 	db	49
   130   002832  00                 	db	0
   131                           
   132                           ;initializer for _ev
   133   002833  4F                 	db	79
   134   002834  4E                 	db	78
   135   002835  00                 	db	0
   136   002836  47                 	db	71
   137   002837  52                 	db	82
   138   002838  00                 	db	0
   139   002839  47                 	db	71
   140   00283A  4E                 	db	78
   141   00283B  00                 	db	0
   142   00283C  47                 	db	71
   143   00283D  31                 	db	49
   144   00283E  00                 	db	0
   145   00283F  47                 	db	71
   146   002840  32                 	db	50
   147   002841  00                 	db	0
   148   002842  47                 	db	71
   149   002843  33                 	db	51
   150   002844  00                 	db	0
   151   002845  47                 	db	71
   152   002846  34                 	db	52
   153   002847  00                 	db	0
   154   002848  47                 	db	71
   155   002849  35                 	db	53
   156   00284A  00                 	db	0
   157   00284B  5F                 	db	95
   158   00284C  43                 	db	67
   159   00284D  00                 	db	0
   160   00284E  44                 	db	68
   161   00284F  4C                 	db	76
   162   002850  00                 	db	0
   163   002851  43                 	db	67
   164   002852  4C                 	db	76
   165   002853  00                 	db	0
   166   002854  53                 	db	83
   167   002855  54                 	db	84
   168   002856  00                 	db	0
   169   002857  43                 	db	67
   170   002858  50                 	db	80
   171   002859  00                 	db	0
   172                           
   173                           	psect	idataBANK2
   174   0026D2                     __pidataBANK2:
   175                           	callstack 0
   176                           
   177                           ;initializer for _menu_op
   178   0026D2  20                 	db	32
   179   0026D3  20                 	db	32
   180   0026D4  56                 	db	86
   181   0026D5  69                 	db	105
   182   0026D6  65                 	db	101
   183   0026D7  77                 	db	119
   184   0026D8  20                 	db	32
   185   0026D9  4C                 	db	76
   186   0026DA  6F                 	db	111
   187   0026DB  67                 	db	103
   188   0026DC  20                 	db	32
   189   0026DD  20                 	db	32
   190   0026DE  20                 	db	32
   191   0026DF  20                 	db	32
   192   0026E0  20                 	db	32
   193   0026E1  00                 	db	0
   194   0026E2  00                 	db	0
   195   0026E3  20                 	db	32
   196   0026E4  20                 	db	32
   197   0026E5  44                 	db	68
   198   0026E6  6F                 	db	111
   199   0026E7  77                 	db	119
   200   0026E8  6E                 	db	110
   201   0026E9  6C                 	db	108
   202   0026EA  6F                 	db	111
   203   0026EB  61                 	db	97
   204   0026EC  64                 	db	100
   205   0026ED  20                 	db	32
   206   0026EE  4C                 	db	76
   207   0026EF  6F                 	db	111
   208   0026F0  67                 	db	103
   209   0026F1  20                 	db	32
   210   0026F2  00                 	db	0
   211   0026F3  00                 	db	0
   212   0026F4  20                 	db	32
   213   0026F5  20                 	db	32
   214   0026F6  43                 	db	67
   215   0026F7  6C                 	db	108
   216   0026F8  65                 	db	101
   217   0026F9  61                 	db	97
   218   0026FA  72                 	db	114
   219   0026FB  20                 	db	32
   220   0026FC  4C                 	db	76
   221   0026FD  6F                 	db	111
   222   0026FE  67                 	db	103
   223   0026FF  20                 	db	32
   224   002700  20                 	db	32
   225   002701  20                 	db	32
   226   002702  20                 	db	32
   227   002703  00                 	db	0
   228   002704  00                 	db	0
   229   002705  20                 	db	32
   230   002706  20                 	db	32
   231   002707  53                 	db	83
   232   002708  65                 	db	101
   233   002709  74                 	db	116
   234   00270A  20                 	db	32
   235   00270B  54                 	db	84
   236   00270C  69                 	db	105
   237   00270D  6D                 	db	109
   238   00270E  65                 	db	101
   239   00270F  20                 	db	32
   240   002710  20                 	db	32
   241   002711  20                 	db	32
   242   002712  20                 	db	32
   243   002713  20                 	db	32
   244   002714  00                 	db	0
   245   002715  00                 	db	0
   246   002716  20                 	db	32
   247   002717  20                 	db	32
   248   002718  43                 	db	67
   249   002719  68                 	db	104
   250   00271A  61                 	db	97
   251   00271B  6E                 	db	110
   252   00271C  67                 	db	103
   253   00271D  65                 	db	101
   254   00271E  20                 	db	32
   255   00271F  50                 	db	80
   256   002720  73                 	db	115
   257   002721  77                 	db	119
   258   002722  64                 	db	100
   259   002723  20                 	db	32
   260   002724  20                 	db	32
   261   002725  00                 	db	0
   262   002726  00                 	db	0
   263   000000                     _RCREG	set	4014
   264   000000                     _TXREG	set	4013
   265   000000                     _SPBRG	set	4015
   266   000000                     _SSPADD	set	4040
   267   000000                     _SSPCON1	set	4038
   268   000000                     _ADRESL	set	4035
   269   000000                     _ADRESH	set	4036
   270   000000                     _BRG16	set	32195
   271   000000                     _ACKSTAT	set	32302
   272   000000                     _CKE	set	32318
   273   000000                     _VCFG1	set	32269
   274   000000                     _GODONE	set	32273
   275   000000                     _PORTBbits	set	3969
   276   000000                     _ADCON1	set	4033
   277   000000                     _TRISD	set	3989
   278   000000                     _ADCON0	set	4034
   279   000000                     _RCIF	set	31989
   280   000000                     _TXIF	set	31988
   281   000000                     _CREN	set	32092
   282   000000                     _RX9	set	32094
   283   000000                     _BRGH	set	32098
   284   000000                     _SENDB	set	32099
   285   000000                     _SYNC	set	32100
   286   000000                     _TXEN	set	32101
   287   000000                     _TRISC6	set	31910
   288   000000                     _TRISC7	set	31911
   289   000000                     _ACKEN	set	32300
   290   000000                     _ACKDT	set	32301
   291   000000                     _RCEN	set	32299
   292   000000                     _RSEN	set	32297
   293   000000                     _PEN	set	32298
   294   000000                     _SEN	set	32296
   295   000000                     _SMP	set	32319
   296   000000                     _TRISC4	set	31908
   297   000000                     _TRISC3	set	31907
   298   000000                     _TMR0IE	set	32661
   299   000000                     _PSA	set	32427
   300   000000                     _T0CS	set	32429
   301   000000                     _T08BIT	set	32430
   302   000000                     _TMR0IF	set	32658
   303   000000                     _RD7	set	31775
   304   000000                     _RC0	set	31760
   305   000000                     _RC2	set	31762
   306   000000                     _GO	set	32273
   307   000000                     _ADON	set	32272
   308   000000                     _VCFG0	set	32268
   309   000000                     _ADCS2	set	32258
   310   000000                     _ADCS1	set	32257
   311   000000                     _ADCS0	set	32256
   312   000000                     _ACQT0	set	32259
   313   000000                     _ACQT1	set	32260
   314   000000                     _ACQT2	set	32261
   315   000000                     _PORTB	set	3969
   316   000000                     _RC1	set	31761
   317   000000                     _ADFM	set	32263
   318   000000                     _TMR0ON	set	32431
   319   000000                     _GIE	set	32663
   320   000000                     _TMR0	set	4054
   321   000000                     _RBPU	set	32655
   322   000000                     _TRISB	set	3987
   323   000000                     _TRISC	set	3988
   324   000000                     _PORTD	set	3971
   325   000000                     _TRISD7	set	31919
   326   000000                     _SSPIF	set	31987
   327   000000                     _SSPBUF	set	4041
   328   000000                     _BCLIF	set	32011
   329   000000                     _SPEN	set	32095
   330   000000                     _TX9	set	32102
   331                           
   332                           	psect	mediumconst
   333   002E52                     __pmediumconst:
   334                           	callstack 0
   335   002E52  00                 	db	0
   336   002E53                     STR_13:
   337   002E53  0A                 	db	10
   338   002E54  0A                 	db	10
   339   002E55  0D                 	db	13
   340   002E56  23                 	db	35
   341   002E57  20                 	db	32
   342   002E58  54                 	db	84	;'T'
   343   002E59  69                 	db	105	;'i'
   344   002E5A  6D                 	db	109	;'m'
   345   002E5B  65                 	db	101	;'e'
   346   002E5C  20                 	db	32
   347   002E5D  20                 	db	32
   348   002E5E  20                 	db	32
   349   002E5F  20                 	db	32
   350   002E60  20                 	db	32
   351   002E61  45                 	db	69	;'E'
   352   002E62  56                 	db	86	;'V'
   353   002E63  20                 	db	32
   354   002E64  53                 	db	83	;'S'
   355   002E65  50                 	db	80	;'P'
   356   002E66  0A                 	db	10
   357   002E67  0D                 	db	13
   358   002E68  00                 	db	0
   359   002E69                     STR_34:
   360   002E69  23                 	db	35
   361   002E6A  20                 	db	32
   362   002E6B  54                 	db	84	;'T'
   363   002E6C  49                 	db	73	;'I'
   364   002E6D  4D                 	db	77	;'M'
   365   002E6E  45                 	db	69	;'E'
   366   002E6F  20                 	db	32
   367   002E70  20                 	db	32
   368   002E71  20                 	db	32
   369   002E72  20                 	db	32
   370   002E73  20                 	db	32
   371   002E74  45                 	db	69	;'E'
   372   002E75  56                 	db	86	;'V'
   373   002E76  20                 	db	32
   374   002E77  53                 	db	83	;'S'
   375   002E78  50                 	db	80	;'P'
   376   002E79  00                 	db	0
   377   002E7A                     STR_29:
   378   002E7A  20                 	db	32
   379   002E7B  20                 	db	32
   380   002E7C  20                 	db	32
   381   002E7D  20                 	db	32
   382   002E7E  63                 	db	99	;'c'
   383   002E7F  68                 	db	104	;'h'
   384   002E80  61                 	db	97	;'a'
   385   002E81  6E                 	db	110	;'n'
   386   002E82  67                 	db	103	;'g'
   387   002E83  65                 	db	101	;'e'
   388   002E84  64                 	db	100	;'d'
   389   002E85  20                 	db	32
   390   002E86  20                 	db	32
   391   002E87  20                 	db	32
   392   002E88  20                 	db	32
   393   002E89  20                 	db	32
   394   002E8A  00                 	db	0
   395   002E8B                     STR_28:
   396   002E8B  20                 	db	32
   397   002E8C  20                 	db	32
   398   002E8D  20                 	db	32
   399   002E8E  20                 	db	32
   400   002E8F  54                 	db	84	;'T'
   401   002E90  69                 	db	105	;'i'
   402   002E91  6D                 	db	109	;'m'
   403   002E92  65                 	db	101	;'e'
   404   002E93  20                 	db	32
   405   002E94  6E                 	db	110	;'n'
   406   002E95  6F                 	db	111	;'o'
   407   002E96  74                 	db	116	;'t'
   408   002E97  20                 	db	32
   409   002E98  20                 	db	32
   410   002E99  20                 	db	32
   411   002E9A  20                 	db	32
   412   002E9B  00                 	db	0
   413   002E9C                     STR_19:
   414   002E9C  57                 	db	87	;'W'
   415   002E9D  52                 	db	82	;'R'
   416   002E9E  4F                 	db	79	;'O'
   417   002E9F  4E                 	db	78	;'N'
   418   002EA0  47                 	db	71	;'G'
   419   002EA1  20                 	db	32
   420   002EA2  50                 	db	80	;'P'
   421   002EA3  41                 	db	65	;'A'
   422   002EA4  53                 	db	83	;'S'
   423   002EA5  53                 	db	83	;'S'
   424   002EA6  57                 	db	87	;'W'
   425   002EA7  4F                 	db	79	;'O'
   426   002EA8  52                 	db	82	;'R'
   427   002EA9  44                 	db	68	;'D'
   428   002EAA  20                 	db	32
   429   002EAB  20                 	db	32
   430   002EAC  00                 	db	0
   431   002EAD                     STR_15:
   432   002EAD  45                 	db	69	;'E'
   433   002EAE  4E                 	db	78	;'N'
   434   002EAF  54                 	db	84	;'T'
   435   002EB0  45                 	db	69	;'E'
   436   002EB1  52                 	db	82	;'R'
   437   002EB2  20                 	db	32
   438   002EB3  50                 	db	80	;'P'
   439   002EB4  41                 	db	65	;'A'
   440   002EB5  53                 	db	83	;'S'
   441   002EB6  53                 	db	83	;'S'
   442   002EB7  57                 	db	87	;'W'
   443   002EB8  4F                 	db	79	;'O'
   444   002EB9  52                 	db	82	;'R'
   445   002EBA  44                 	db	68	;'D'
   446   002EBB  20                 	db	32
   447   002EBC  20                 	db	32
   448   002EBD  00                 	db	0
   449   002EBE                     STR_22:
   450   002EBE  31                 	db	49	;'1'
   451   002EBF  20                 	db	32
   452   002EC0  41                 	db	65	;'A'
   453   002EC1  74                 	db	116	;'t'
   454   002EC2  74                 	db	116	;'t'
   455   002EC3  65                 	db	101	;'e'
   456   002EC4  6D                 	db	109	;'m'
   457   002EC5  70                 	db	112	;'p'
   458   002EC6  74                 	db	116	;'t'
   459   002EC7  20                 	db	32
   460   002EC8  6C                 	db	108	;'l'
   461   002EC9  65                 	db	101	;'e'
   462   002ECA  66                 	db	102	;'f'
   463   002ECB  74                 	db	116	;'t'
   464   002ECC  20                 	db	32
   465   002ECD  20                 	db	32
   466   002ECE  00                 	db	0
   467   002ECF                     STR_23:
   468   002ECF  59                 	db	89	;'Y'
   469   002ED0  4F                 	db	79	;'O'
   470   002ED1  55                 	db	85	;'U'
   471   002ED2  20                 	db	32
   472   002ED3  41                 	db	65	;'A'
   473   002ED4  52                 	db	82	;'R'
   474   002ED5  45                 	db	69	;'E'
   475   002ED6  20                 	db	32
   476   002ED7  42                 	db	66	;'B'
   477   002ED8  4C                 	db	76	;'L'
   478   002ED9  4F                 	db	79	;'O'
   479   002EDA  43                 	db	67	;'C'
   480   002EDB  4B                 	db	75	;'K'
   481   002EDC  45                 	db	69	;'E'
   482   002EDD  44                 	db	68	;'D'
   483   002EDE  20                 	db	32
   484   002EDF  00                 	db	0
   485   002EE0                     STR_20:
   486   002EE0  32                 	db	50	;'2'
   487   002EE1  20                 	db	32
   488   002EE2  41                 	db	65	;'A'
   489   002EE3  74                 	db	116	;'t'
   490   002EE4  74                 	db	116	;'t'
   491   002EE5  65                 	db	101	;'e'
   492   002EE6  6D                 	db	109	;'m'
   493   002EE7  70                 	db	112	;'p'
   494   002EE8  74                 	db	116	;'t'
   495   002EE9  73                 	db	115	;'s'
   496   002EEA  20                 	db	32
   497   002EEB  6C                 	db	108	;'l'
   498   002EEC  65                 	db	101	;'e'
   499   002EED  66                 	db	102	;'f'
   500   002EEE  74                 	db	116	;'t'
   501   002EEF  20                 	db	32
   502   002EF0  00                 	db	0
   503   002EF1                     STR_18:
   504   002EF1  43                 	db	67	;'C'
   505   002EF2  4F                 	db	79	;'O'
   506   002EF3  52                 	db	82	;'R'
   507   002EF4  52                 	db	82	;'R'
   508   002EF5  45                 	db	69	;'E'
   509   002EF6  43                 	db	67	;'C'
   510   002EF7  54                 	db	84	;'T'
   511   002EF8  20                 	db	32
   512   002EF9  50                 	db	80	;'P'
   513   002EFA  41                 	db	65	;'A'
   514   002EFB  53                 	db	83	;'S'
   515   002EFC  53                 	db	83	;'S'
   516   002EFD  57                 	db	87	;'W'
   517   002EFE  4F                 	db	79	;'O'
   518   002EFF  52                 	db	82	;'R'
   519   002F00  44                 	db	68	;'D'
   520   002F01  00                 	db	0
   521   002F02                     STR_12:
   522   002F02  20                 	db	32
   523   002F03  20                 	db	32
   524   002F04  53                 	db	83	;'S'
   525   002F05  75                 	db	117	;'u'
   526   002F06  63                 	db	99	;'c'
   527   002F07  63                 	db	99	;'c'
   528   002F08  65                 	db	101	;'e'
   529   002F09  73                 	db	115	;'s'
   530   002F0A  73                 	db	115	;'s'
   531   002F0B  66                 	db	102	;'f'
   532   002F0C  75                 	db	117	;'u'
   533   002F0D  6C                 	db	108	;'l'
   534   002F0E  6C                 	db	108	;'l'
   535   002F0F  79                 	db	121	;'y'
   536   002F10  20                 	db	32
   537   002F11  20                 	db	32
   538   002F12  00                 	db	0
   539   002F13                     STR_11:
   540   002F13  20                 	db	32
   541   002F14  4C                 	db	76	;'L'
   542   002F15  6F                 	db	111	;'o'
   543   002F16  67                 	db	103	;'g'
   544   002F17  20                 	db	32
   545   002F18  44                 	db	68	;'D'
   546   002F19  6F                 	db	111	;'o'
   547   002F1A  77                 	db	119	;'w'
   548   002F1B  6E                 	db	110	;'n'
   549   002F1C  6C                 	db	108	;'l'
   550   002F1D  6F                 	db	111	;'o'
   551   002F1E  61                 	db	97	;'a'
   552   002F1F  64                 	db	100	;'d'
   553   002F20  65                 	db	101	;'e'
   554   002F21  64                 	db	100	;'d'
   555   002F22  20                 	db	32
   556   002F23  00                 	db	0
   557   002F24                     STR_10:
   558   002F24  20                 	db	32
   559   002F25  20                 	db	32
   560   002F26  54                 	db	84	;'T'
   561   002F27  49                 	db	73	;'I'
   562   002F28  4D                 	db	77	;'M'
   563   002F29  45                 	db	69	;'E'
   564   002F2A  20                 	db	32
   565   002F2B  20                 	db	32
   566   002F2C  20                 	db	32
   567   002F2D  20                 	db	32
   568   002F2E  45                 	db	69	;'E'
   569   002F2F  56                 	db	86	;'V'
   570   002F30  20                 	db	32
   571   002F31  20                 	db	32
   572   002F32  53                 	db	83	;'S'
   573   002F33  50                 	db	80	;'P'
   574   002F34  00                 	db	0
   575   002F35                     STR_8:
   576   002F35  20                 	db	32
   577   002F36  20                 	db	32
   578   002F37  20                 	db	32
   579   002F38  4C                 	db	76	;'L'
   580   002F39  4F                 	db	79	;'O'
   581   002F3A  47                 	db	71	;'G'
   582   002F3B  20                 	db	32
   583   002F3C  43                 	db	67	;'C'
   584   002F3D  4C                 	db	76	;'L'
   585   002F3E  45                 	db	69	;'E'
   586   002F3F  41                 	db	65	;'A'
   587   002F40  52                 	db	82	;'R'
   588   002F41  45                 	db	69	;'E'
   589   002F42  44                 	db	68	;'D'
   590   002F43  20                 	db	32
   591   002F44  20                 	db	32
   592   002F45  00                 	db	0
   593   002F46                     STR_9:
   594   002F46  20                 	db	32
   595   002F47  20                 	db	32
   596   002F48  53                 	db	83	;'S'
   597   002F49  55                 	db	85	;'U'
   598   002F4A  43                 	db	67	;'C'
   599   002F4B  43                 	db	67	;'C'
   600   002F4C  45                 	db	69	;'E'
   601   002F4D  53                 	db	83	;'S'
   602   002F4E  53                 	db	83	;'S'
   603   002F4F  46                 	db	70	;'F'
   604   002F50  55                 	db	85	;'U'
   605   002F51  4C                 	db	76	;'L'
   606   002F52  4C                 	db	76	;'L'
   607   002F53  59                 	db	89	;'Y'
   608   002F54  20                 	db	32
   609   002F55  20                 	db	32
   610   002F56  00                 	db	0
   611   002F57                     STR_7:
   612   002F57  20                 	db	32
   613   002F58  20                 	db	32
   614   002F59  20                 	db	32
   615   002F5A  20                 	db	32
   616   002F5B  20                 	db	32
   617   002F5C  20                 	db	32
   618   002F5D  20                 	db	32
   619   002F5E  20                 	db	32
   620   002F5F  20                 	db	32
   621   002F60  20                 	db	32
   622   002F61  20                 	db	32
   623   002F62  20                 	db	32
   624   002F63  20                 	db	32
   625   002F64  20                 	db	32
   626   002F65  20                 	db	32
   627   002F66  20                 	db	32
   628   002F67  00                 	db	0
   629   002F68                     STR_6:
   630   002F68  5F                 	db	95	;'_'
   631   002F69  20                 	db	32
   632   002F6A  20                 	db	32
   633   002F6B  20                 	db	32
   634   002F6C  20                 	db	32
   635   002F6D  20                 	db	32
   636   002F6E  20                 	db	32
   637   002F6F  20                 	db	32
   638   002F70  20                 	db	32
   639   002F71  20                 	db	32
   640   002F72  20                 	db	32
   641   002F73  20                 	db	32
   642   002F74  20                 	db	32
   643   002F75  20                 	db	32
   644   002F76  20                 	db	32
   645   002F77  20                 	db	32
   646   002F78  00                 	db	0
   647   002F79                     STR_5:
   648   002F79  53                 	db	83	;'S'
   649   002F7A  55                 	db	85	;'U'
   650   002F7B  43                 	db	67	;'C'
   651   002F7C  43                 	db	67	;'C'
   652   002F7D  45                 	db	69	;'E'
   653   002F7E  53                 	db	83	;'S'
   654   002F7F  53                 	db	83	;'S'
   655   002F80  46                 	db	70	;'F'
   656   002F81  55                 	db	85	;'U'
   657   002F82  4C                 	db	76	;'L'
   658   002F83  20                 	db	32
   659   002F84  20                 	db	32
   660   002F85  20                 	db	32
   661   002F86  20                 	db	32
   662   002F87  20                 	db	32
   663   002F88  20                 	db	32
   664   002F89  00                 	db	0
   665   002F8A                     STR_2:
   666   002F8A  52                 	db	82	;'R'
   667   002F8B  45                 	db	69	;'E'
   668   002F8C  2D                 	db	45
   669   002F8D  45                 	db	69	;'E'
   670   002F8E  4E                 	db	78	;'N'
   671   002F8F  54                 	db	84	;'T'
   672   002F90  45                 	db	69	;'E'
   673   002F91  52                 	db	82	;'R'
   674   002F92  20                 	db	32
   675   002F93  50                 	db	80	;'P'
   676   002F94  41                 	db	65	;'A'
   677   002F95  53                 	db	83	;'S'
   678   002F96  53                 	db	83	;'S'
   679   002F97  57                 	db	87	;'W'
   680   002F98  44                 	db	68	;'D'
   681   002F99  20                 	db	32
   682   002F9A  00                 	db	0
   683   002F9B                     STR_4:
   684   002F9B  50                 	db	80	;'P'
   685   002F9C  41                 	db	65	;'A'
   686   002F9D  53                 	db	83	;'S'
   687   002F9E  53                 	db	83	;'S'
   688   002F9F  57                 	db	87	;'W'
   689   002FA0  4F                 	db	79	;'O'
   690   002FA1  52                 	db	82	;'R'
   691   002FA2  44                 	db	68	;'D'
   692   002FA3  20                 	db	32
   693   002FA4  55                 	db	85	;'U'
   694   002FA5  50                 	db	80	;'P'
   695   002FA6  44                 	db	68	;'D'
   696   002FA7  41                 	db	65	;'A'
   697   002FA8  54                 	db	84	;'T'
   698   002FA9  45                 	db	69	;'E'
   699   002FAA  20                 	db	32
   700   002FAB  00                 	db	0
   701   002FAC                     STR_3:
   702   002FAC  50                 	db	80	;'P'
   703   002FAD  53                 	db	83	;'S'
   704   002FAE  57                 	db	87	;'W'
   705   002FAF  44                 	db	68	;'D'
   706   002FB0  20                 	db	32
   707   002FB1  4E                 	db	78	;'N'
   708   002FB2  4F                 	db	79	;'O'
   709   002FB3  54                 	db	84	;'T'
   710   002FB4  20                 	db	32
   711   002FB5  4D                 	db	77	;'M'
   712   002FB6  41                 	db	65	;'A'
   713   002FB7  54                 	db	84	;'T'
   714   002FB8  43                 	db	67	;'C'
   715   002FB9  48                 	db	72	;'H'
   716   002FBA  45                 	db	69	;'E'
   717   002FBB  44                 	db	68	;'D'
   718   002FBC  00                 	db	0
   719   002FBD                     STR_1:
   720   002FBD  45                 	db	69	;'E'
   721   002FBE  4E                 	db	78	;'N'
   722   002FBF  54                 	db	84	;'T'
   723   002FC0  45                 	db	69	;'E'
   724   002FC1  52                 	db	82	;'R'
   725   002FC2  20                 	db	32
   726   002FC3  4E                 	db	78	;'N'
   727   002FC4  45                 	db	69	;'E'
   728   002FC5  57                 	db	87	;'W'
   729   002FC6  20                 	db	32
   730   002FC7  50                 	db	80	;'P'
   731   002FC8  41                 	db	65	;'A'
   732   002FC9  53                 	db	83	;'S'
   733   002FCA  53                 	db	83	;'S'
   734   002FCB  57                 	db	87	;'W'
   735   002FCC  44                 	db	68	;'D'
   736   002FCD  00                 	db	0
   737   002FCE                     STR_26:
   738   002FCE  54                 	db	84	;'T'
   739   002FCF  69                 	db	105	;'i'
   740   002FD0  6D                 	db	109	;'m'
   741   002FD1  65                 	db	101	;'e'
   742   002FD2  20                 	db	32
   743   002FD3  63                 	db	99	;'c'
   744   002FD4  68                 	db	104	;'h'
   745   002FD5  61                 	db	97	;'a'
   746   002FD6  6E                 	db	110	;'n'
   747   002FD7  67                 	db	103	;'g'
   748   002FD8  65                 	db	101	;'e'
   749   002FD9  64                 	db	100	;'d'
   750   002FDA  00                 	db	0
   751   002FDB                     STR_27:
   752   002FDB  73                 	db	115	;'s'
   753   002FDC  75                 	db	117	;'u'
   754   002FDD  63                 	db	99	;'c'
   755   002FDE  63                 	db	99	;'c'
   756   002FDF  65                 	db	101	;'e'
   757   002FE0  73                 	db	115	;'s'
   758   002FE1  73                 	db	115	;'s'
   759   002FE2  66                 	db	102	;'f'
   760   002FE3  75                 	db	117	;'u'
   761   002FE4  6C                 	db	108	;'l'
   762   002FE5  6C                 	db	108	;'l'
   763   002FE6  79                 	db	121	;'y'
   764   002FE7  00                 	db	0
   765   002FE8                     STR_30:
   766   002FE8  48                 	db	72	;'H'
   767   002FE9  48                 	db	72	;'H'
   768   002FEA  3A                 	db	58	;':'
   769   002FEB  4D                 	db	77	;'M'
   770   002FEC  4D                 	db	77	;'M'
   771   002FED  3A                 	db	58	;':'
   772   002FEE  53                 	db	83	;'S'
   773   002FEF  53                 	db	83	;'S'
   774   002FF0  00                 	db	0
   775   002FF1                     STR_24:
   776   002FF1  57                 	db	87	;'W'
   777   002FF2  61                 	db	97	;'a'
   778   002FF3  69                 	db	105	;'i'
   779   002FF4  74                 	db	116	;'t'
   780   002FF5  2E                 	db	46
   781   002FF6  2E                 	db	46
   782   002FF7  2E                 	db	46
   783   002FF8  20                 	db	32
   784   002FF9  00                 	db	0
   785   002FFA                     STR_25:
   786   002FFA  20                 	db	32
   787   002FFB  73                 	db	115	;'s'
   788   002FFC  65                 	db	101	;'e'
   789   002FFD  63                 	db	99	;'c'
   790   002FFE  00                 	db	0
   791   002FFF  00                 	db	0	; dummy byte at the end
   792   000000                     
   793                           ; #config settings
   794                           
   795                           	psect	cinit
   796   00234C                     __pcinit:
   797                           	callstack 0
   798   00234C                     start_initialization:
   799                           	callstack 0
   800   00234C                     __initialization:
   801                           	callstack 0
   802                           
   803                           ; Initialize objects allocated to BANK2 (85 bytes)
   804                           ; load TBLPTR registers with __pidataBANK2
   805   00234C  0ED2               	movlw	low __pidataBANK2
   806   00234E  6EF6               	movwf	tblptrl,c
   807   002350  0E26               	movlw	high __pidataBANK2
   808   002352  6EF7               	movwf	tblptrh,c
   809   002354  0E00               	movlw	low (__pidataBANK2 shr (0+16))
   810   002356  6EF8               	movwf	tblptru,c
   811   002358  EE02  F000         	lfsr	0,__pdataBANK2
   812   00235C  EE10 F055          	lfsr	1,85
   813   002360                     copy_data0:
   814   002360  0009               	tblrd		*+
   815   002362  CFF5 FFEE          	movff	tablat,postinc0
   816   002366  50E5               	movf	postdec1,w,c
   817   002368  50E1               	movf	fsr1l,w,c
   818   00236A  E1FA               	bnz	copy_data0
   819                           
   820                           ; Initialize objects allocated to BANK0 (44 bytes)
   821                           ; load TBLPTR registers with __pidataBANK0
   822   00236C  0E2E               	movlw	low __pidataBANK0
   823   00236E  6EF6               	movwf	tblptrl,c
   824   002370  0E28               	movlw	high __pidataBANK0
   825   002372  6EF7               	movwf	tblptrh,c
   826   002374  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   827   002376  6EF8               	movwf	tblptru,c
   828   002378  EE00  F0AC         	lfsr	0,__pdataBANK0
   829   00237C  EE10 F02C          	lfsr	1,44
   830   002380                     copy_data1:
   831   002380  0009               	tblrd		*+
   832   002382  CFF5 FFEE          	movff	tablat,postinc0
   833   002386  50E5               	movf	postdec1,w,c
   834   002388  50E1               	movf	fsr1l,w,c
   835   00238A  E1FA               	bnz	copy_data1
   836                           
   837                           ; Initialize objects allocated to COMRAM (4 bytes)
   838                           ; load TBLPTR registers with __pidataCOMRAM
   839   00238C  0E0E               	movlw	low __pidataCOMRAM
   840   00238E  6EF6               	movwf	tblptrl,c
   841   002390  0E2A               	movlw	high __pidataCOMRAM
   842   002392  6EF7               	movwf	tblptrh,c
   843   002394  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   844   002396  6EF8               	movwf	tblptru,c
   845   002398  EE00  F05A         	lfsr	0,__pdataCOMRAM
   846   00239C  EE10 F004          	lfsr	1,4
   847   0023A0                     copy_data2:
   848   0023A0  0009               	tblrd		*+
   849   0023A2  CFF5 FFEE          	movff	tablat,postinc0
   850   0023A6  50E5               	movf	postdec1,w,c
   851   0023A8  50E1               	movf	fsr1l,w,c
   852   0023AA  E1FA               	bnz	copy_data2
   853                           
   854                           ; Clear objects allocated to BANK1 (250 bytes)
   855   0023AC  EE01  F000         	lfsr	0,__pbssBANK1
   856   0023B0  0EFA               	movlw	250
   857   0023B2                     clear_0:
   858   0023B2  6AEE               	clrf	postinc0,c
   859   0023B4  06E8               	decf	wreg,f,c
   860   0023B6  E1FD               	bnz	clear_0
   861                           
   862                           ; Clear objects allocated to BANK0 (76 bytes)
   863   0023B8  EE00  F060         	lfsr	0,__pbssBANK0
   864   0023BC  0E4C               	movlw	76
   865   0023BE                     clear_1:
   866   0023BE  6AEE               	clrf	postinc0,c
   867   0023C0  06E8               	decf	wreg,f,c
   868   0023C2  E1FD               	bnz	clear_1
   869                           
   870                           ; Clear objects allocated to COMRAM (39 bytes)
   871   0023C4  EE00  F033         	lfsr	0,__pbssCOMRAM
   872   0023C8  0E27               	movlw	39
   873   0023CA                     clear_2:
   874   0023CA  6AEE               	clrf	postinc0,c
   875   0023CC  06E8               	decf	wreg,f,c
   876   0023CE  E1FD               	bnz	clear_2
   877   0023D0                     end_of_initialization:
   878                           	callstack 0
   879   0023D0                     __end_of__initialization:
   880                           	callstack 0
   881   0023D0  905E               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   882   0023D2  925E               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   883   0023D4  0E00               	movlw	low (__Lmediumconst shr (0+16))
   884   0023D6  6EF8               	movwf	tblptru,c
   885   0023D8  0100               	movlb	0
   886   0023DA  EFF6  F00B         	goto	_main	;jump to C main() function
   887                           
   888                           	psect	bssCOMRAM
   889   000033                     __pbssCOMRAM:
   890                           	callstack 0
   891   000033                     _view_ind:
   892                           	callstack 0
   893   000033                     	ds	2
   894   000035                     _j1:
   895                           	callstack 0
   896   000035                     	ds	2
   897   000037                     _n:
   898                           	callstack 0
   899   000037                     	ds	2
   900   000039                     _blink:
   901                           	callstack 0
   902   000039                     	ds	2
   903   00003B                     _time2:
   904                           	callstack 0
   905   00003B                     	ds	2
   906   00003D                     _count1:
   907                           	callstack 0
   908   00003D                     	ds	2
   909   00003F                     _i:
   910                           	callstack 0
   911   00003F                     	ds	2
   912   000041                     _log:
   913                           	callstack 0
   914   000041                     	ds	2
   915   000043                     read_switches@key:
   916                           	callstack 0
   917   000043                     	ds	1
   918   000044                     _field:
   919                           	callstack 0
   920   000044                     	ds	1
   921   000045                     _secs:
   922                           	callstack 0
   923   000045                     	ds	1
   924   000046                     _min:
   925                           	callstack 0
   926   000046                     	ds	1
   927   000047                     _hr:
   928                           	callstack 0
   929   000047                     	ds	1
   930   000048                     _timeout:
   931                           	callstack 0
   932   000048                     	ds	1
   933   000049                     _in_flag:
   934                           	callstack 0
   935   000049                     	ds	1
   936   00004A                     _wait_f:
   937                           	callstack 0
   938   00004A                     	ds	1
   939   00004B                     _attempt_f:
   940                           	callstack 0
   941   00004B                     	ds	1
   942   00004C                     _flag:
   943                           	callstack 0
   944   00004C                     	ds	1
   945   00004D                     _tc_flag:
   946                           	callstack 0
   947   00004D                     	ds	1
   948   00004E                     _Y:
   949                           	callstack 0
   950   00004E                     	ds	1
   951   00004F                     _arrow_st:
   952                           	callstack 0
   953   00004F                     	ds	1
   954   000050                     _menu_ind:
   955                           	callstack 0
   956   000050                     	ds	1
   957   000051                     _blink_state:
   958                           	callstack 0
   959   000051                     	ds	1
   960   000052                     _menu_key:
   961                           	callstack 0
   962   000052                     	ds	1
   963   000053                     _menu_f:
   964                           	callstack 0
   965   000053                     	ds	1
   966   000054                     _key:
   967                           	callstack 0
   968   000054                     	ds	1
   969   000055                     _main_f:
   970                           	callstack 0
   971   000055                     	ds	1
   972   000056                     _ev_ind:
   973                           	callstack 0
   974   000056                     	ds	1
   975   000057                     _sp2:
   976                           	callstack 0
   977   000057                     	ds	1
   978   000058                     _sp1:
   979                           	callstack 0
   980   000058                     	ds	1
   981   000059                     _speed:
   982                           	callstack 0
   983   000059                     	ds	1
   984                           
   985                           	psect	dataCOMRAM
   986   00005A                     __pdataCOMRAM:
   987                           	callstack 0
   988   00005A                     read_switches@once:
   989                           	callstack 0
   990   00005A                     	ds	1
   991   00005B                     _set:
   992                           	callstack 0
   993   00005B                     	ds	1
   994   00005C                     _attempt:
   995                           	callstack 0
   996   00005C                     	ds	1
   997   00005D                     _sec:
   998                           	callstack 0
   999   00005D                     	ds	1
  1000                           
  1001                           	psect	bssBANK0
  1002   000060                     __pbssBANK0:
  1003                           	callstack 0
  1004   000060                     _store:
  1005                           	callstack 0
  1006   000060                     	ds	10
  1007   00006A                     _repa:
  1008                           	callstack 0
  1009   00006A                     	ds	10
  1010   000074                     _pa:
  1011                           	callstack 0
  1012   000074                     	ds	10
  1013   00007E                     _input_pass:
  1014                           	callstack 0
  1015   00007E                     	ds	4
  1016   000082                     _clock_reg:
  1017                           	callstack 0
  1018   000082                     	ds	3
  1019   000085                     isr@count:
  1020                           	callstack 0
  1021   000085                     	ds	2
  1022   000087                     _time6:
  1023                           	callstack 0
  1024   000087                     	ds	2
  1025   000089                     _time5:
  1026                           	callstack 0
  1027   000089                     	ds	2
  1028   00008B                     _i1:
  1029                           	callstack 0
  1030   00008B                     	ds	2
  1031   00008D                     _time4:
  1032                           	callstack 0
  1033   00008D                     	ds	2
  1034   00008F                     _time3:
  1035                           	callstack 0
  1036   00008F                     	ds	2
  1037   000091                     _wait:
  1038                           	callstack 0
  1039   000091                     	ds	2
  1040   000093                     _time1:
  1041                           	callstack 0
  1042   000093                     	ds	2
  1043   000095                     _wait3:
  1044                           	callstack 0
  1045   000095                     	ds	2
  1046   000097                     _wait1:
  1047                           	callstack 0
  1048   000097                     	ds	2
  1049   000099                     _blink_delay:
  1050                           	callstack 0
  1051   000099                     	ds	2
  1052   00009B                     _go_back_f:
  1053                           	callstack 0
  1054   00009B                     	ds	2
  1055   00009D                     _re_flag:
  1056                           	callstack 0
  1057   00009D                     	ds	2
  1058   00009F                     _same:
  1059                           	callstack 0
  1060   00009F                     	ds	2
  1061   0000A1                     _adc_reg_val:
  1062                           	callstack 0
  1063   0000A1                     	ds	2
  1064   0000A3                     _time:
  1065                           	callstack 0
  1066   0000A3                     	ds	9
  1067                           
  1068                           	psect	dataBANK0
  1069   0000AC                     __pdataBANK0:
  1070                           	callstack 0
  1071   0000AC                     _pass:
  1072                           	callstack 0
  1073   0000AC                     	ds	5
  1074   0000B1                     _ev:
  1075                           	callstack 0
  1076   0000B1                     	ds	39
  1077                           
  1078                           	psect	bssBANK1
  1079   000100                     __pbssBANK1:
  1080                           	callstack 0
  1081   000100                     _d_log:
  1082                           	callstack 0
  1083   000100                     	ds	140
  1084   00018C                     _view_array:
  1085                           	callstack 0
  1086   00018C                     	ds	110
  1087                           
  1088                           	psect	dataBANK2
  1089   000200                     __pdataBANK2:
  1090                           	callstack 0
  1091   000200                     _menu_op:
  1092                           	callstack 0
  1093   000200                     	ds	85
  1094                           
  1095                           	psect	cstackCOMRAM
  1096   000001                     __pcstackCOMRAM:
  1097                           	callstack 0
  1098   000001                     ?_read_adc:
  1099                           	callstack 0
  1100   000001                     ?___wmul:
  1101                           	callstack 0
  1102   000001                     ?___awdiv:
  1103                           	callstack 0
  1104   000001                     ?___awmod:
  1105                           	callstack 0
  1106   000001                     ?___xxtofl:
  1107                           	callstack 0
  1108   000001                     clcd_write@control_bit:
  1109                           	callstack 0
  1110   000001                     read_switches@detection_type:
  1111                           	callstack 0
  1112   000001                     i2c_write@data:
  1113                           	callstack 0
  1114   000001                     putch@byte:
  1115                           	callstack 0
  1116   000001                     ___wmul@multiplier:
  1117                           	callstack 0
  1118   000001                     ___awdiv@dividend:
  1119                           	callstack 0
  1120   000001                     ___awmod@dividend:
  1121                           	callstack 0
  1122   000001                     ___xxtofl@val:
  1123                           	callstack 0
  1124                           
  1125                           ; 4 bytes @ 0x0
  1126   000001                     	ds	1
  1127   000002                     clcd_write@byte:
  1128                           	callstack 0
  1129   000002                     read_ext_eeprom@address:
  1130                           	callstack 0
  1131   000002                     write_ds1307@data:
  1132                           	callstack 0
  1133   000002                     read_ds1307@address:
  1134                           	callstack 0
  1135   000002                     puts@s:
  1136                           	callstack 0
  1137                           
  1138                           ; 2 bytes @ 0x1
  1139   000002                     	ds	1
  1140   000003                     ??_init_clcd:
  1141   000003                     ??_read_adc:
  1142   000003                     read_ext_eeprom@data:
  1143                           	callstack 0
  1144   000003                     write_ds1307@address:
  1145                           	callstack 0
  1146   000003                     read_ds1307@data:
  1147                           	callstack 0
  1148   000003                     clcd_print@data:
  1149                           	callstack 0
  1150   000003                     ___wmul@multiplicand:
  1151                           	callstack 0
  1152   000003                     ___awdiv@divisor:
  1153                           	callstack 0
  1154   000003                     ___awmod@divisor:
  1155                           	callstack 0
  1156                           
  1157                           ; 2 bytes @ 0x2
  1158   000003                     	ds	1
  1159   000004                     write_ext_eeprom@data:
  1160                           	callstack 0
  1161   000004                     init_ds1307@dummy:
  1162                           	callstack 0
  1163                           
  1164                           ; 1 bytes @ 0x3
  1165   000004                     	ds	1
  1166   000005                     ??___xxtofl:
  1167   000005                     clcd_print@addr:
  1168                           	callstack 0
  1169   000005                     ___awdiv@counter:
  1170                           	callstack 0
  1171   000005                     ___awmod@counter:
  1172                           	callstack 0
  1173   000005                     read_adc@reg_val:
  1174                           	callstack 0
  1175   000005                     write_ext_eeprom@i:
  1176                           	callstack 0
  1177   000005                     ___wmul@product:
  1178                           	callstack 0
  1179                           
  1180                           ; 2 bytes @ 0x4
  1181   000005                     	ds	1
  1182   000006                     ___awdiv@sign:
  1183                           	callstack 0
  1184   000006                     ___awmod@sign:
  1185                           	callstack 0
  1186                           
  1187                           ; 1 bytes @ 0x5
  1188   000006                     	ds	1
  1189   000007                     read_adc@channel:
  1190                           	callstack 0
  1191   000007                     write_ext_eeprom@address:
  1192                           	callstack 0
  1193   000007                     ___awdiv@quotient:
  1194                           	callstack 0
  1195                           
  1196                           ; 2 bytes @ 0x6
  1197   000007                     	ds	2
  1198   000009                     ??_download_log:
  1199   000009                     clcd_putch@addr:
  1200                           	callstack 0
  1201   000009                     ___xxtofl@sign:
  1202                           	callstack 0
  1203                           
  1204                           ; 1 bytes @ 0x8
  1205   000009                     	ds	1
  1206   00000A                     clcd_putch@data:
  1207                           	callstack 0
  1208   00000A                     ___xxtofl@exp:
  1209                           	callstack 0
  1210                           
  1211                           ; 1 bytes @ 0x9
  1212   00000A                     	ds	1
  1213   00000B                     ??_password:
  1214   00000B                     ??_view_log:
  1215   00000B                     ??_set_time:
  1216   00000B                     ??_change_pass:
  1217   00000B                     menu@menu_key:
  1218                           	callstack 0
  1219   00000B                     ___xxtofl@arg:
  1220                           	callstack 0
  1221                           
  1222                           ; 4 bytes @ 0xA
  1223   00000B                     	ds	2
  1224   00000D                     password@key:
  1225                           	callstack 0
  1226   00000D                     set_time@hr_reg:
  1227                           	callstack 0
  1228                           
  1229                           ; 1 bytes @ 0xC
  1230   00000D                     	ds	1
  1231   00000E                     set_time@min_reg:
  1232                           	callstack 0
  1233   00000E                     view_log@key:
  1234                           	callstack 0
  1235                           
  1236                           ; 1 bytes @ 0xD
  1237   00000E                     	ds	1
  1238   00000F                     ?___fldiv:
  1239                           	callstack 0
  1240   00000F                     change_pass@key:
  1241                           	callstack 0
  1242   00000F                     set_time@sec_reg:
  1243                           	callstack 0
  1244   00000F                     ___fldiv@b:
  1245                           	callstack 0
  1246                           
  1247                           ; 4 bytes @ 0xE
  1248   00000F                     	ds	1
  1249   000010                     set_time@menu_key:
  1250                           	callstack 0
  1251                           
  1252                           ; 1 bytes @ 0xF
  1253   000010                     	ds	3
  1254   000013                     ___fldiv@a:
  1255                           	callstack 0
  1256                           
  1257                           ; 4 bytes @ 0x12
  1258   000013                     	ds	4
  1259   000017                     ??___fldiv:
  1260                           
  1261                           ; 1 bytes @ 0x16
  1262   000017                     	ds	4
  1263   00001B                     ___fldiv@rem:
  1264                           	callstack 0
  1265                           
  1266                           ; 4 bytes @ 0x1A
  1267   00001B                     	ds	4
  1268   00001F                     ___fldiv@sign:
  1269                           	callstack 0
  1270                           
  1271                           ; 1 bytes @ 0x1E
  1272   00001F                     	ds	1
  1273   000020                     ___fldiv@new_exp:
  1274                           	callstack 0
  1275                           
  1276                           ; 2 bytes @ 0x1F
  1277   000020                     	ds	2
  1278   000022                     ___fldiv@grs:
  1279                           	callstack 0
  1280                           
  1281                           ; 4 bytes @ 0x21
  1282   000022                     	ds	4
  1283   000026                     ___fldiv@bexp:
  1284                           	callstack 0
  1285                           
  1286                           ; 1 bytes @ 0x25
  1287   000026                     	ds	1
  1288   000027                     ___fldiv@aexp:
  1289                           	callstack 0
  1290                           
  1291                           ; 1 bytes @ 0x26
  1292   000027                     	ds	1
  1293   000028                     ?___fltol:
  1294                           	callstack 0
  1295   000028                     ___fltol@f1:
  1296                           	callstack 0
  1297                           
  1298                           ; 4 bytes @ 0x27
  1299   000028                     	ds	4
  1300   00002C                     ??___fltol:
  1301                           
  1302                           ; 1 bytes @ 0x2B
  1303   00002C                     	ds	4
  1304   000030                     ___fltol@sign1:
  1305                           	callstack 0
  1306                           
  1307                           ; 1 bytes @ 0x2F
  1308   000030                     	ds	1
  1309   000031                     ___fltol@exp1:
  1310                           	callstack 0
  1311                           
  1312                           ; 1 bytes @ 0x30
  1313   000031                     	ds	1
  1314   000032                     ??_main:
  1315                           
  1316                           ; 1 bytes @ 0x31
  1317   000032                     	ds	1
  1318                           
  1319 ;;
  1320 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
  1321 ;;
  1322 ;; *************** function _main *****************
  1323 ;; Defined at:
  1324 ;;		line 57 in file "main.c"
  1325 ;; Parameters:    Size  Location     Type
  1326 ;;		None
  1327 ;; Auto vars:     Size  Location     Type
  1328 ;;  sp_val          1    0        unsigned char 
  1329 ;; Return value:  Size  Location     Type
  1330 ;;                  1    wreg      void 
  1331 ;; Registers used:
  1332 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1333 ;; Tracked objects:
  1334 ;;		On entry : 0/0
  1335 ;;		On exit  : 0/0
  1336 ;;		Unchanged: 0/0
  1337 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1338 ;;      Params:         0       0       0       0       0       0       0
  1339 ;;      Locals:         0       0       0       0       0       0       0
  1340 ;;      Temps:          1       0       0       0       0       0       0
  1341 ;;      Totals:         1       0       0       0       0       0       0
  1342 ;;Total ram usage:        1 bytes
  1343 ;; Hardware stack levels required when called: 7
  1344 ;; This function calls:
  1345 ;;		___awdiv
  1346 ;;		___awmod
  1347 ;;		___fldiv
  1348 ;;		___fltol
  1349 ;;		___xxtofl
  1350 ;;		_change_pass
  1351 ;;		_clear_log
  1352 ;;		_dashboard
  1353 ;;		_download_log
  1354 ;;		_get_time
  1355 ;;		_inti_config
  1356 ;;		_menu
  1357 ;;		_password
  1358 ;;		_read_adc
  1359 ;;		_read_ext_eeprom
  1360 ;;		_read_switches
  1361 ;;		_set_time
  1362 ;;		_store_event
  1363 ;;		_view_log
  1364 ;; This function is called by:
  1365 ;;		Startup code after reset
  1366 ;; This function uses a non-reentrant model
  1367 ;;
  1368                           
  1369                           	psect	text0
  1370   0017EC                     __ptext0:
  1371                           	callstack 0
  1372   0017EC                     _main:
  1373                           	callstack 24
  1374   0017EC                     
  1375                           ;main.c: 59:     inti_config();
  1376   0017EC  EC6A  F014         	call	_inti_config	;wreg free
  1377                           
  1378                           ;main.c: 62:     unsigned char sp_val;;main.c: 63:     log = read_ext_eeprom(250);
  1379   0017F0  0EFA               	movlw	250
  1380   0017F2  EC42  F014         	call	_read_ext_eeprom
  1381   0017F6  6E32               	movwf	??_main^0,c
  1382   0017F8  5032               	movf	??_main^0,w,c
  1383   0017FA  6E41               	movwf	_log^0,c
  1384   0017FC  6A42               	clrf	(_log+1)^0,c
  1385                           
  1386                           ;main.c: 64:     get_time();
  1387   0017FE  ECDC  F012         	call	_get_time	;wreg free
  1388   001802                     
  1389                           ;main.c: 65:     store_event();
  1390   001802  ECDA  F00E         	call	_store_event	;wreg free
  1391   001806                     l4320:
  1392                           
  1393                           ;main.c: 67:     {;main.c: 68:         adc_reg_val = read_adc(0x04);
  1394   001806  0E04               	movlw	4
  1395   001808  EC94  F013         	call	_read_adc
  1396   00180C  C001  F0A1         	movff	?_read_adc,_adc_reg_val
  1397   001810  C002  F0A2         	movff	?_read_adc+1,_adc_reg_val+1
  1398   001814                     
  1399                           ;main.c: 69:         speed = adc_reg_val/10.33;
  1400   001814  0EAE               	movlw	174
  1401   001816  6E13               	movwf	___fldiv@a^0,c
  1402   001818  0E47               	movlw	71
  1403   00181A  6E14               	movwf	(___fldiv@a+1)^0,c
  1404   00181C  0E25               	movlw	37
  1405   00181E  6E15               	movwf	(___fldiv@a+2)^0,c
  1406   001820  0E41               	movlw	65
  1407   001822  6E16               	movwf	(___fldiv@a+3)^0,c
  1408   001824  C0A1  F001         	movff	_adc_reg_val,___xxtofl@val
  1409   001828  C0A2  F002         	movff	_adc_reg_val+1,___xxtofl@val+1
  1410   00182C  6A03               	clrf	(___xxtofl@val+2)^0,c
  1411   00182E  6A04               	clrf	(___xxtofl@val+3)^0,c
  1412   001830  0E00               	movlw	0
  1413   001832  EC00  F00E         	call	___xxtofl
  1414   001836  C001  F00F         	movff	?___xxtofl,___fldiv@b
  1415   00183A  C002  F010         	movff	?___xxtofl+1,___fldiv@b+1
  1416   00183E  C003  F011         	movff	?___xxtofl+2,___fldiv@b+2
  1417   001842  C004  F012         	movff	?___xxtofl+3,___fldiv@b+3
  1418   001846  EC41  F007         	call	___fldiv	;wreg free
  1419   00184A  C00F  F028         	movff	?___fldiv,___fltol@f1
  1420   00184E  C010  F029         	movff	?___fldiv+1,___fltol@f1+1
  1421   001852  C011  F02A         	movff	?___fldiv+2,___fltol@f1+2
  1422   001856  C012  F02B         	movff	?___fldiv+3,___fltol@f1+3
  1423   00185A  EC15  F010         	call	___fltol	;wreg free
  1424   00185E  5028               	movf	?___fltol^0,w,c
  1425   001860  6E59               	movwf	_speed^0,c
  1426   001862                     
  1427                           ;main.c: 70:         sp1 = 48 + speed/10;
  1428   001862  C059  F001         	movff	_speed,___awdiv@dividend
  1429   001866  6A02               	clrf	(___awdiv@dividend+1)^0,c
  1430   001868  0E00               	movlw	0
  1431   00186A  6E04               	movwf	(___awdiv@divisor+1)^0,c
  1432   00186C  0E0A               	movlw	10
  1433   00186E  6E03               	movwf	___awdiv@divisor^0,c
  1434   001870  EC98  F010         	call	___awdiv	;wreg free
  1435   001874  5001               	movf	?___awdiv^0,w,c
  1436   001876  0F30               	addlw	48
  1437   001878  6E58               	movwf	_sp1^0,c
  1438   00187A                     
  1439                           ;main.c: 71:         sp2 = 48 + speed%10;
  1440   00187A  C059  F001         	movff	_speed,___awmod@dividend
  1441   00187E  6A02               	clrf	(___awmod@dividend+1)^0,c
  1442   001880  0E00               	movlw	0
  1443   001882  6E04               	movwf	(___awmod@divisor+1)^0,c
  1444   001884  0E0A               	movlw	10
  1445   001886  6E03               	movwf	___awmod@divisor^0,c
  1446   001888  ECFA  F010         	call	___awmod	;wreg free
  1447   00188C  5001               	movf	?___awmod^0,w,c
  1448   00188E  0F30               	addlw	48
  1449   001890  6E57               	movwf	_sp2^0,c
  1450   001892                     
  1451                           ;main.c: 72:         get_time();
  1452   001892  ECDC  F012         	call	_get_time	;wreg free
  1453   001896                     
  1454                           ;main.c: 75:         key = read_switches(1);
  1455   001896  0E01               	movlw	1
  1456   001898  EC30  F012         	call	_read_switches
  1457   00189C  6E54               	movwf	_key^0,c
  1458   00189E                     
  1459                           ;main.c: 76:         if (key == 2)
  1460   00189E  0E02               	movlw	2
  1461   0018A0  1854               	xorwf	_key^0,w,c
  1462   0018A2  A4D8               	btfss	status,2,c
  1463   0018A4  EF56  F00C         	goto	u3911
  1464   0018A8  EF58  F00C         	goto	u3910
  1465   0018AC                     u3911:
  1466   0018AC  EF70  F00C         	goto	l4344
  1467   0018B0                     u3910:
  1468   0018B0                     
  1469                           ;main.c: 77:         {;main.c: 78:             if(ev_ind<7)
  1470   0018B0  0E07               	movlw	7
  1471   0018B2  6056               	cpfslt	_ev_ind^0,c
  1472   0018B4  EF5E  F00C         	goto	u3921
  1473   0018B8  EF60  F00C         	goto	u3920
  1474   0018BC                     u3921:
  1475   0018BC  EF61  F00C         	goto	l4338
  1476   0018C0                     u3920:
  1477   0018C0                     
  1478                           ;main.c: 79:             ev_ind++ ;
  1479   0018C0  2A56               	incf	_ev_ind^0,f,c
  1480   0018C2                     l4338:
  1481                           
  1482                           ;main.c: 80:             if(ev_ind == 8)
  1483   0018C2  0E08               	movlw	8
  1484   0018C4  1856               	xorwf	_ev_ind^0,w,c
  1485   0018C6  A4D8               	btfss	status,2,c
  1486   0018C8  EF68  F00C         	goto	u3931
  1487   0018CC  EF6A  F00C         	goto	u3930
  1488   0018D0                     u3931:
  1489   0018D0  EF6C  F00C         	goto	l4342
  1490   0018D4                     u3930:
  1491   0018D4                     l4340:
  1492                           
  1493                           ;main.c: 81:             ev_ind = 2;
  1494   0018D4  0E02               	movlw	2
  1495   0018D6  6E56               	movwf	_ev_ind^0,c
  1496   0018D8                     l4342:
  1497                           
  1498                           ;main.c: 82:             store_event();
  1499   0018D8  ECDA  F00E         	call	_store_event	;wreg free
  1500                           
  1501                           ;main.c: 83:         }
  1502   0018DC  EFA2  F00C         	goto	l4364
  1503   0018E0                     l4344:
  1504   0018E0  0E03               	movlw	3
  1505   0018E2  1854               	xorwf	_key^0,w,c
  1506   0018E4  A4D8               	btfss	status,2,c
  1507   0018E6  EF77  F00C         	goto	u3941
  1508   0018EA  EF79  F00C         	goto	u3940
  1509   0018EE                     u3941:
  1510   0018EE  EF96  F00C         	goto	l4358
  1511   0018F2                     u3940:
  1512   0018F2                     
  1513                           ;main.c: 85:         {;main.c: 86:             if(ev_ind>1 && ev_ind!=8)
  1514   0018F2  0E01               	movlw	1
  1515   0018F4  6456               	cpfsgt	_ev_ind^0,c
  1516   0018F6  EF7F  F00C         	goto	u3951
  1517   0018FA  EF81  F00C         	goto	u3950
  1518   0018FE                     u3951:
  1519   0018FE  EF8B  F00C         	goto	l4352
  1520   001902                     u3950:
  1521   001902  0E08               	movlw	8
  1522   001904  1856               	xorwf	_ev_ind^0,w,c
  1523   001906  B4D8               	btfsc	status,2,c
  1524   001908  EF88  F00C         	goto	u3961
  1525   00190C  EF8A  F00C         	goto	u3960
  1526   001910                     u3961:
  1527   001910  EF8B  F00C         	goto	l4352
  1528   001914                     u3960:
  1529   001914                     
  1530                           ;main.c: 87:             ev_ind-- ;
  1531   001914  0656               	decf	_ev_ind^0,f,c
  1532   001916                     l4352:
  1533                           
  1534                           ;main.c: 88:             if(ev_ind == 8)
  1535   001916  0E08               	movlw	8
  1536   001918  1856               	xorwf	_ev_ind^0,w,c
  1537   00191A  A4D8               	btfss	status,2,c
  1538   00191C  EF92  F00C         	goto	u3971
  1539   001920  EF94  F00C         	goto	u3970
  1540   001924                     u3971:
  1541   001924  EF6C  F00C         	goto	l4342
  1542   001928                     u3970:
  1543   001928  EF6A  F00C         	goto	l4340
  1544   00192C                     l4358:
  1545   00192C  0454               	decf	_key^0,w,c
  1546   00192E  A4D8               	btfss	status,2,c
  1547   001930  EF9C  F00C         	goto	u3981
  1548   001934  EF9E  F00C         	goto	u3980
  1549   001938                     u3981:
  1550   001938  EFA2  F00C         	goto	l4364
  1551   00193C                     u3980:
  1552   00193C                     
  1553                           ;main.c: 93:         {;main.c: 94:             ev_ind = 8;
  1554   00193C  0E08               	movlw	8
  1555   00193E  6E56               	movwf	_ev_ind^0,c
  1556   001940  EF6C  F00C         	goto	l4342
  1557   001944                     l4364:
  1558                           
  1559                           ;main.c: 101:         if(main_f == 0)
  1560   001944  5055               	movf	_main_f^0,w,c
  1561   001946  A4D8               	btfss	status,2,c
  1562   001948  EFA8  F00C         	goto	u3991
  1563   00194C  EFAA  F00C         	goto	u3990
  1564   001950                     u3991:
  1565   001950  EFAE  F00C         	goto	l4368
  1566   001954                     u3990:
  1567   001954                     
  1568                           ;main.c: 102:         {;main.c: 103:             dashboard();
  1569   001954  EC6B  F012         	call	_dashboard	;wreg free
  1570                           
  1571                           ;main.c: 104:         }
  1572   001958  EF03  F00C         	goto	l4320
  1573   00195C                     l4368:
  1574   00195C  0455               	decf	_main_f^0,w,c
  1575   00195E  A4D8               	btfss	status,2,c
  1576   001960  EFB4  F00C         	goto	u4001
  1577   001964  EFB6  F00C         	goto	u4000
  1578   001968                     u4001:
  1579   001968  EFBB  F00C         	goto	l4372
  1580   00196C                     u4000:
  1581   00196C                     
  1582                           ;main.c: 106:         {;main.c: 107:             password(key);
  1583   00196C  5054               	movf	_key^0,w,c
  1584   00196E  EC0E  F009         	call	_password
  1585                           
  1586                           ;main.c: 108:         }
  1587   001972  EF03  F00C         	goto	l4320
  1588   001976                     l4372:
  1589   001976  0E02               	movlw	2
  1590   001978  1855               	xorwf	_main_f^0,w,c
  1591   00197A  A4D8               	btfss	status,2,c
  1592   00197C  EFC2  F00C         	goto	u4011
  1593   001980  EFC4  F00C         	goto	u4010
  1594   001984                     u4011:
  1595   001984  EFCD  F00C         	goto	l4378
  1596   001988                     u4010:
  1597   001988                     
  1598                           ;main.c: 110:         {;main.c: 111:             menu_key = read_switches(0);
  1599   001988  0E00               	movlw	0
  1600   00198A  EC30  F012         	call	_read_switches
  1601   00198E  6E52               	movwf	_menu_key^0,c
  1602   001990                     
  1603                           ;main.c: 112:             menu(menu_key);
  1604   001990  5052               	movf	_menu_key^0,w,c
  1605   001992  EC21  F00D         	call	_menu
  1606                           
  1607                           ;main.c: 113:         }
  1608   001996  EF03  F00C         	goto	l4320
  1609   00199A                     l4378:
  1610   00199A  0E03               	movlw	3
  1611   00199C  1855               	xorwf	_main_f^0,w,c
  1612   00199E  A4D8               	btfss	status,2,c
  1613   0019A0  EFD4  F00C         	goto	u4021
  1614   0019A4  EFD6  F00C         	goto	u4020
  1615   0019A8                     u4021:
  1616   0019A8  EF03  F00C         	goto	l4320
  1617   0019AC                     u4020:
  1618   0019AC                     
  1619                           ;main.c: 115:         {;main.c: 117:             menu_key = read_switches(0);
  1620   0019AC  0E00               	movlw	0
  1621   0019AE  EC30  F012         	call	_read_switches
  1622   0019B2  6E52               	movwf	_menu_key^0,c
  1623   0019B4                     
  1624                           ;main.c: 118:             if(menu_f == 0)
  1625   0019B4  5053               	movf	_menu_f^0,w,c
  1626   0019B6  A4D8               	btfss	status,2,c
  1627   0019B8  EFE0  F00C         	goto	u4031
  1628   0019BC  EFE2  F00C         	goto	u4030
  1629   0019C0                     u4031:
  1630   0019C0  EFE7  F00C         	goto	l4386
  1631   0019C4                     u4030:
  1632   0019C4                     
  1633                           ;main.c: 119:             {;main.c: 120:                 view_log(menu_key);
  1634   0019C4  5052               	movf	_menu_key^0,w,c
  1635   0019C6  EC60  F003         	call	_view_log
  1636                           
  1637                           ;main.c: 121:             }
  1638   0019CA  EF03  F00C         	goto	l4320
  1639   0019CE                     l4386:
  1640   0019CE  0453               	decf	_menu_f^0,w,c
  1641   0019D0  A4D8               	btfss	status,2,c
  1642   0019D2  EFED  F00C         	goto	u4041
  1643   0019D6  EFEF  F00C         	goto	u4040
  1644   0019DA                     u4041:
  1645   0019DA  EFF3  F00C         	goto	l4390
  1646   0019DE                     u4040:
  1647   0019DE                     
  1648                           ;main.c: 123:             {;main.c: 124:                 download_log();
  1649   0019DE  ECC0  F00A         	call	_download_log	;wreg free
  1650                           
  1651                           ;main.c: 125:             }
  1652   0019E2  EF03  F00C         	goto	l4320
  1653   0019E6                     l4390:
  1654   0019E6  0E02               	movlw	2
  1655   0019E8  1853               	xorwf	_menu_f^0,w,c
  1656   0019EA  A4D8               	btfss	status,2,c
  1657   0019EC  EFFA  F00C         	goto	u4051
  1658   0019F0  EFFC  F00C         	goto	u4050
  1659   0019F4                     u4051:
  1660   0019F4  EF01  F00D         	goto	l4394
  1661   0019F8                     u4050:
  1662   0019F8                     
  1663                           ;main.c: 127:             {;main.c: 128:                 clear_log(key);
  1664   0019F8  5054               	movf	_key^0,w,c
  1665   0019FA  ECEF  F011         	call	_clear_log
  1666                           
  1667                           ;main.c: 129:             }
  1668   0019FE  EF03  F00C         	goto	l4320
  1669   001A02                     l4394:
  1670   001A02  0E03               	movlw	3
  1671   001A04  1853               	xorwf	_menu_f^0,w,c
  1672   001A06  A4D8               	btfss	status,2,c
  1673   001A08  EF08  F00D         	goto	u4061
  1674   001A0C  EF0A  F00D         	goto	u4060
  1675   001A10                     u4061:
  1676   001A10  EF0F  F00D         	goto	l4398
  1677   001A14                     u4060:
  1678   001A14                     
  1679                           ;main.c: 131:             {;main.c: 132:                 set_time(menu_key);
  1680   001A14  5052               	movf	_menu_key^0,w,c
  1681   001A16  EC09  F000         	call	_set_time
  1682                           
  1683                           ;main.c: 133:             }
  1684   001A1A  EF03  F00C         	goto	l4320
  1685   001A1E                     l4398:
  1686   001A1E  0E04               	movlw	4
  1687   001A20  1853               	xorwf	_menu_f^0,w,c
  1688   001A22  A4D8               	btfss	status,2,c
  1689   001A24  EF16  F00D         	goto	u4071
  1690   001A28  EF18  F00D         	goto	u4070
  1691   001A2C                     u4071:
  1692   001A2C  EF1D  F00D         	goto	l99
  1693   001A30                     u4070:
  1694   001A30                     
  1695                           ;main.c: 135:             {;main.c: 136:                 change_pass(key);
  1696   001A30  5054               	movf	_key^0,w,c
  1697   001A32  EC53  F005         	call	_change_pass
  1698   001A36  EF03  F00C         	goto	l4320
  1699   001A3A                     l99:
  1700   001A3A  EF03  F00C         	goto	l4320
  1701   001A3E  EF07  F000         	goto	start
  1702   001A42                     __end_of_main:
  1703                           	callstack 0
  1704                           
  1705 ;; *************** function _view_log *****************
  1706 ;; Defined at:
  1707 ;;		line 28 in file "view_log.c"
  1708 ;; Parameters:    Size  Location     Type
  1709 ;;  key             1    wreg     unsigned char 
  1710 ;; Auto vars:     Size  Location     Type
  1711 ;;  key             1   13[COMRAM] unsigned char 
  1712 ;; Return value:  Size  Location     Type
  1713 ;;                  1    wreg      void 
  1714 ;; Registers used:
  1715 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1716 ;; Tracked objects:
  1717 ;;		On entry : 0/0
  1718 ;;		On exit  : 0/0
  1719 ;;		Unchanged: 0/0
  1720 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1721 ;;      Params:         0       0       0       0       0       0       0
  1722 ;;      Locals:         1       0       0       0       0       0       0
  1723 ;;      Temps:          3       0       0       0       0       0       0
  1724 ;;      Totals:         4       0       0       0       0       0       0
  1725 ;;Total ram usage:        4 bytes
  1726 ;; Hardware stack levels used: 1
  1727 ;; Hardware stack levels required when called: 5
  1728 ;; This function calls:
  1729 ;;		___wmul
  1730 ;;		_clcd_print
  1731 ;;		_clcd_putch
  1732 ;;		_clcd_write
  1733 ;;		_read_ext_eeprom
  1734 ;;		_read_switches
  1735 ;; This function is called by:
  1736 ;;		_main
  1737 ;; This function uses a non-reentrant model
  1738 ;;
  1739                           
  1740                           	psect	text1
  1741   0006C0                     __ptext1:
  1742                           	callstack 0
  1743   0006C0                     _view_log:
  1744                           	callstack 25
  1745   0006C0                     
  1746                           ;view_log.c: 28: void view_log(char key);view_log.c: 29: {;view_log.c: 30:     clcd_prin
      +                          t("# TIME     EV SP", (0x80 + (0)));
  1747   0006C0  0E69               	movlw	low STR_34
  1748   0006C2  6E03               	movwf	clcd_print@data^0,c
  1749   0006C4  0E2E               	movlw	high STR_34
  1750   0006C6  6E04               	movwf	(clcd_print@data+1)^0,c
  1751   0006C8  0E80               	movlw	128
  1752   0006CA  6E05               	movwf	clcd_print@addr^0,c
  1753   0006CC  ECA6  F012         	call	_clcd_print	;wreg free
  1754   0006D0                     
  1755                           ;view_log.c: 32:     if(set)
  1756   0006D0  505B               	movf	_set^0,w,c
  1757   0006D2  B4D8               	btfsc	status,2,c
  1758   0006D4  EF6E  F003         	goto	u2891
  1759   0006D8  EF70  F003         	goto	u2890
  1760   0006DC                     u2891:
  1761   0006DC  EFBD  F003         	goto	l3660
  1762   0006E0                     u2890:
  1763   0006E0                     
  1764                           ;view_log.c: 33:     {;view_log.c: 34:         set=0;
  1765   0006E0  0E00               	movlw	0
  1766   0006E2  6E5B               	movwf	_set^0,c
  1767                           
  1768                           ;view_log.c: 35:         for (i1 = 0; i1 < log; i1++)
  1769   0006E4  0E00               	movlw	0
  1770   0006E6  0100               	movlb	0	; () banked
  1771   0006E8  6F8C               	movwf	(_i1+1)& (0+255),b
  1772   0006EA  0E00               	movlw	0
  1773   0006EC  6F8B               	movwf	_i1& (0+255),b
  1774   0006EE  EFAE  F003         	goto	l3658
  1775   0006F2                     l3644:
  1776                           
  1777                           ; BSR set to: 0
  1778                           ;view_log.c: 36:         {;view_log.c: 37:             for (j1 = 0; j1 < 10; j1++)
  1779   0006F2  0E00               	movlw	0
  1780   0006F4  6E36               	movwf	(_j1+1)^0,c
  1781   0006F6  0E00               	movlw	0
  1782   0006F8  6E35               	movwf	_j1^0,c
  1783   0006FA                     l3650:
  1784                           
  1785                           ;view_log.c: 38:             {;view_log.c: 39:                 view_array[i1][j1] = read
      +                          _ext_eeprom(i1 * 10 + j1);
  1786   0006FA  C08B  F001         	movff	_i1,___wmul@multiplier
  1787   0006FE  C08C  F002         	movff	_i1+1,___wmul@multiplier+1
  1788   000702  0E00               	movlw	0
  1789   000704  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  1790   000706  0E0B               	movlw	11
  1791   000708  6E03               	movwf	___wmul@multiplicand^0,c
  1792   00070A  EC57  F014         	call	___wmul	;wreg free
  1793   00070E  0E8C               	movlw	low _view_array
  1794   000710  2401               	addwf	?___wmul^0,w,c
  1795   000712  6E0B               	movwf	??_view_log^0,c
  1796   000714  0E01               	movlw	high _view_array
  1797   000716  2002               	addwfc	(?___wmul+1)^0,w,c
  1798   000718  6E0C               	movwf	(??_view_log+1)^0,c
  1799   00071A  5035               	movf	_j1^0,w,c
  1800   00071C  240B               	addwf	??_view_log^0,w,c
  1801   00071E  6ED9               	movwf	fsr2l,c
  1802   000720  5036               	movf	(_j1+1)^0,w,c
  1803   000722  200C               	addwfc	(??_view_log+1)^0,w,c
  1804   000724  6EDA               	movwf	fsr2h,c
  1805   000726  0100               	movlb	0	; () banked
  1806   000728  518B               	movf	_i1& (0+255),w,b
  1807   00072A  0D0A               	mullw	10
  1808   00072C  50F3               	movf	243,w,c
  1809   00072E  2435               	addwf	_j1^0,w,c
  1810   000730  EC42  F014         	call	_read_ext_eeprom
  1811   000734  6EDF               	movwf	indf2,c
  1812   000736                     
  1813                           ;view_log.c: 40:             }
  1814   000736  4A35               	infsnz	_j1^0,f,c
  1815   000738  2A36               	incf	(_j1+1)^0,f,c
  1816   00073A  BE36               	btfsc	(_j1+1)^0,7,c
  1817   00073C  EFA9  F003         	goto	u2901
  1818   000740  5036               	movf	(_j1+1)^0,w,c
  1819   000742  E109               	bnz	u2900
  1820   000744  0E0A               	movlw	10
  1821   000746  5C35               	subwf	_j1^0,w,c
  1822   000748  A0D8               	btfss	status,0,c
  1823   00074A  EFA9  F003         	goto	u2901
  1824   00074E  EFAB  F003         	goto	u2900
  1825   000752                     u2901:
  1826   000752  EF7D  F003         	goto	l3650
  1827   000756                     u2900:
  1828   000756                     
  1829                           ;view_log.c: 41:         }
  1830   000756  0100               	movlb	0	; () banked
  1831   000758  4B8B               	infsnz	_i1& (0+255),f,b
  1832   00075A  2B8C               	incf	(_i1+1)& (0+255),f,b
  1833   00075C                     l3658:
  1834                           
  1835                           ; BSR set to: 0
  1836   00075C  5041               	movf	_log^0,w,c
  1837   00075E  5D8B               	subwf	_i1& (0+255),w,b
  1838   000760  518C               	movf	(_i1+1)& (0+255),w,b
  1839   000762  0A80               	xorlw	128
  1840   000764  6E0B               	movwf	??_view_log^0,c
  1841   000766  5042               	movf	(_log+1)^0,w,c
  1842   000768  0A80               	xorlw	128
  1843   00076A  580B               	subwfb	??_view_log^0,w,c
  1844   00076C  A0D8               	btfss	status,0,c
  1845   00076E  EFBB  F003         	goto	u2911
  1846   000772  EFBD  F003         	goto	u2910
  1847   000776                     u2911:
  1848   000776  EF79  F003         	goto	l3644
  1849   00077A                     u2910:
  1850   00077A                     l3660:
  1851                           
  1852                           ;view_log.c: 44:     clcd_putch(view_ind + '0', (0xC0 + (0)));
  1853   00077A  0EC0               	movlw	192
  1854   00077C  6E09               	movwf	clcd_putch@addr^0,c
  1855   00077E  5033               	movf	_view_ind^0,w,c
  1856   000780  0F30               	addlw	48
  1857   000782  ECB5  F014         	call	_clcd_putch
  1858   000786                     
  1859                           ;view_log.c: 45:     clcd_putch(' ', (0xC0 + (1)));
  1860   000786  0EC1               	movlw	193
  1861   000788  6E09               	movwf	clcd_putch@addr^0,c
  1862   00078A  0E20               	movlw	32
  1863   00078C  ECB5  F014         	call	_clcd_putch
  1864   000790                     
  1865                           ;view_log.c: 46:     clcd_putch(view_array[view_ind][0], (0xC0 + (2)));
  1866   000790  0EC2               	movlw	194
  1867   000792  6E09               	movwf	clcd_putch@addr^0,c
  1868   000794  C033  F001         	movff	_view_ind,___wmul@multiplier
  1869   000798  C034  F002         	movff	_view_ind+1,___wmul@multiplier+1
  1870   00079C  0E00               	movlw	0
  1871   00079E  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  1872   0007A0  0E0B               	movlw	11
  1873   0007A2  6E03               	movwf	___wmul@multiplicand^0,c
  1874   0007A4  EC57  F014         	call	___wmul	;wreg free
  1875   0007A8  0E8C               	movlw	low _view_array
  1876   0007AA  2401               	addwf	?___wmul^0,w,c
  1877   0007AC  6ED9               	movwf	fsr2l,c
  1878   0007AE  0E01               	movlw	high _view_array
  1879   0007B0  2002               	addwfc	(?___wmul+1)^0,w,c
  1880   0007B2  6EDA               	movwf	fsr2h,c
  1881   0007B4  50DF               	movf	indf2,w,c
  1882   0007B6  ECB5  F014         	call	_clcd_putch
  1883   0007BA                     
  1884                           ;view_log.c: 47:     clcd_putch(view_array[view_ind][1], (0xC0 + (3)));
  1885   0007BA  0EC3               	movlw	195
  1886   0007BC  6E09               	movwf	clcd_putch@addr^0,c
  1887   0007BE  C033  F001         	movff	_view_ind,___wmul@multiplier
  1888   0007C2  C034  F002         	movff	_view_ind+1,___wmul@multiplier+1
  1889   0007C6  0E00               	movlw	0
  1890   0007C8  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  1891   0007CA  0E0B               	movlw	11
  1892   0007CC  6E03               	movwf	___wmul@multiplicand^0,c
  1893   0007CE  EC57  F014         	call	___wmul	;wreg free
  1894   0007D2  0E8D               	movlw	low (_view_array+1)
  1895   0007D4  2401               	addwf	?___wmul^0,w,c
  1896   0007D6  6ED9               	movwf	fsr2l,c
  1897   0007D8  0E01               	movlw	high (_view_array+1)
  1898   0007DA  2002               	addwfc	(?___wmul+1)^0,w,c
  1899   0007DC  6EDA               	movwf	fsr2h,c
  1900   0007DE  50DF               	movf	indf2,w,c
  1901   0007E0  ECB5  F014         	call	_clcd_putch
  1902   0007E4                     
  1903                           ;view_log.c: 48:     clcd_putch(':', (0xC0 + (4)));
  1904   0007E4  0EC4               	movlw	196
  1905   0007E6  6E09               	movwf	clcd_putch@addr^0,c
  1906   0007E8  0E3A               	movlw	58
  1907   0007EA  ECB5  F014         	call	_clcd_putch
  1908   0007EE                     
  1909                           ;view_log.c: 49:     clcd_putch(view_array[view_ind][2], (0xC0 + (5)));
  1910   0007EE  0EC5               	movlw	197
  1911   0007F0  6E09               	movwf	clcd_putch@addr^0,c
  1912   0007F2  C033  F001         	movff	_view_ind,___wmul@multiplier
  1913   0007F6  C034  F002         	movff	_view_ind+1,___wmul@multiplier+1
  1914   0007FA  0E00               	movlw	0
  1915   0007FC  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  1916   0007FE  0E0B               	movlw	11
  1917   000800  6E03               	movwf	___wmul@multiplicand^0,c
  1918   000802  EC57  F014         	call	___wmul	;wreg free
  1919   000806  0E8E               	movlw	low (_view_array+2)
  1920   000808  2401               	addwf	?___wmul^0,w,c
  1921   00080A  6ED9               	movwf	fsr2l,c
  1922   00080C  0E01               	movlw	high (_view_array+2)
  1923   00080E  2002               	addwfc	(?___wmul+1)^0,w,c
  1924   000810  6EDA               	movwf	fsr2h,c
  1925   000812  50DF               	movf	indf2,w,c
  1926   000814  ECB5  F014         	call	_clcd_putch
  1927   000818                     
  1928                           ;view_log.c: 50:     clcd_putch(view_array[view_ind][3], (0xC0 + (6)));
  1929   000818  0EC6               	movlw	198
  1930   00081A  6E09               	movwf	clcd_putch@addr^0,c
  1931   00081C  C033  F001         	movff	_view_ind,___wmul@multiplier
  1932   000820  C034  F002         	movff	_view_ind+1,___wmul@multiplier+1
  1933   000824  0E00               	movlw	0
  1934   000826  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  1935   000828  0E0B               	movlw	11
  1936   00082A  6E03               	movwf	___wmul@multiplicand^0,c
  1937   00082C  EC57  F014         	call	___wmul	;wreg free
  1938   000830  0E8F               	movlw	low (_view_array+3)
  1939   000832  2401               	addwf	?___wmul^0,w,c
  1940   000834  6ED9               	movwf	fsr2l,c
  1941   000836  0E01               	movlw	high (_view_array+3)
  1942   000838  2002               	addwfc	(?___wmul+1)^0,w,c
  1943   00083A  6EDA               	movwf	fsr2h,c
  1944   00083C  50DF               	movf	indf2,w,c
  1945   00083E  ECB5  F014         	call	_clcd_putch
  1946   000842                     
  1947                           ;view_log.c: 51:     clcd_putch(':', (0xC0 + (7)));
  1948   000842  0EC7               	movlw	199
  1949   000844  6E09               	movwf	clcd_putch@addr^0,c
  1950   000846  0E3A               	movlw	58
  1951   000848  ECB5  F014         	call	_clcd_putch
  1952   00084C                     
  1953                           ;view_log.c: 52:     clcd_putch(view_array[view_ind][4], (0xC0 + (8)));
  1954   00084C  0EC8               	movlw	200
  1955   00084E  6E09               	movwf	clcd_putch@addr^0,c
  1956   000850  C033  F001         	movff	_view_ind,___wmul@multiplier
  1957   000854  C034  F002         	movff	_view_ind+1,___wmul@multiplier+1
  1958   000858  0E00               	movlw	0
  1959   00085A  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  1960   00085C  0E0B               	movlw	11
  1961   00085E  6E03               	movwf	___wmul@multiplicand^0,c
  1962   000860  EC57  F014         	call	___wmul	;wreg free
  1963   000864  0E90               	movlw	low (_view_array+4)
  1964   000866  2401               	addwf	?___wmul^0,w,c
  1965   000868  6ED9               	movwf	fsr2l,c
  1966   00086A  0E01               	movlw	high (_view_array+4)
  1967   00086C  2002               	addwfc	(?___wmul+1)^0,w,c
  1968   00086E  6EDA               	movwf	fsr2h,c
  1969   000870  50DF               	movf	indf2,w,c
  1970   000872  ECB5  F014         	call	_clcd_putch
  1971   000876                     
  1972                           ;view_log.c: 53:     clcd_putch(view_array[view_ind][5], (0xC0 + (9)));
  1973   000876  0EC9               	movlw	201
  1974   000878  6E09               	movwf	clcd_putch@addr^0,c
  1975   00087A  C033  F001         	movff	_view_ind,___wmul@multiplier
  1976   00087E  C034  F002         	movff	_view_ind+1,___wmul@multiplier+1
  1977   000882  0E00               	movlw	0
  1978   000884  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  1979   000886  0E0B               	movlw	11
  1980   000888  6E03               	movwf	___wmul@multiplicand^0,c
  1981   00088A  EC57  F014         	call	___wmul	;wreg free
  1982   00088E  0E91               	movlw	low (_view_array+5)
  1983   000890  2401               	addwf	?___wmul^0,w,c
  1984   000892  6ED9               	movwf	fsr2l,c
  1985   000894  0E01               	movlw	high (_view_array+5)
  1986   000896  2002               	addwfc	(?___wmul+1)^0,w,c
  1987   000898  6EDA               	movwf	fsr2h,c
  1988   00089A  50DF               	movf	indf2,w,c
  1989   00089C  ECB5  F014         	call	_clcd_putch
  1990   0008A0                     
  1991                           ;view_log.c: 54:     clcd_putch(' ', (0xC0 + (10)));
  1992   0008A0  0ECA               	movlw	202
  1993   0008A2  6E09               	movwf	clcd_putch@addr^0,c
  1994   0008A4  0E20               	movlw	32
  1995   0008A6  ECB5  F014         	call	_clcd_putch
  1996   0008AA                     
  1997                           ;view_log.c: 55:     clcd_putch(view_array[view_ind][6], (0xC0 + (11)));
  1998   0008AA  0ECB               	movlw	203
  1999   0008AC  6E09               	movwf	clcd_putch@addr^0,c
  2000   0008AE  C033  F001         	movff	_view_ind,___wmul@multiplier
  2001   0008B2  C034  F002         	movff	_view_ind+1,___wmul@multiplier+1
  2002   0008B6  0E00               	movlw	0
  2003   0008B8  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  2004   0008BA  0E0B               	movlw	11
  2005   0008BC  6E03               	movwf	___wmul@multiplicand^0,c
  2006   0008BE  EC57  F014         	call	___wmul	;wreg free
  2007   0008C2  0E92               	movlw	low (_view_array+6)
  2008   0008C4  2401               	addwf	?___wmul^0,w,c
  2009   0008C6  6ED9               	movwf	fsr2l,c
  2010   0008C8  0E01               	movlw	high (_view_array+6)
  2011   0008CA  2002               	addwfc	(?___wmul+1)^0,w,c
  2012   0008CC  6EDA               	movwf	fsr2h,c
  2013   0008CE  50DF               	movf	indf2,w,c
  2014   0008D0  ECB5  F014         	call	_clcd_putch
  2015   0008D4                     
  2016                           ;view_log.c: 56:     clcd_putch(view_array[view_ind][7], (0xC0 + (12)));
  2017   0008D4  0ECC               	movlw	204
  2018   0008D6  6E09               	movwf	clcd_putch@addr^0,c
  2019   0008D8  C033  F001         	movff	_view_ind,___wmul@multiplier
  2020   0008DC  C034  F002         	movff	_view_ind+1,___wmul@multiplier+1
  2021   0008E0  0E00               	movlw	0
  2022   0008E2  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  2023   0008E4  0E0B               	movlw	11
  2024   0008E6  6E03               	movwf	___wmul@multiplicand^0,c
  2025   0008E8  EC57  F014         	call	___wmul	;wreg free
  2026   0008EC  0E93               	movlw	low (_view_array+7)
  2027   0008EE  2401               	addwf	?___wmul^0,w,c
  2028   0008F0  6ED9               	movwf	fsr2l,c
  2029   0008F2  0E01               	movlw	high (_view_array+7)
  2030   0008F4  2002               	addwfc	(?___wmul+1)^0,w,c
  2031   0008F6  6EDA               	movwf	fsr2h,c
  2032   0008F8  50DF               	movf	indf2,w,c
  2033   0008FA  ECB5  F014         	call	_clcd_putch
  2034   0008FE                     
  2035                           ;view_log.c: 57:     clcd_putch(' ', (0xC0 + (13)));
  2036   0008FE  0ECD               	movlw	205
  2037   000900  6E09               	movwf	clcd_putch@addr^0,c
  2038   000902  0E20               	movlw	32
  2039   000904  ECB5  F014         	call	_clcd_putch
  2040   000908                     
  2041                           ;view_log.c: 58:     clcd_putch(view_array[view_ind][8], (0xC0 + (14)));
  2042   000908  0ECE               	movlw	206
  2043   00090A  6E09               	movwf	clcd_putch@addr^0,c
  2044   00090C  C033  F001         	movff	_view_ind,___wmul@multiplier
  2045   000910  C034  F002         	movff	_view_ind+1,___wmul@multiplier+1
  2046   000914  0E00               	movlw	0
  2047   000916  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  2048   000918  0E0B               	movlw	11
  2049   00091A  6E03               	movwf	___wmul@multiplicand^0,c
  2050   00091C  EC57  F014         	call	___wmul	;wreg free
  2051   000920  0E94               	movlw	low (_view_array+8)
  2052   000922  2401               	addwf	?___wmul^0,w,c
  2053   000924  6ED9               	movwf	fsr2l,c
  2054   000926  0E01               	movlw	high (_view_array+8)
  2055   000928  2002               	addwfc	(?___wmul+1)^0,w,c
  2056   00092A  6EDA               	movwf	fsr2h,c
  2057   00092C  50DF               	movf	indf2,w,c
  2058   00092E  ECB5  F014         	call	_clcd_putch
  2059   000932                     
  2060                           ;view_log.c: 59:     clcd_putch(view_array[view_ind][9], (0xC0 + (15)));
  2061   000932  0ECF               	movlw	207
  2062   000934  6E09               	movwf	clcd_putch@addr^0,c
  2063   000936  C033  F001         	movff	_view_ind,___wmul@multiplier
  2064   00093A  C034  F002         	movff	_view_ind+1,___wmul@multiplier+1
  2065   00093E  0E00               	movlw	0
  2066   000940  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  2067   000942  0E0B               	movlw	11
  2068   000944  6E03               	movwf	___wmul@multiplicand^0,c
  2069   000946  EC57  F014         	call	___wmul	;wreg free
  2070   00094A  0E95               	movlw	low (_view_array+9)
  2071   00094C  2401               	addwf	?___wmul^0,w,c
  2072   00094E  6ED9               	movwf	fsr2l,c
  2073   000950  0E01               	movlw	high (_view_array+9)
  2074   000952  2002               	addwfc	(?___wmul+1)^0,w,c
  2075   000954  6EDA               	movwf	fsr2h,c
  2076   000956  50DF               	movf	indf2,w,c
  2077   000958  ECB5  F014         	call	_clcd_putch
  2078   00095C                     
  2079                           ;view_log.c: 60:     key = read_switches(0);
  2080   00095C  0E00               	movlw	0
  2081   00095E  EC30  F012         	call	_read_switches
  2082   000962  6E0E               	movwf	view_log@key^0,c
  2083   000964                     
  2084                           ;view_log.c: 63:     if (key == 12)
  2085   000964  0E0C               	movlw	12
  2086   000966  180E               	xorwf	view_log@key^0,w,c
  2087   000968  A4D8               	btfss	status,2,c
  2088   00096A  EFB9  F004         	goto	u2921
  2089   00096E  EFBB  F004         	goto	u2920
  2090   000972                     u2921:
  2091   000972  EFE3  F004         	goto	l3704
  2092   000976                     u2920:
  2093   000976                     
  2094                           ;view_log.c: 64:     {;view_log.c: 65:         time5++;
  2095   000976  0100               	movlb	0	; () banked
  2096   000978  4B89               	infsnz	_time5& (0+255),f,b
  2097   00097A  2B8A               	incf	(_time5+1)& (0+255),f,b
  2098   00097C                     
  2099                           ; BSR set to: 0
  2100                           ;view_log.c: 67:         if (time5 > 200)
  2101   00097C  BF8A               	btfsc	(_time5+1)& (0+255),7,b
  2102   00097E  EFCA  F004         	goto	u2931
  2103   000982  518A               	movf	(_time5+1)& (0+255),w,b
  2104   000984  E109               	bnz	u2930
  2105   000986  0EC9               	movlw	201
  2106   000988  5D89               	subwf	_time5& (0+255),w,b
  2107   00098A  A0D8               	btfss	status,0,c
  2108   00098C  EFCA  F004         	goto	u2931
  2109   000990  EFCC  F004         	goto	u2930
  2110   000994                     u2931:
  2111   000994  EF16  F005         	goto	l3714
  2112   000998                     u2930:
  2113   000998                     
  2114                           ; BSR set to: 0
  2115                           ;view_log.c: 68:         {;view_log.c: 69:             time5 = 0;
  2116   000998  0E00               	movlw	0
  2117   00099A  6F8A               	movwf	(_time5+1)& (0+255),b
  2118   00099C  0E00               	movlw	0
  2119   00099E  6F89               	movwf	_time5& (0+255),b
  2120                           
  2121                           ;view_log.c: 70:             menu_ind = 0;
  2122   0009A0  0E00               	movlw	0
  2123   0009A2  6E50               	movwf	_menu_ind^0,c
  2124                           
  2125                           ;view_log.c: 71:             arrow_st = 0;
  2126   0009A4  0E00               	movlw	0
  2127   0009A6  6E4F               	movwf	_arrow_st^0,c
  2128                           
  2129                           ;view_log.c: 72:             main_f = 2;
  2130   0009A8  0E02               	movlw	2
  2131   0009AA  6E55               	movwf	_main_f^0,c
  2132                           
  2133                           ;view_log.c: 73:             set=1;
  2134   0009AC  0E01               	movlw	1
  2135   0009AE  6E5B               	movwf	_set^0,c
  2136                           
  2137                           ;view_log.c: 74:             view_ind = 0;
  2138   0009B0  0E00               	movlw	0
  2139   0009B2  6E34               	movwf	(_view_ind+1)^0,c
  2140   0009B4  0E00               	movlw	0
  2141   0009B6  6E33               	movwf	_view_ind^0,c
  2142   0009B8                     
  2143                           ; BSR set to: 0
  2144                           ;view_log.c: 75:             clcd_write(0x01, 0);
  2145   0009B8  0E00               	movlw	0
  2146   0009BA  6E01               	movwf	clcd_write@control_bit^0,c
  2147   0009BC  0E01               	movlw	1
  2148   0009BE  ECFA  F013         	call	_clcd_write
  2149   0009C2  EF16  F005         	goto	l3714
  2150   0009C6                     l3704:
  2151   0009C6  0100               	movlb	0	; () banked
  2152   0009C8  BF8A               	btfsc	(_time5+1)& (0+255),7,b
  2153   0009CA  EFF2  F004         	goto	u2940
  2154   0009CE  518A               	movf	(_time5+1)& (0+255),w,b
  2155   0009D0  E107               	bnz	u2941
  2156   0009D2  0EC8               	movlw	200
  2157   0009D4  5D89               	subwf	_time5& (0+255),w,b
  2158   0009D6  B0D8               	btfsc	status,0,c
  2159   0009D8  EFF0  F004         	goto	u2941
  2160   0009DC  EFF2  F004         	goto	u2940
  2161   0009E0                     u2941:
  2162   0009E0  EF16  F005         	goto	l3714
  2163   0009E4                     u2940:
  2164   0009E4                     
  2165                           ; BSR set to: 0
  2166   0009E4  5189               	movf	_time5& (0+255),w,b
  2167   0009E6  118A               	iorwf	(_time5+1)& (0+255),w,b
  2168   0009E8  B4D8               	btfsc	status,2,c
  2169   0009EA  EFF9  F004         	goto	u2951
  2170   0009EE  EFFB  F004         	goto	u2950
  2171   0009F2                     u2951:
  2172   0009F2  EF16  F005         	goto	l3714
  2173   0009F6                     u2950:
  2174   0009F6                     
  2175                           ; BSR set to: 0
  2176                           ;view_log.c: 80:     {;view_log.c: 81:         time5 = 0;
  2177   0009F6  0E00               	movlw	0
  2178   0009F8  6F8A               	movwf	(_time5+1)& (0+255),b
  2179   0009FA  0E00               	movlw	0
  2180   0009FC  6F89               	movwf	_time5& (0+255),b
  2181   0009FE                     
  2182                           ; BSR set to: 0
  2183                           ;view_log.c: 82:         if (view_ind < log-1)
  2184   0009FE  0EFF               	movlw	255
  2185   000A00  2441               	addwf	_log^0,w,c
  2186   000A02  6E0B               	movwf	??_view_log^0,c
  2187   000A04  0EFF               	movlw	255
  2188   000A06  2042               	addwfc	(_log+1)^0,w,c
  2189   000A08  6E0C               	movwf	(??_view_log+1)^0,c
  2190   000A0A  500B               	movf	??_view_log^0,w,c
  2191   000A0C  5C33               	subwf	_view_ind^0,w,c
  2192   000A0E  5034               	movf	(_view_ind+1)^0,w,c
  2193   000A10  0A80               	xorlw	128
  2194   000A12  6E0D               	movwf	(??_view_log+2)^0,c
  2195   000A14  500C               	movf	(??_view_log+1)^0,w,c
  2196   000A16  0A80               	xorlw	128
  2197   000A18  580D               	subwfb	(??_view_log+2)^0,w,c
  2198   000A1A  B0D8               	btfsc	status,0,c
  2199   000A1C  EF12  F005         	goto	u2961
  2200   000A20  EF14  F005         	goto	u2960
  2201   000A24                     u2961:
  2202   000A24  EF16  F005         	goto	l3714
  2203   000A28                     u2960:
  2204   000A28                     
  2205                           ; BSR set to: 0
  2206                           ;view_log.c: 83:         {;view_log.c: 84:             view_ind++;
  2207   000A28  4A33               	infsnz	_view_ind^0,f,c
  2208   000A2A  2A34               	incf	(_view_ind+1)^0,f,c
  2209   000A2C                     l3714:
  2210                           
  2211                           ;view_log.c: 88:     if (key == 11)
  2212   000A2C  0E0B               	movlw	11
  2213   000A2E  180E               	xorwf	view_log@key^0,w,c
  2214   000A30  A4D8               	btfss	status,2,c
  2215   000A32  EF1D  F005         	goto	u2971
  2216   000A36  EF1F  F005         	goto	u2970
  2217   000A3A                     u2971:
  2218   000A3A  EF26  F005         	goto	l3718
  2219   000A3E                     u2970:
  2220   000A3E                     
  2221                           ;view_log.c: 89:     {;view_log.c: 90:         time6 = 2;
  2222   000A3E  0E00               	movlw	0
  2223   000A40  0100               	movlb	0	; () banked
  2224   000A42  6F88               	movwf	(_time6+1)& (0+255),b
  2225   000A44  0E02               	movlw	2
  2226   000A46  6F87               	movwf	_time6& (0+255),b
  2227                           
  2228                           ;view_log.c: 91:     }
  2229   000A48  EF52  F005         	goto	l497
  2230   000A4C                     l3718:
  2231   000A4C  0100               	movlb	0	; () banked
  2232   000A4E  BF88               	btfsc	(_time6+1)& (0+255),7,b
  2233   000A50  EF35  F005         	goto	u2980
  2234   000A54  5188               	movf	(_time6+1)& (0+255),w,b
  2235   000A56  E107               	bnz	u2981
  2236   000A58  0EC8               	movlw	200
  2237   000A5A  5D87               	subwf	_time6& (0+255),w,b
  2238   000A5C  B0D8               	btfsc	status,0,c
  2239   000A5E  EF33  F005         	goto	u2981
  2240   000A62  EF35  F005         	goto	u2980
  2241   000A66                     u2981:
  2242   000A66  EF52  F005         	goto	l497
  2243   000A6A                     u2980:
  2244   000A6A                     
  2245                           ; BSR set to: 0
  2246   000A6A  5187               	movf	_time6& (0+255),w,b
  2247   000A6C  1188               	iorwf	(_time6+1)& (0+255),w,b
  2248   000A6E  B4D8               	btfsc	status,2,c
  2249   000A70  EF3C  F005         	goto	u2991
  2250   000A74  EF3E  F005         	goto	u2990
  2251   000A78                     u2991:
  2252   000A78  EF52  F005         	goto	l497
  2253   000A7C                     u2990:
  2254   000A7C                     
  2255                           ; BSR set to: 0
  2256                           ;view_log.c: 94:     {;view_log.c: 95:         time6 = 0;
  2257   000A7C  0E00               	movlw	0
  2258   000A7E  6F88               	movwf	(_time6+1)& (0+255),b
  2259   000A80  0E00               	movlw	0
  2260   000A82  6F87               	movwf	_time6& (0+255),b
  2261   000A84                     
  2262                           ; BSR set to: 0
  2263                           ;view_log.c: 96:         if (view_ind > 0)
  2264   000A84  BE34               	btfsc	(_view_ind+1)^0,7,c
  2265   000A86  EF4D  F005         	goto	u3001
  2266   000A8A  5034               	movf	(_view_ind+1)^0,w,c
  2267   000A8C  E108               	bnz	u3000
  2268   000A8E  0433               	decf	_view_ind^0,w,c
  2269   000A90  A0D8               	btfss	status,0,c
  2270   000A92  EF4D  F005         	goto	u3001
  2271   000A96  EF4F  F005         	goto	u3000
  2272   000A9A                     u3001:
  2273   000A9A  EF52  F005         	goto	l497
  2274   000A9E                     u3000:
  2275   000A9E                     
  2276                           ; BSR set to: 0
  2277                           ;view_log.c: 97:         {;view_log.c: 98:             view_ind--;
  2278   000A9E  0633               	decf	_view_ind^0,f,c
  2279   000AA0  A0D8               	btfss	status,0,c
  2280   000AA2  0634               	decf	(_view_ind+1)^0,f,c
  2281   000AA4                     l497:
  2282                           
  2283                           ; BSR set to: 0
  2284   000AA4  0012               	return		;funcret
  2285   000AA6                     __end_of_view_log:
  2286                           	callstack 0
  2287                           
  2288 ;; *************** function _read_switches *****************
  2289 ;; Defined at:
  2290 ;;		line 94 in file "matrix_keypad.c"
  2291 ;; Parameters:    Size  Location     Type
  2292 ;;  detection_ty    1    wreg     unsigned char 
  2293 ;; Auto vars:     Size  Location     Type
  2294 ;;  detection_ty    1    0[COMRAM] unsigned char 
  2295 ;; Return value:  Size  Location     Type
  2296 ;;                  1    wreg      unsigned char 
  2297 ;; Registers used:
  2298 ;;		wreg, status,2, status,0, cstack
  2299 ;; Tracked objects:
  2300 ;;		On entry : 0/0
  2301 ;;		On exit  : 0/0
  2302 ;;		Unchanged: 0/0
  2303 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2304 ;;      Params:         0       0       0       0       0       0       0
  2305 ;;      Locals:         1       0       0       0       0       0       0
  2306 ;;      Temps:          0       0       0       0       0       0       0
  2307 ;;      Totals:         1       0       0       0       0       0       0
  2308 ;;Total ram usage:        1 bytes
  2309 ;; Hardware stack levels used: 1
  2310 ;; Hardware stack levels required when called: 2
  2311 ;; This function calls:
  2312 ;;		_scan_key
  2313 ;; This function is called by:
  2314 ;;		_main
  2315 ;;		_view_log
  2316 ;; This function uses a non-reentrant model
  2317 ;;
  2318                           
  2319                           	psect	text2
  2320   002460                     __ptext2:
  2321                           	callstack 0
  2322   002460                     _read_switches:
  2323                           	callstack 27
  2324                           
  2325                           ; BSR set to: 0
  2326                           ;incstack = 0
  2327                           ;read_switches@detection_type stored from wreg
  2328   002460  6E01               	movwf	read_switches@detection_type^0,c
  2329   002462                     
  2330                           ;matrix_keypad.c: 94: unsigned char read_switches(unsigned char detection_type);matrix_k
      +                          eypad.c: 95: {;matrix_keypad.c: 96:  static unsigned char once = 1, key;;matrix_keypad.c
      +                          : 98:  if (detection_type == 1)
  2331   002462  0401               	decf	read_switches@detection_type^0,w,c
  2332   002464  A4D8               	btfss	status,2,c
  2333   002466  EF37  F012         	goto	u2421
  2334   00246A  EF39  F012         	goto	u2420
  2335   00246E                     u2421:
  2336   00246E  EF5D  F012         	goto	l3378
  2337   002472                     u2420:
  2338   002472                     
  2339                           ;matrix_keypad.c: 99:  {;matrix_keypad.c: 100:   key = scan_key();
  2340   002472  EC91  F00F         	call	_scan_key	;wreg free
  2341   002476  6E43               	movwf	read_switches@key^0,c
  2342   002478                     
  2343                           ;matrix_keypad.c: 101:   if(key != 0xFF && once )
  2344   002478  2843               	incf	read_switches@key^0,w,c
  2345   00247A  B4D8               	btfsc	status,2,c
  2346   00247C  EF42  F012         	goto	u2431
  2347   002480  EF44  F012         	goto	u2430
  2348   002484                     u2431:
  2349   002484  EF51  F012         	goto	l3374
  2350   002488                     u2430:
  2351   002488  505A               	movf	read_switches@once^0,w,c
  2352   00248A  B4D8               	btfsc	status,2,c
  2353   00248C  EF4A  F012         	goto	u2441
  2354   002490  EF4C  F012         	goto	u2440
  2355   002494                     u2441:
  2356   002494  EF51  F012         	goto	l3374
  2357   002498                     u2440:
  2358   002498                     
  2359                           ;matrix_keypad.c: 102:   {;matrix_keypad.c: 103:    once = 0;
  2360   002498  0E00               	movlw	0
  2361   00249A  6E5A               	movwf	read_switches@once^0,c
  2362                           
  2363                           ;matrix_keypad.c: 104:    return key;
  2364   00249C  5043               	movf	read_switches@key^0,w,c
  2365   00249E  EF6A  F012         	goto	l617
  2366   0024A2                     l3374:
  2367   0024A2  2843               	incf	read_switches@key^0,w,c
  2368   0024A4  A4D8               	btfss	status,2,c
  2369   0024A6  EF57  F012         	goto	u2451
  2370   0024AA  EF59  F012         	goto	u2450
  2371   0024AE                     u2451:
  2372   0024AE  EF69  F012         	goto	l3384
  2373   0024B2                     u2450:
  2374   0024B2                     
  2375                           ;matrix_keypad.c: 107:   {;matrix_keypad.c: 108:    once = 1;
  2376   0024B2  0E01               	movlw	1
  2377   0024B4  6E5A               	movwf	read_switches@once^0,c
  2378   0024B6  EF69  F012         	goto	l3384
  2379   0024BA                     l3378:
  2380   0024BA  5001               	movf	read_switches@detection_type^0,w,c
  2381   0024BC  A4D8               	btfss	status,2,c
  2382   0024BE  EF63  F012         	goto	u2461
  2383   0024C2  EF65  F012         	goto	u2460
  2384   0024C6                     u2461:
  2385   0024C6  EF69  F012         	goto	l3384
  2386   0024CA                     u2460:
  2387   0024CA                     
  2388                           ;matrix_keypad.c: 112:  {;matrix_keypad.c: 113:   return scan_key();
  2389   0024CA  EC91  F00F         	call	_scan_key	;wreg free
  2390   0024CE  EF6A  F012         	goto	l617
  2391   0024D2                     l3384:
  2392                           
  2393                           ;matrix_keypad.c: 116:  return 0xFF;
  2394   0024D2  0EFF               	movlw	255
  2395   0024D4                     l617:
  2396   0024D4  0012               	return		;funcret
  2397   0024D6                     __end_of_read_switches:
  2398                           	callstack 0
  2399                           
  2400 ;; *************** function _scan_key *****************
  2401 ;; Defined at:
  2402 ;;		line 18 in file "matrix_keypad.c"
  2403 ;; Parameters:    Size  Location     Type
  2404 ;;		None
  2405 ;; Auto vars:     Size  Location     Type
  2406 ;;		None
  2407 ;; Return value:  Size  Location     Type
  2408 ;;                  1    wreg      unsigned char 
  2409 ;; Registers used:
  2410 ;;		wreg
  2411 ;; Tracked objects:
  2412 ;;		On entry : 0/0
  2413 ;;		On exit  : 0/0
  2414 ;;		Unchanged: 0/0
  2415 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2416 ;;      Params:         0       0       0       0       0       0       0
  2417 ;;      Locals:         0       0       0       0       0       0       0
  2418 ;;      Temps:          0       0       0       0       0       0       0
  2419 ;;      Totals:         0       0       0       0       0       0       0
  2420 ;;Total ram usage:        0 bytes
  2421 ;; Hardware stack levels used: 1
  2422 ;; Hardware stack levels required when called: 1
  2423 ;; This function calls:
  2424 ;;		Nothing
  2425 ;; This function is called by:
  2426 ;;		_read_switches
  2427 ;; This function uses a non-reentrant model
  2428 ;;
  2429                           
  2430                           	psect	text3
  2431   001F22                     __ptext3:
  2432                           	callstack 0
  2433   001F22                     _scan_key:
  2434                           	callstack 27
  2435   001F22                     
  2436                           ;matrix_keypad.c: 20:  PORTBbits.RB5 = 0;
  2437   001F22  9A81               	bcf	129,5,c	;volatile
  2438                           
  2439                           ;matrix_keypad.c: 21:  PORTBbits.RB6 = 1;
  2440   001F24  8C81               	bsf	129,6,c	;volatile
  2441                           
  2442                           ;matrix_keypad.c: 22:  PORTBbits.RB7 = 1;
  2443   001F26  8E81               	bsf	129,7,c	;volatile
  2444                           
  2445                           ;matrix_keypad.c: 24:  if (PORTBbits.RB1 == 0)
  2446   001F28  B281               	btfsc	129,1,c	;volatile
  2447   001F2A  EF99  F00F         	goto	u2121
  2448   001F2E  EF9B  F00F         	goto	u2120
  2449   001F32                     u2121:
  2450   001F32  EF9E  F00F         	goto	l587
  2451   001F36                     u2120:
  2452   001F36                     
  2453                           ;matrix_keypad.c: 25:  {;matrix_keypad.c: 26:   return 1;
  2454   001F36  0E01               	movlw	1
  2455   001F38  EF14  F010         	goto	l588
  2456   001F3C                     l587:
  2457   001F3C  B481               	btfsc	129,2,c	;volatile
  2458   001F3E  EFA3  F00F         	goto	u2131
  2459   001F42  EFA5  F00F         	goto	u2130
  2460   001F46                     u2131:
  2461   001F46  EFA8  F00F         	goto	l590
  2462   001F4A                     u2130:
  2463   001F4A                     
  2464                           ;matrix_keypad.c: 29:  {;matrix_keypad.c: 30:   return 4;
  2465   001F4A  0E04               	movlw	4
  2466   001F4C  EF14  F010         	goto	l588
  2467   001F50                     l590:
  2468   001F50  B681               	btfsc	129,3,c	;volatile
  2469   001F52  EFAD  F00F         	goto	u2141
  2470   001F56  EFAF  F00F         	goto	u2140
  2471   001F5A                     u2141:
  2472   001F5A  EFB2  F00F         	goto	l592
  2473   001F5E                     u2140:
  2474   001F5E                     
  2475                           ;matrix_keypad.c: 33:  {;matrix_keypad.c: 34:   return 7;
  2476   001F5E  0E07               	movlw	7
  2477   001F60  EF14  F010         	goto	l588
  2478   001F64                     l592:
  2479   001F64  B881               	btfsc	129,4,c	;volatile
  2480   001F66  EFB7  F00F         	goto	u2151
  2481   001F6A  EFB9  F00F         	goto	u2150
  2482   001F6E                     u2151:
  2483   001F6E  EFBC  F00F         	goto	l589
  2484   001F72                     u2150:
  2485   001F72                     
  2486                           ;matrix_keypad.c: 37:  {;matrix_keypad.c: 38:   return 10;
  2487   001F72  0E0A               	movlw	10
  2488   001F74  EF14  F010         	goto	l588
  2489   001F78                     l589:
  2490                           
  2491                           ;matrix_keypad.c: 41:  PORTBbits.RB5 = 1;
  2492   001F78  8A81               	bsf	129,5,c	;volatile
  2493                           
  2494                           ;matrix_keypad.c: 42:  PORTBbits.RB6 = 0;
  2495   001F7A  9C81               	bcf	129,6,c	;volatile
  2496                           
  2497                           ;matrix_keypad.c: 43:  PORTBbits.RB7 = 1;
  2498   001F7C  8E81               	bsf	129,7,c	;volatile
  2499                           
  2500                           ;matrix_keypad.c: 45:  if (PORTBbits.RB1 == 0)
  2501   001F7E  B281               	btfsc	129,1,c	;volatile
  2502   001F80  EFC4  F00F         	goto	u2161
  2503   001F84  EFC6  F00F         	goto	u2160
  2504   001F88                     u2161:
  2505   001F88  EFC9  F00F         	goto	l595
  2506   001F8C                     u2160:
  2507   001F8C                     
  2508                           ;matrix_keypad.c: 46:  {;matrix_keypad.c: 47:   return 2;
  2509   001F8C  0E02               	movlw	2
  2510   001F8E  EF14  F010         	goto	l588
  2511   001F92                     l595:
  2512   001F92  B481               	btfsc	129,2,c	;volatile
  2513   001F94  EFCE  F00F         	goto	u2171
  2514   001F98  EFD0  F00F         	goto	u2170
  2515   001F9C                     u2171:
  2516   001F9C  EFD3  F00F         	goto	l597
  2517   001FA0                     u2170:
  2518   001FA0                     
  2519                           ;matrix_keypad.c: 50:  {;matrix_keypad.c: 51:   return 5;
  2520   001FA0  0E05               	movlw	5
  2521   001FA2  EF14  F010         	goto	l588
  2522   001FA6                     l597:
  2523   001FA6  B681               	btfsc	129,3,c	;volatile
  2524   001FA8  EFD8  F00F         	goto	u2181
  2525   001FAC  EFDA  F00F         	goto	u2180
  2526   001FB0                     u2181:
  2527   001FB0  EFDD  F00F         	goto	l599
  2528   001FB4                     u2180:
  2529   001FB4                     
  2530                           ;matrix_keypad.c: 54:  {;matrix_keypad.c: 55:   return 8;
  2531   001FB4  0E08               	movlw	8
  2532   001FB6  EF14  F010         	goto	l588
  2533   001FBA                     l599:
  2534   001FBA  B881               	btfsc	129,4,c	;volatile
  2535   001FBC  EFE2  F00F         	goto	u2191
  2536   001FC0  EFE4  F00F         	goto	u2190
  2537   001FC4                     u2191:
  2538   001FC4  EFE7  F00F         	goto	l596
  2539   001FC8                     u2190:
  2540   001FC8                     
  2541                           ;matrix_keypad.c: 58:  {;matrix_keypad.c: 59:   return 11;
  2542   001FC8  0E0B               	movlw	11
  2543   001FCA  EF14  F010         	goto	l588
  2544   001FCE                     l596:
  2545                           
  2546                           ;matrix_keypad.c: 62:  PORTBbits.RB5 = 1;
  2547   001FCE  8A81               	bsf	129,5,c	;volatile
  2548                           
  2549                           ;matrix_keypad.c: 63:  PORTBbits.RB6 = 1;
  2550   001FD0  8C81               	bsf	129,6,c	;volatile
  2551                           
  2552                           ;matrix_keypad.c: 64:  PORTBbits.RB7 = 0;
  2553   001FD2  9E81               	bcf	129,7,c	;volatile
  2554                           
  2555                           ;matrix_keypad.c: 66:  PORTBbits.RB7 = 0;
  2556   001FD4  9E81               	bcf	129,7,c	;volatile
  2557                           
  2558                           ;matrix_keypad.c: 74:  if (PORTBbits.RB1 == 0)
  2559   001FD6  B281               	btfsc	129,1,c	;volatile
  2560   001FD8  EFF0  F00F         	goto	u2201
  2561   001FDC  EFF2  F00F         	goto	u2200
  2562   001FE0                     u2201:
  2563   001FE0  EFF5  F00F         	goto	l602
  2564   001FE4                     u2200:
  2565   001FE4                     
  2566                           ;matrix_keypad.c: 75:  {;matrix_keypad.c: 76:   return 3;
  2567   001FE4  0E03               	movlw	3
  2568   001FE6  EF14  F010         	goto	l588
  2569   001FEA                     l602:
  2570   001FEA  B481               	btfsc	129,2,c	;volatile
  2571   001FEC  EFFA  F00F         	goto	u2211
  2572   001FF0  EFFC  F00F         	goto	u2210
  2573   001FF4                     u2211:
  2574   001FF4  EFFF  F00F         	goto	l604
  2575   001FF8                     u2210:
  2576   001FF8                     
  2577                           ;matrix_keypad.c: 79:  {;matrix_keypad.c: 80:   return 6;
  2578   001FF8  0E06               	movlw	6
  2579   001FFA  EF14  F010         	goto	l588
  2580   001FFE                     l604:
  2581   001FFE  B681               	btfsc	129,3,c	;volatile
  2582   002000  EF04  F010         	goto	u2221
  2583   002004  EF06  F010         	goto	u2220
  2584   002008                     u2221:
  2585   002008  EF09  F010         	goto	l606
  2586   00200C                     u2220:
  2587   00200C                     
  2588                           ;matrix_keypad.c: 83:  {;matrix_keypad.c: 84:   return 9;
  2589   00200C  0E09               	movlw	9
  2590   00200E  EF14  F010         	goto	l588
  2591   002012                     l606:
  2592   002012  B881               	btfsc	129,4,c	;volatile
  2593   002014  EF0E  F010         	goto	u2231
  2594   002018  EF10  F010         	goto	u2230
  2595   00201C                     u2231:
  2596   00201C  EF13  F010         	goto	l605
  2597   002020                     u2230:
  2598   002020                     
  2599                           ;matrix_keypad.c: 87:  {;matrix_keypad.c: 88:   return 12;
  2600   002020  0E0C               	movlw	12
  2601   002022  EF14  F010         	goto	l588
  2602   002026                     l605:
  2603   002026                     
  2604                           ;matrix_keypad.c: 91:  return 0xFF;
  2605   002026  0EFF               	movlw	255
  2606   002028                     l588:
  2607   002028  0012               	return		;funcret
  2608   00202A                     __end_of_scan_key:
  2609                           	callstack 0
  2610                           
  2611 ;; *************** function ___wmul *****************
  2612 ;; Defined at:
  2613 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\Umul16.c"
  2614 ;; Parameters:    Size  Location     Type
  2615 ;;  multiplier      2    0[COMRAM] unsigned int 
  2616 ;;  multiplicand    2    2[COMRAM] unsigned int 
  2617 ;; Auto vars:     Size  Location     Type
  2618 ;;  product         2    4[COMRAM] unsigned int 
  2619 ;; Return value:  Size  Location     Type
  2620 ;;                  2    0[COMRAM] unsigned int 
  2621 ;; Registers used:
  2622 ;;		wreg, status,2, status,0, prodl, prodh
  2623 ;; Tracked objects:
  2624 ;;		On entry : 0/0
  2625 ;;		On exit  : 0/0
  2626 ;;		Unchanged: 0/0
  2627 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2628 ;;      Params:         4       0       0       0       0       0       0
  2629 ;;      Locals:         2       0       0       0       0       0       0
  2630 ;;      Temps:          0       0       0       0       0       0       0
  2631 ;;      Totals:         6       0       0       0       0       0       0
  2632 ;;Total ram usage:        6 bytes
  2633 ;; Hardware stack levels used: 1
  2634 ;; Hardware stack levels required when called: 1
  2635 ;; This function calls:
  2636 ;;		Nothing
  2637 ;; This function is called by:
  2638 ;;		_view_log
  2639 ;; This function uses a non-reentrant model
  2640 ;;
  2641                           
  2642                           	psect	text4
  2643   0028AE                     __ptext4:
  2644                           	callstack 0
  2645   0028AE                     ___wmul:
  2646                           	callstack 28
  2647   0028AE  5001               	movf	___wmul@multiplier^0,w,c
  2648   0028B0  0203               	mulwf	___wmul@multiplicand^0,c
  2649   0028B2  CFF3 F005          	movff	prodl,___wmul@product
  2650   0028B6  CFF4 F006          	movff	prodh,___wmul@product+1
  2651   0028BA  5001               	movf	___wmul@multiplier^0,w,c
  2652   0028BC  0204               	mulwf	(___wmul@multiplicand+1)^0,c
  2653   0028BE  50F3               	movf	243,w,c
  2654   0028C0  2606               	addwf	(___wmul@product+1)^0,f,c
  2655   0028C2  5002               	movf	(___wmul@multiplier+1)^0,w,c
  2656   0028C4  0203               	mulwf	___wmul@multiplicand^0,c
  2657   0028C6  50F3               	movf	243,w,c
  2658   0028C8  2606               	addwf	(___wmul@product+1)^0,f,c
  2659   0028CA  C005  F001         	movff	___wmul@product,?___wmul
  2660   0028CE  C006  F002         	movff	___wmul@product+1,?___wmul+1
  2661   0028D2  0012               	return		;funcret
  2662   0028D4                     __end_of___wmul:
  2663                           	callstack 0
  2664                           
  2665 ;; *************** function _set_time *****************
  2666 ;; Defined at:
  2667 ;;		line 21 in file "set_time.c"
  2668 ;; Parameters:    Size  Location     Type
  2669 ;;  menu_key        1    wreg     unsigned char 
  2670 ;; Auto vars:     Size  Location     Type
  2671 ;;  menu_key        1   15[COMRAM] unsigned char 
  2672 ;;  sec_reg         1   14[COMRAM] unsigned char 
  2673 ;;  min_reg         1   13[COMRAM] unsigned char 
  2674 ;;  hr_reg          1   12[COMRAM] unsigned char 
  2675 ;; Return value:  Size  Location     Type
  2676 ;;                  1    wreg      void 
  2677 ;; Registers used:
  2678 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2679 ;; Tracked objects:
  2680 ;;		On entry : 0/0
  2681 ;;		On exit  : 0/0
  2682 ;;		Unchanged: 0/0
  2683 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2684 ;;      Params:         0       0       0       0       0       0       0
  2685 ;;      Locals:         4       0       0       0       0       0       0
  2686 ;;      Temps:          2       0       0       0       0       0       0
  2687 ;;      Totals:         6       0       0       0       0       0       0
  2688 ;;Total ram usage:        6 bytes
  2689 ;; Hardware stack levels used: 1
  2690 ;; Hardware stack levels required when called: 6
  2691 ;; This function calls:
  2692 ;;		___awdiv
  2693 ;;		___awmod
  2694 ;;		_clcd_print
  2695 ;;		_clcd_putch
  2696 ;;		_clcd_write
  2697 ;;		_store_event
  2698 ;;		_write_ds1307
  2699 ;; This function is called by:
  2700 ;;		_main
  2701 ;; This function uses a non-reentrant model
  2702 ;;
  2703                           
  2704                           	psect	text5
  2705   000012                     __ptext5:
  2706                           	callstack 0
  2707   000012                     _set_time:
  2708                           	callstack 24
  2709                           
  2710                           ;incstack = 0
  2711                           ;set_time@menu_key stored from wreg
  2712   000012  6E10               	movwf	set_time@menu_key^0,c
  2713   000014                     
  2714                           ;set_time.c: 21: void set_time(char menu_key);set_time.c: 22: {;set_time.c: 24:     if(t
      +                          c_flag == 1)
  2715   000014  044D               	decf	_tc_flag^0,w,c
  2716   000016  A4D8               	btfss	status,2,c
  2717   000018  EF10  F000         	goto	u3061
  2718   00001C  EF12  F000         	goto	u3060
  2719   000020                     u3061:
  2720   000020  EF39  F000         	goto	l3814
  2721   000024                     u3060:
  2722   000024                     
  2723                           ;set_time.c: 25:     {;set_time.c: 27:         clcd_print("Time changed",(0x80 + (0)));
  2724   000024  0ECE               	movlw	low STR_26
  2725   000026  6E03               	movwf	clcd_print@data^0,c
  2726   000028  0E2F               	movlw	high STR_26
  2727   00002A  6E04               	movwf	(clcd_print@data+1)^0,c
  2728   00002C  0E80               	movlw	128
  2729   00002E  6E05               	movwf	clcd_print@addr^0,c
  2730   000030  ECA6  F012         	call	_clcd_print	;wreg free
  2731                           
  2732                           ;set_time.c: 28:         clcd_print("successfully",(0xC0 + (0)));
  2733   000034  0EDB               	movlw	low STR_27
  2734   000036  6E03               	movwf	clcd_print@data^0,c
  2735   000038  0E2F               	movlw	high STR_27
  2736   00003A  6E04               	movwf	(clcd_print@data+1)^0,c
  2737   00003C  0EC0               	movlw	192
  2738   00003E  6E05               	movwf	clcd_print@addr^0,c
  2739   000040  ECA6  F012         	call	_clcd_print	;wreg free
  2740   000044                     
  2741                           ;set_time.c: 29:         in_flag=0;
  2742   000044  0E00               	movlw	0
  2743   000046  6E49               	movwf	_in_flag^0,c
  2744   000048                     
  2745                           ;set_time.c: 31:         if(timeout == 0)
  2746   000048  5048               	movf	_timeout^0,w,c
  2747   00004A  A4D8               	btfss	status,2,c
  2748   00004C  EF2A  F000         	goto	u3071
  2749   000050  EF2C  F000         	goto	u3070
  2750   000054                     u3071:
  2751   000054  EF4B  F003         	goto	l3954
  2752   000058                     u3070:
  2753   000058                     
  2754                           ;set_time.c: 32:         {;set_time.c: 33:             clcd_write(0x01, 0);
  2755   000058  0E00               	movlw	0
  2756   00005A  6E01               	movwf	clcd_write@control_bit^0,c
  2757   00005C  0E01               	movlw	1
  2758   00005E  ECFA  F013         	call	_clcd_write
  2759   000062                     
  2760                           ;set_time.c: 34:             in_flag = 0;
  2761   000062  0E00               	movlw	0
  2762   000064  6E49               	movwf	_in_flag^0,c
  2763   000066                     
  2764                           ;set_time.c: 35:             tc_flag = 0;
  2765   000066  0E00               	movlw	0
  2766   000068  6E4D               	movwf	_tc_flag^0,c
  2767   00006A                     
  2768                           ;set_time.c: 36:             main_f = 2;
  2769   00006A  0E02               	movlw	2
  2770   00006C  6E55               	movwf	_main_f^0,c
  2771   00006E  EF4B  F003         	goto	l3954
  2772   000072                     l3814:
  2773   000072  0E02               	movlw	2
  2774   000074  184D               	xorwf	_tc_flag^0,w,c
  2775   000076  A4D8               	btfss	status,2,c
  2776   000078  EF40  F000         	goto	u3081
  2777   00007C  EF42  F000         	goto	u3080
  2778   000080                     u3081:
  2779   000080  EF67  F000         	goto	l3828
  2780   000084                     u3080:
  2781   000084                     
  2782                           ;set_time.c: 41:     {;set_time.c: 43:         clcd_print("    Time not    ",(0x80 + (0)
      +                          ));
  2783   000084  0E8B               	movlw	low STR_28
  2784   000086  6E03               	movwf	clcd_print@data^0,c
  2785   000088  0E2E               	movlw	high STR_28
  2786   00008A  6E04               	movwf	(clcd_print@data+1)^0,c
  2787   00008C  0E80               	movlw	128
  2788   00008E  6E05               	movwf	clcd_print@addr^0,c
  2789   000090  ECA6  F012         	call	_clcd_print	;wreg free
  2790                           
  2791                           ;set_time.c: 44:         clcd_print("    changed     ",(0xC0 + (0)));
  2792   000094  0E7A               	movlw	low STR_29
  2793   000096  6E03               	movwf	clcd_print@data^0,c
  2794   000098  0E2E               	movlw	high STR_29
  2795   00009A  6E04               	movwf	(clcd_print@data+1)^0,c
  2796   00009C  0EC0               	movlw	192
  2797   00009E  6E05               	movwf	clcd_print@addr^0,c
  2798   0000A0  ECA6  F012         	call	_clcd_print	;wreg free
  2799   0000A4                     
  2800                           ;set_time.c: 45:         in_flag=0;
  2801   0000A4  0E00               	movlw	0
  2802   0000A6  6E49               	movwf	_in_flag^0,c
  2803   0000A8                     
  2804                           ;set_time.c: 47:         if(timeout == 0)
  2805   0000A8  5048               	movf	_timeout^0,w,c
  2806   0000AA  A4D8               	btfss	status,2,c
  2807   0000AC  EF5A  F000         	goto	u3091
  2808   0000B0  EF5C  F000         	goto	u3090
  2809   0000B4                     u3091:
  2810   0000B4  EF4B  F003         	goto	l3954
  2811   0000B8                     u3090:
  2812   0000B8                     
  2813                           ;set_time.c: 48:         {;set_time.c: 49:             clcd_write(0x01, 0);
  2814   0000B8  0E00               	movlw	0
  2815   0000BA  6E01               	movwf	clcd_write@control_bit^0,c
  2816   0000BC  0E01               	movlw	1
  2817   0000BE  ECFA  F013         	call	_clcd_write
  2818   0000C2                     
  2819                           ;set_time.c: 50:             main_f = 2;
  2820   0000C2  0E02               	movlw	2
  2821   0000C4  6E55               	movwf	_main_f^0,c
  2822   0000C6                     
  2823                           ;set_time.c: 51:             tc_flag = 0;
  2824   0000C6  0E00               	movlw	0
  2825   0000C8  6E4D               	movwf	_tc_flag^0,c
  2826   0000CA  EF4B  F003         	goto	l3954
  2827   0000CE                     l3828:
  2828                           
  2829                           ;set_time.c: 56:     {;set_time.c: 57:         clcd_print("HH:MM:SS",(0x80 + (3)));
  2830   0000CE  0EE8               	movlw	low STR_30
  2831   0000D0  6E03               	movwf	clcd_print@data^0,c
  2832   0000D2  0E2F               	movlw	high STR_30
  2833   0000D4  6E04               	movwf	(clcd_print@data+1)^0,c
  2834   0000D6  0E83               	movlw	131
  2835   0000D8  6E05               	movwf	clcd_print@addr^0,c
  2836   0000DA  ECA6  F012         	call	_clcd_print	;wreg free
  2837   0000DE                     
  2838                           ;set_time.c: 59:         if(in_flag == 0)
  2839   0000DE  5049               	movf	_in_flag^0,w,c
  2840   0000E0  A4D8               	btfss	status,2,c
  2841   0000E2  EF75  F000         	goto	u3101
  2842   0000E6  EF77  F000         	goto	u3100
  2843   0000EA                     u3101:
  2844   0000EA  EF90  F000         	goto	l3840
  2845   0000EE                     u3100:
  2846   0000EE                     
  2847                           ;set_time.c: 60:         {;set_time.c: 61:             hr=(time[0]-48)*10 + time[1]-48;
  2848   0000EE  0100               	movlb	0	; () banked
  2849   0000F0  51A3               	movf	_time& (0+255),w,b
  2850   0000F2  0D0A               	mullw	10
  2851   0000F4  50F3               	movf	243,w,c
  2852   0000F6  25A4               	addwf	(_time+1)& (0+255),w,b
  2853   0000F8  0FF0               	addlw	240
  2854   0000FA  6E47               	movwf	_hr^0,c
  2855                           
  2856                           ;set_time.c: 62:             min=(time[3]-48)*10 + time[4]-48;
  2857   0000FC  51A6               	movf	(_time+3)& (0+255),w,b
  2858   0000FE  0D0A               	mullw	10
  2859   000100  50F3               	movf	243,w,c
  2860   000102  25A7               	addwf	(_time+4)& (0+255),w,b
  2861   000104  0FF0               	addlw	240
  2862   000106  6E46               	movwf	_min^0,c
  2863                           
  2864                           ;set_time.c: 63:             secs=(time[6]-48)*10 + time[7]-48;
  2865   000108  51A9               	movf	(_time+6)& (0+255),w,b
  2866   00010A  0D0A               	mullw	10
  2867   00010C  50F3               	movf	243,w,c
  2868   00010E  25AA               	addwf	(_time+7)& (0+255),w,b
  2869   000110  0FF0               	addlw	240
  2870   000112  6E45               	movwf	_secs^0,c
  2871   000114                     
  2872                           ; BSR set to: 0
  2873                           ;set_time.c: 64:             in_flag=1;
  2874   000114  0E01               	movlw	1
  2875   000116  6E49               	movwf	_in_flag^0,c
  2876   000118                     
  2877                           ; BSR set to: 0
  2878                           ;set_time.c: 66:             ev_ind = 11;
  2879   000118  0E0B               	movlw	11
  2880   00011A  6E56               	movwf	_ev_ind^0,c
  2881   00011C                     
  2882                           ; BSR set to: 0
  2883                           ;set_time.c: 67:             store_event();
  2884   00011C  ECDA  F00E         	call	_store_event	;wreg free
  2885   000120                     l3840:
  2886                           
  2887                           ;set_time.c: 70:         if(field == 0)
  2888   000120  5044               	movf	_field^0,w,c
  2889   000122  A4D8               	btfss	status,2,c
  2890   000124  EF96  F000         	goto	u3111
  2891   000128  EF98  F000         	goto	u3110
  2892   00012C                     u3111:
  2893   00012C  EF11  F001         	goto	l3858
  2894   000130                     u3110:
  2895   000130                     
  2896                           ;set_time.c: 71:         {;set_time.c: 72:             clcd_putch(hr%10+48,(0xC0 + (4)))
      +                          ;
  2897   000130  0EC4               	movlw	196
  2898   000132  6E09               	movwf	clcd_putch@addr^0,c
  2899   000134  C047  F001         	movff	_hr,___awmod@dividend
  2900   000138  6A02               	clrf	(___awmod@dividend+1)^0,c
  2901   00013A  0E00               	movlw	0
  2902   00013C  6E04               	movwf	(___awmod@divisor+1)^0,c
  2903   00013E  0E0A               	movlw	10
  2904   000140  6E03               	movwf	___awmod@divisor^0,c
  2905   000142  ECFA  F010         	call	___awmod	;wreg free
  2906   000146  5001               	movf	?___awmod^0,w,c
  2907   000148  0F30               	addlw	48
  2908   00014A  ECB5  F014         	call	_clcd_putch
  2909                           
  2910                           ;set_time.c: 73:             clcd_putch(hr/10+48,(0xC0 + (3)));
  2911   00014E  0EC3               	movlw	195
  2912   000150  6E09               	movwf	clcd_putch@addr^0,c
  2913   000152  C047  F001         	movff	_hr,___awdiv@dividend
  2914   000156  6A02               	clrf	(___awdiv@dividend+1)^0,c
  2915   000158  0E00               	movlw	0
  2916   00015A  6E04               	movwf	(___awdiv@divisor+1)^0,c
  2917   00015C  0E0A               	movlw	10
  2918   00015E  6E03               	movwf	___awdiv@divisor^0,c
  2919   000160  EC98  F010         	call	___awdiv	;wreg free
  2920   000164  5001               	movf	?___awdiv^0,w,c
  2921   000166  0F30               	addlw	48
  2922   000168  ECB5  F014         	call	_clcd_putch
  2923   00016C                     
  2924                           ;set_time.c: 74:             clcd_putch(':',(0xC0 + (5)));
  2925   00016C  0EC5               	movlw	197
  2926   00016E  6E09               	movwf	clcd_putch@addr^0,c
  2927   000170  0E3A               	movlw	58
  2928   000172  ECB5  F014         	call	_clcd_putch
  2929   000176                     
  2930                           ;set_time.c: 75:             clcd_putch(min%10+48,(0xC0 + (7)));
  2931   000176  0EC7               	movlw	199
  2932   000178  6E09               	movwf	clcd_putch@addr^0,c
  2933   00017A  C046  F001         	movff	_min,___awmod@dividend
  2934   00017E  6A02               	clrf	(___awmod@dividend+1)^0,c
  2935   000180  0E00               	movlw	0
  2936   000182  6E04               	movwf	(___awmod@divisor+1)^0,c
  2937   000184  0E0A               	movlw	10
  2938   000186  6E03               	movwf	___awmod@divisor^0,c
  2939   000188  ECFA  F010         	call	___awmod	;wreg free
  2940   00018C  5001               	movf	?___awmod^0,w,c
  2941   00018E  0F30               	addlw	48
  2942   000190  ECB5  F014         	call	_clcd_putch
  2943   000194                     
  2944                           ;set_time.c: 76:             clcd_putch(min/10+48,(0xC0 + (6)));
  2945   000194  0EC6               	movlw	198
  2946   000196  6E09               	movwf	clcd_putch@addr^0,c
  2947   000198  C046  F001         	movff	_min,___awdiv@dividend
  2948   00019C  6A02               	clrf	(___awdiv@dividend+1)^0,c
  2949   00019E  0E00               	movlw	0
  2950   0001A0  6E04               	movwf	(___awdiv@divisor+1)^0,c
  2951   0001A2  0E0A               	movlw	10
  2952   0001A4  6E03               	movwf	___awdiv@divisor^0,c
  2953   0001A6  EC98  F010         	call	___awdiv	;wreg free
  2954   0001AA  5001               	movf	?___awdiv^0,w,c
  2955   0001AC  0F30               	addlw	48
  2956   0001AE  ECB5  F014         	call	_clcd_putch
  2957   0001B2                     
  2958                           ;set_time.c: 77:             clcd_putch(':',(0xC0 + (8)));
  2959   0001B2  0EC8               	movlw	200
  2960   0001B4  6E09               	movwf	clcd_putch@addr^0,c
  2961   0001B6  0E3A               	movlw	58
  2962   0001B8  ECB5  F014         	call	_clcd_putch
  2963   0001BC                     
  2964                           ;set_time.c: 78:             if(blink)
  2965   0001BC  5039               	movf	_blink^0,w,c
  2966   0001BE  103A               	iorwf	(_blink+1)^0,w,c
  2967   0001C0  B4D8               	btfsc	status,2,c
  2968   0001C2  EFE5  F000         	goto	u3121
  2969   0001C6  EFE7  F000         	goto	u3120
  2970   0001CA                     u3121:
  2971   0001CA  EF07  F001         	goto	l3856
  2972   0001CE                     u3120:
  2973   0001CE                     
  2974                           ;set_time.c: 79:             {;set_time.c: 80:                 clcd_putch(secs%10+48,(0x
      +                          C0 + (10)));
  2975   0001CE  0ECA               	movlw	202
  2976   0001D0  6E09               	movwf	clcd_putch@addr^0,c
  2977   0001D2  C045  F001         	movff	_secs,___awmod@dividend
  2978   0001D6  6A02               	clrf	(___awmod@dividend+1)^0,c
  2979   0001D8  0E00               	movlw	0
  2980   0001DA  6E04               	movwf	(___awmod@divisor+1)^0,c
  2981   0001DC  0E0A               	movlw	10
  2982   0001DE  6E03               	movwf	___awmod@divisor^0,c
  2983   0001E0  ECFA  F010         	call	___awmod	;wreg free
  2984   0001E4  5001               	movf	?___awmod^0,w,c
  2985   0001E6  0F30               	addlw	48
  2986   0001E8  ECB5  F014         	call	_clcd_putch
  2987                           
  2988                           ;set_time.c: 81:                 clcd_putch(secs/10+48,(0xC0 + (9)));
  2989   0001EC  0EC9               	movlw	201
  2990   0001EE  6E09               	movwf	clcd_putch@addr^0,c
  2991   0001F0  C045  F001         	movff	_secs,___awdiv@dividend
  2992   0001F4  6A02               	clrf	(___awdiv@dividend+1)^0,c
  2993   0001F6  0E00               	movlw	0
  2994   0001F8  6E04               	movwf	(___awdiv@divisor+1)^0,c
  2995   0001FA  0E0A               	movlw	10
  2996   0001FC  6E03               	movwf	___awdiv@divisor^0,c
  2997   0001FE  EC98  F010         	call	___awdiv	;wreg free
  2998   000202  5001               	movf	?___awdiv^0,w,c
  2999   000204  0F30               	addlw	48
  3000   000206  ECB5  F014         	call	_clcd_putch
  3001                           
  3002                           ;set_time.c: 82:             }
  3003   00020A  EF12  F002         	goto	l3894
  3004   00020E                     l3856:
  3005                           
  3006                           ;set_time.c: 84:             {;set_time.c: 85:                 clcd_print("  ",(0xC0 + (
      +                          9)));
  3007   00020E  0E65               	movlw	low (STR_7+14)
  3008   000210  6E03               	movwf	clcd_print@data^0,c
  3009   000212  0E2F               	movlw	high (STR_7+14)
  3010   000214  6E04               	movwf	(clcd_print@data+1)^0,c
  3011   000216  0EC9               	movlw	201
  3012   000218  6E05               	movwf	clcd_print@addr^0,c
  3013   00021A  ECA6  F012         	call	_clcd_print	;wreg free
  3014   00021E  EF12  F002         	goto	l3894
  3015   000222                     l3858:
  3016   000222  0444               	decf	_field^0,w,c
  3017   000224  A4D8               	btfss	status,2,c
  3018   000226  EF17  F001         	goto	u3131
  3019   00022A  EF19  F001         	goto	u3130
  3020   00022E                     u3131:
  3021   00022E  EF92  F001         	goto	l3876
  3022   000232                     u3130:
  3023   000232                     
  3024                           ;set_time.c: 90:         {;set_time.c: 91:             clcd_putch(hr%10+48,(0xC0 + (4)))
      +                          ;
  3025   000232  0EC4               	movlw	196
  3026   000234  6E09               	movwf	clcd_putch@addr^0,c
  3027   000236  C047  F001         	movff	_hr,___awmod@dividend
  3028   00023A  6A02               	clrf	(___awmod@dividend+1)^0,c
  3029   00023C  0E00               	movlw	0
  3030   00023E  6E04               	movwf	(___awmod@divisor+1)^0,c
  3031   000240  0E0A               	movlw	10
  3032   000242  6E03               	movwf	___awmod@divisor^0,c
  3033   000244  ECFA  F010         	call	___awmod	;wreg free
  3034   000248  5001               	movf	?___awmod^0,w,c
  3035   00024A  0F30               	addlw	48
  3036   00024C  ECB5  F014         	call	_clcd_putch
  3037                           
  3038                           ;set_time.c: 92:             clcd_putch(hr/10+48,(0xC0 + (3)));
  3039   000250  0EC3               	movlw	195
  3040   000252  6E09               	movwf	clcd_putch@addr^0,c
  3041   000254  C047  F001         	movff	_hr,___awdiv@dividend
  3042   000258  6A02               	clrf	(___awdiv@dividend+1)^0,c
  3043   00025A  0E00               	movlw	0
  3044   00025C  6E04               	movwf	(___awdiv@divisor+1)^0,c
  3045   00025E  0E0A               	movlw	10
  3046   000260  6E03               	movwf	___awdiv@divisor^0,c
  3047   000262  EC98  F010         	call	___awdiv	;wreg free
  3048   000266  5001               	movf	?___awdiv^0,w,c
  3049   000268  0F30               	addlw	48
  3050   00026A  ECB5  F014         	call	_clcd_putch
  3051   00026E                     
  3052                           ;set_time.c: 93:             clcd_putch(':',(0xC0 + (5)));
  3053   00026E  0EC5               	movlw	197
  3054   000270  6E09               	movwf	clcd_putch@addr^0,c
  3055   000272  0E3A               	movlw	58
  3056   000274  ECB5  F014         	call	_clcd_putch
  3057   000278                     
  3058                           ;set_time.c: 94:             clcd_putch(secs%10+48,(0xC0 + (10)));
  3059   000278  0ECA               	movlw	202
  3060   00027A  6E09               	movwf	clcd_putch@addr^0,c
  3061   00027C  C045  F001         	movff	_secs,___awmod@dividend
  3062   000280  6A02               	clrf	(___awmod@dividend+1)^0,c
  3063   000282  0E00               	movlw	0
  3064   000284  6E04               	movwf	(___awmod@divisor+1)^0,c
  3065   000286  0E0A               	movlw	10
  3066   000288  6E03               	movwf	___awmod@divisor^0,c
  3067   00028A  ECFA  F010         	call	___awmod	;wreg free
  3068   00028E  5001               	movf	?___awmod^0,w,c
  3069   000290  0F30               	addlw	48
  3070   000292  ECB5  F014         	call	_clcd_putch
  3071   000296                     
  3072                           ;set_time.c: 95:             clcd_putch(secs/10+48,(0xC0 + (9)));
  3073   000296  0EC9               	movlw	201
  3074   000298  6E09               	movwf	clcd_putch@addr^0,c
  3075   00029A  C045  F001         	movff	_secs,___awdiv@dividend
  3076   00029E  6A02               	clrf	(___awdiv@dividend+1)^0,c
  3077   0002A0  0E00               	movlw	0
  3078   0002A2  6E04               	movwf	(___awdiv@divisor+1)^0,c
  3079   0002A4  0E0A               	movlw	10
  3080   0002A6  6E03               	movwf	___awdiv@divisor^0,c
  3081   0002A8  EC98  F010         	call	___awdiv	;wreg free
  3082   0002AC  5001               	movf	?___awdiv^0,w,c
  3083   0002AE  0F30               	addlw	48
  3084   0002B0  ECB5  F014         	call	_clcd_putch
  3085   0002B4                     
  3086                           ;set_time.c: 97:             clcd_putch(':',(0xC0 + (8)));
  3087   0002B4  0EC8               	movlw	200
  3088   0002B6  6E09               	movwf	clcd_putch@addr^0,c
  3089   0002B8  0E3A               	movlw	58
  3090   0002BA  ECB5  F014         	call	_clcd_putch
  3091   0002BE                     
  3092                           ;set_time.c: 98:             if(blink)
  3093   0002BE  5039               	movf	_blink^0,w,c
  3094   0002C0  103A               	iorwf	(_blink+1)^0,w,c
  3095   0002C2  B4D8               	btfsc	status,2,c
  3096   0002C4  EF66  F001         	goto	u3141
  3097   0002C8  EF68  F001         	goto	u3140
  3098   0002CC                     u3141:
  3099   0002CC  EF88  F001         	goto	l3874
  3100   0002D0                     u3140:
  3101   0002D0                     
  3102                           ;set_time.c: 99:             {;set_time.c: 100:                 clcd_putch(min%10+48,(0x
      +                          C0 + (7)));
  3103   0002D0  0EC7               	movlw	199
  3104   0002D2  6E09               	movwf	clcd_putch@addr^0,c
  3105   0002D4  C046  F001         	movff	_min,___awmod@dividend
  3106   0002D8  6A02               	clrf	(___awmod@dividend+1)^0,c
  3107   0002DA  0E00               	movlw	0
  3108   0002DC  6E04               	movwf	(___awmod@divisor+1)^0,c
  3109   0002DE  0E0A               	movlw	10
  3110   0002E0  6E03               	movwf	___awmod@divisor^0,c
  3111   0002E2  ECFA  F010         	call	___awmod	;wreg free
  3112   0002E6  5001               	movf	?___awmod^0,w,c
  3113   0002E8  0F30               	addlw	48
  3114   0002EA  ECB5  F014         	call	_clcd_putch
  3115                           
  3116                           ;set_time.c: 101:                 clcd_putch(min/10+48,(0xC0 + (6)));
  3117   0002EE  0EC6               	movlw	198
  3118   0002F0  6E09               	movwf	clcd_putch@addr^0,c
  3119   0002F2  C046  F001         	movff	_min,___awdiv@dividend
  3120   0002F6  6A02               	clrf	(___awdiv@dividend+1)^0,c
  3121   0002F8  0E00               	movlw	0
  3122   0002FA  6E04               	movwf	(___awdiv@divisor+1)^0,c
  3123   0002FC  0E0A               	movlw	10
  3124   0002FE  6E03               	movwf	___awdiv@divisor^0,c
  3125   000300  EC98  F010         	call	___awdiv	;wreg free
  3126   000304  5001               	movf	?___awdiv^0,w,c
  3127   000306  0F30               	addlw	48
  3128   000308  ECB5  F014         	call	_clcd_putch
  3129                           
  3130                           ;set_time.c: 102:             }
  3131   00030C  EF12  F002         	goto	l3894
  3132   000310                     l3874:
  3133                           
  3134                           ;set_time.c: 104:             {;set_time.c: 105:                 clcd_print("  ",(0xC0 +
      +                           (6)));
  3135   000310  0E65               	movlw	low (STR_7+14)
  3136   000312  6E03               	movwf	clcd_print@data^0,c
  3137   000314  0E2F               	movlw	high (STR_7+14)
  3138   000316  6E04               	movwf	(clcd_print@data+1)^0,c
  3139   000318  0EC6               	movlw	198
  3140   00031A  6E05               	movwf	clcd_print@addr^0,c
  3141   00031C  ECA6  F012         	call	_clcd_print	;wreg free
  3142   000320  EF12  F002         	goto	l3894
  3143   000324                     l3876:
  3144   000324  0E02               	movlw	2
  3145   000326  1844               	xorwf	_field^0,w,c
  3146   000328  A4D8               	btfss	status,2,c
  3147   00032A  EF99  F001         	goto	u3151
  3148   00032E  EF9B  F001         	goto	u3150
  3149   000332                     u3151:
  3150   000332  EF12  F002         	goto	l3894
  3151   000336                     u3150:
  3152   000336                     
  3153                           ;set_time.c: 110:         {;set_time.c: 111:             clcd_putch(secs%10+48,(0xC0 + (
      +                          10)));
  3154   000336  0ECA               	movlw	202
  3155   000338  6E09               	movwf	clcd_putch@addr^0,c
  3156   00033A  C045  F001         	movff	_secs,___awmod@dividend
  3157   00033E  6A02               	clrf	(___awmod@dividend+1)^0,c
  3158   000340  0E00               	movlw	0
  3159   000342  6E04               	movwf	(___awmod@divisor+1)^0,c
  3160   000344  0E0A               	movlw	10
  3161   000346  6E03               	movwf	___awmod@divisor^0,c
  3162   000348  ECFA  F010         	call	___awmod	;wreg free
  3163   00034C  5001               	movf	?___awmod^0,w,c
  3164   00034E  0F30               	addlw	48
  3165   000350  ECB5  F014         	call	_clcd_putch
  3166                           
  3167                           ;set_time.c: 112:             clcd_putch(secs/10+48,(0xC0 + (9)));
  3168   000354  0EC9               	movlw	201
  3169   000356  6E09               	movwf	clcd_putch@addr^0,c
  3170   000358  C045  F001         	movff	_secs,___awdiv@dividend
  3171   00035C  6A02               	clrf	(___awdiv@dividend+1)^0,c
  3172   00035E  0E00               	movlw	0
  3173   000360  6E04               	movwf	(___awdiv@divisor+1)^0,c
  3174   000362  0E0A               	movlw	10
  3175   000364  6E03               	movwf	___awdiv@divisor^0,c
  3176   000366  EC98  F010         	call	___awdiv	;wreg free
  3177   00036A  5001               	movf	?___awdiv^0,w,c
  3178   00036C  0F30               	addlw	48
  3179   00036E  ECB5  F014         	call	_clcd_putch
  3180   000372                     
  3181                           ;set_time.c: 113:             clcd_putch(':',(0xC0 + (5)));
  3182   000372  0EC5               	movlw	197
  3183   000374  6E09               	movwf	clcd_putch@addr^0,c
  3184   000376  0E3A               	movlw	58
  3185   000378  ECB5  F014         	call	_clcd_putch
  3186   00037C                     
  3187                           ;set_time.c: 114:             clcd_putch(min%10+48,(0xC0 + (7)));
  3188   00037C  0EC7               	movlw	199
  3189   00037E  6E09               	movwf	clcd_putch@addr^0,c
  3190   000380  C046  F001         	movff	_min,___awmod@dividend
  3191   000384  6A02               	clrf	(___awmod@dividend+1)^0,c
  3192   000386  0E00               	movlw	0
  3193   000388  6E04               	movwf	(___awmod@divisor+1)^0,c
  3194   00038A  0E0A               	movlw	10
  3195   00038C  6E03               	movwf	___awmod@divisor^0,c
  3196   00038E  ECFA  F010         	call	___awmod	;wreg free
  3197   000392  5001               	movf	?___awmod^0,w,c
  3198   000394  0F30               	addlw	48
  3199   000396  ECB5  F014         	call	_clcd_putch
  3200   00039A                     
  3201                           ;set_time.c: 115:             clcd_putch(min/10+48,(0xC0 + (6)));
  3202   00039A  0EC6               	movlw	198
  3203   00039C  6E09               	movwf	clcd_putch@addr^0,c
  3204   00039E  C046  F001         	movff	_min,___awdiv@dividend
  3205   0003A2  6A02               	clrf	(___awdiv@dividend+1)^0,c
  3206   0003A4  0E00               	movlw	0
  3207   0003A6  6E04               	movwf	(___awdiv@divisor+1)^0,c
  3208   0003A8  0E0A               	movlw	10
  3209   0003AA  6E03               	movwf	___awdiv@divisor^0,c
  3210   0003AC  EC98  F010         	call	___awdiv	;wreg free
  3211   0003B0  5001               	movf	?___awdiv^0,w,c
  3212   0003B2  0F30               	addlw	48
  3213   0003B4  ECB5  F014         	call	_clcd_putch
  3214   0003B8                     
  3215                           ;set_time.c: 116:             clcd_putch(':',(0xC0 + (8)));
  3216   0003B8  0EC8               	movlw	200
  3217   0003BA  6E09               	movwf	clcd_putch@addr^0,c
  3218   0003BC  0E3A               	movlw	58
  3219   0003BE  ECB5  F014         	call	_clcd_putch
  3220   0003C2                     
  3221                           ;set_time.c: 117:             if(blink)
  3222   0003C2  5039               	movf	_blink^0,w,c
  3223   0003C4  103A               	iorwf	(_blink+1)^0,w,c
  3224   0003C6  B4D8               	btfsc	status,2,c
  3225   0003C8  EFE8  F001         	goto	u3161
  3226   0003CC  EFEA  F001         	goto	u3160
  3227   0003D0                     u3161:
  3228   0003D0  EF0A  F002         	goto	l3892
  3229   0003D4                     u3160:
  3230   0003D4                     
  3231                           ;set_time.c: 118:             {;set_time.c: 119:                 clcd_putch(hr%10+48,(0x
      +                          C0 + (4)));
  3232   0003D4  0EC4               	movlw	196
  3233   0003D6  6E09               	movwf	clcd_putch@addr^0,c
  3234   0003D8  C047  F001         	movff	_hr,___awmod@dividend
  3235   0003DC  6A02               	clrf	(___awmod@dividend+1)^0,c
  3236   0003DE  0E00               	movlw	0
  3237   0003E0  6E04               	movwf	(___awmod@divisor+1)^0,c
  3238   0003E2  0E0A               	movlw	10
  3239   0003E4  6E03               	movwf	___awmod@divisor^0,c
  3240   0003E6  ECFA  F010         	call	___awmod	;wreg free
  3241   0003EA  5001               	movf	?___awmod^0,w,c
  3242   0003EC  0F30               	addlw	48
  3243   0003EE  ECB5  F014         	call	_clcd_putch
  3244                           
  3245                           ;set_time.c: 120:                 clcd_putch(hr/10+48,(0xC0 + (3)));
  3246   0003F2  0EC3               	movlw	195
  3247   0003F4  6E09               	movwf	clcd_putch@addr^0,c
  3248   0003F6  C047  F001         	movff	_hr,___awdiv@dividend
  3249   0003FA  6A02               	clrf	(___awdiv@dividend+1)^0,c
  3250   0003FC  0E00               	movlw	0
  3251   0003FE  6E04               	movwf	(___awdiv@divisor+1)^0,c
  3252   000400  0E0A               	movlw	10
  3253   000402  6E03               	movwf	___awdiv@divisor^0,c
  3254   000404  EC98  F010         	call	___awdiv	;wreg free
  3255   000408  5001               	movf	?___awdiv^0,w,c
  3256   00040A  0F30               	addlw	48
  3257   00040C  ECB5  F014         	call	_clcd_putch
  3258                           
  3259                           ;set_time.c: 121:             }
  3260   000410  EF12  F002         	goto	l3894
  3261   000414                     l3892:
  3262                           
  3263                           ;set_time.c: 123:             {;set_time.c: 124:                 clcd_print("  ",(0xC0 +
      +                           (3)));
  3264   000414  0E65               	movlw	low (STR_7+14)
  3265   000416  6E03               	movwf	clcd_print@data^0,c
  3266   000418  0E2F               	movlw	high (STR_7+14)
  3267   00041A  6E04               	movwf	(clcd_print@data+1)^0,c
  3268   00041C  0EC3               	movlw	195
  3269   00041E  6E05               	movwf	clcd_print@addr^0,c
  3270   000420  ECA6  F012         	call	_clcd_print	;wreg free
  3271   000424                     l3894:
  3272                           
  3273                           ;set_time.c: 128:         if(menu_key == 11)
  3274   000424  0E0B               	movlw	11
  3275   000426  1810               	xorwf	set_time@menu_key^0,w,c
  3276   000428  A4D8               	btfss	status,2,c
  3277   00042A  EF19  F002         	goto	u3171
  3278   00042E  EF1B  F002         	goto	u3170
  3279   000432                     u3171:
  3280   000432  EFA1  F002         	goto	l3920
  3281   000436                     u3170:
  3282   000436                     
  3283                           ;set_time.c: 129:         {;set_time.c: 130:             time3++;
  3284   000436  0100               	movlb	0	; () banked
  3285   000438  4B8F               	infsnz	_time3& (0+255),f,b
  3286   00043A  2B90               	incf	(_time3+1)& (0+255),f,b
  3287   00043C                     
  3288                           ; BSR set to: 0
  3289                           ;set_time.c: 131:             if(time3 > 200)
  3290   00043C  5190               	movf	(_time3+1)& (0+255),w,b
  3291   00043E  E109               	bnz	u3180
  3292   000440  0EC9               	movlw	201
  3293   000442  5D8F               	subwf	_time3& (0+255),w,b
  3294   000444  A0D8               	btfss	status,0,c
  3295   000446  EF27  F002         	goto	u3181
  3296   00044A  EF29  F002         	goto	u3180
  3297   00044E                     u3181:
  3298   00044E  EFC9  F002         	goto	l3928
  3299   000452                     u3180:
  3300   000452                     
  3301                           ; BSR set to: 0
  3302                           ;set_time.c: 132:             {;set_time.c: 133:                 time3 = 0;
  3303   000452  0E00               	movlw	0
  3304   000454  6F90               	movwf	(_time3+1)& (0+255),b
  3305   000456  0E00               	movlw	0
  3306   000458  6F8F               	movwf	_time3& (0+255),b
  3307   00045A                     
  3308                           ; BSR set to: 0
  3309                           ;set_time.c: 135:                 unsigned char hr_reg = ((hr/10)&0xF)<<4 | (hr%10)&0xF;
  3310   00045A  C047  F001         	movff	_hr,___awmod@dividend
  3311   00045E  6A02               	clrf	(___awmod@dividend+1)^0,c
  3312   000460  0E00               	movlw	0
  3313   000462  6E04               	movwf	(___awmod@divisor+1)^0,c
  3314   000464  0E0A               	movlw	10
  3315   000466  6E03               	movwf	___awmod@divisor^0,c
  3316   000468  ECFA  F010         	call	___awmod	;wreg free
  3317   00046C  C001  F00B         	movff	?___awmod,??_set_time
  3318   000470  C002  F00C         	movff	?___awmod+1,??_set_time+1
  3319   000474  0E0F               	movlw	15
  3320   000476  160B               	andwf	??_set_time^0,f,c
  3321   000478  C047  F001         	movff	_hr,___awdiv@dividend
  3322   00047C  6A02               	clrf	(___awdiv@dividend+1)^0,c
  3323   00047E  0E00               	movlw	0
  3324   000480  6E04               	movwf	(___awdiv@divisor+1)^0,c
  3325   000482  0E0A               	movlw	10
  3326   000484  6E03               	movwf	___awdiv@divisor^0,c
  3327   000486  EC98  F010         	call	___awdiv	;wreg free
  3328   00048A  0E0F               	movlw	15
  3329   00048C  1601               	andwf	?___awdiv^0,f,c
  3330   00048E  3801               	swapf	?___awdiv^0,w,c
  3331   000490  0BF0               	andlw	240
  3332   000492  100B               	iorwf	??_set_time^0,w,c
  3333   000494  6E0D               	movwf	set_time@hr_reg^0,c
  3334   000496                     
  3335                           ;set_time.c: 136:                 unsigned char min_reg = ((min/10)&0xF)<<4 | (min%10)&0
      +                          xF;
  3336   000496  C046  F001         	movff	_min,___awmod@dividend
  3337   00049A  6A02               	clrf	(___awmod@dividend+1)^0,c
  3338   00049C  0E00               	movlw	0
  3339   00049E  6E04               	movwf	(___awmod@divisor+1)^0,c
  3340   0004A0  0E0A               	movlw	10
  3341   0004A2  6E03               	movwf	___awmod@divisor^0,c
  3342   0004A4  ECFA  F010         	call	___awmod	;wreg free
  3343   0004A8  C001  F00B         	movff	?___awmod,??_set_time
  3344   0004AC  C002  F00C         	movff	?___awmod+1,??_set_time+1
  3345   0004B0  0E0F               	movlw	15
  3346   0004B2  160B               	andwf	??_set_time^0,f,c
  3347   0004B4  C046  F001         	movff	_min,___awdiv@dividend
  3348   0004B8  6A02               	clrf	(___awdiv@dividend+1)^0,c
  3349   0004BA  0E00               	movlw	0
  3350   0004BC  6E04               	movwf	(___awdiv@divisor+1)^0,c
  3351   0004BE  0E0A               	movlw	10
  3352   0004C0  6E03               	movwf	___awdiv@divisor^0,c
  3353   0004C2  EC98  F010         	call	___awdiv	;wreg free
  3354   0004C6  0E0F               	movlw	15
  3355   0004C8  1601               	andwf	?___awdiv^0,f,c
  3356   0004CA  3801               	swapf	?___awdiv^0,w,c
  3357   0004CC  0BF0               	andlw	240
  3358   0004CE  100B               	iorwf	??_set_time^0,w,c
  3359   0004D0  6E0E               	movwf	set_time@min_reg^0,c
  3360   0004D2                     
  3361                           ;set_time.c: 137:                 unsigned char sec_reg = ((secs/10)&0xF)<<4 | (secs%10)
      +                          &0xF;
  3362   0004D2  C045  F001         	movff	_secs,___awmod@dividend
  3363   0004D6  6A02               	clrf	(___awmod@dividend+1)^0,c
  3364   0004D8  0E00               	movlw	0
  3365   0004DA  6E04               	movwf	(___awmod@divisor+1)^0,c
  3366   0004DC  0E0A               	movlw	10
  3367   0004DE  6E03               	movwf	___awmod@divisor^0,c
  3368   0004E0  ECFA  F010         	call	___awmod	;wreg free
  3369   0004E4  C001  F00B         	movff	?___awmod,??_set_time
  3370   0004E8  C002  F00C         	movff	?___awmod+1,??_set_time+1
  3371   0004EC  0E0F               	movlw	15
  3372   0004EE  160B               	andwf	??_set_time^0,f,c
  3373   0004F0  C045  F001         	movff	_secs,___awdiv@dividend
  3374   0004F4  6A02               	clrf	(___awdiv@dividend+1)^0,c
  3375   0004F6  0E00               	movlw	0
  3376   0004F8  6E04               	movwf	(___awdiv@divisor+1)^0,c
  3377   0004FA  0E0A               	movlw	10
  3378   0004FC  6E03               	movwf	___awdiv@divisor^0,c
  3379   0004FE  EC98  F010         	call	___awdiv	;wreg free
  3380   000502  0E0F               	movlw	15
  3381   000504  1601               	andwf	?___awdiv^0,f,c
  3382   000506  3801               	swapf	?___awdiv^0,w,c
  3383   000508  0BF0               	andlw	240
  3384   00050A  100B               	iorwf	??_set_time^0,w,c
  3385   00050C  6E0F               	movwf	set_time@sec_reg^0,c
  3386   00050E                     
  3387                           ;set_time.c: 140:                 write_ds1307(0x02, hr_reg);
  3388   00050E  C00D  F002         	movff	set_time@hr_reg,write_ds1307@data
  3389   000512  0E02               	movlw	2
  3390   000514  EC9A  F014         	call	_write_ds1307
  3391   000518                     
  3392                           ;set_time.c: 141:                 write_ds1307(0x01, min_reg);
  3393   000518  C00E  F002         	movff	set_time@min_reg,write_ds1307@data
  3394   00051C  0E01               	movlw	1
  3395   00051E  EC9A  F014         	call	_write_ds1307
  3396   000522                     
  3397                           ;set_time.c: 142:                 write_ds1307(0x00, sec_reg);
  3398   000522  C00F  F002         	movff	set_time@sec_reg,write_ds1307@data
  3399   000526  0E00               	movlw	0
  3400   000528  EC9A  F014         	call	_write_ds1307
  3401   00052C                     
  3402                           ;set_time.c: 143:                 timeout = 3;
  3403   00052C  0E03               	movlw	3
  3404   00052E  6E48               	movwf	_timeout^0,c
  3405   000530                     
  3406                           ;set_time.c: 144:                 tc_flag = 1;
  3407   000530  0E01               	movlw	1
  3408   000532  6E4D               	movwf	_tc_flag^0,c
  3409   000534                     
  3410                           ;set_time.c: 145:                 clcd_write(0x01, 0);
  3411   000534  0E00               	movlw	0
  3412   000536  6E01               	movwf	clcd_write@control_bit^0,c
  3413   000538  0E01               	movlw	1
  3414   00053A  ECFA  F013         	call	_clcd_write
  3415   00053E  EFC9  F002         	goto	l3928
  3416   000542                     l3920:
  3417   000542  0100               	movlb	0	; () banked
  3418   000544  5190               	movf	(_time3+1)& (0+255),w,b
  3419   000546  E107               	bnz	u3191
  3420   000548  0EC8               	movlw	200
  3421   00054A  5D8F               	subwf	_time3& (0+255),w,b
  3422   00054C  B0D8               	btfsc	status,0,c
  3423   00054E  EFAB  F002         	goto	u3191
  3424   000552  EFAD  F002         	goto	u3190
  3425   000556                     u3191:
  3426   000556  EFC9  F002         	goto	l3928
  3427   00055A                     u3190:
  3428   00055A                     
  3429                           ; BSR set to: 0
  3430   00055A  518F               	movf	_time3& (0+255),w,b
  3431   00055C  1190               	iorwf	(_time3+1)& (0+255),w,b
  3432   00055E  B4D8               	btfsc	status,2,c
  3433   000560  EFB4  F002         	goto	u3201
  3434   000564  EFB6  F002         	goto	u3200
  3435   000568                     u3201:
  3436   000568  EFC9  F002         	goto	l3928
  3437   00056C                     u3200:
  3438   00056C                     
  3439                           ; BSR set to: 0
  3440                           ;set_time.c: 150:         {;set_time.c: 151:             field=(field+1)%3;
  3441   00056C  0E01               	movlw	1
  3442   00056E  2444               	addwf	_field^0,w,c
  3443   000570  6E01               	movwf	___awmod@dividend^0,c
  3444   000572  6A02               	clrf	(___awmod@dividend+1)^0,c
  3445   000574  0E00               	movlw	0
  3446   000576  2202               	addwfc	(___awmod@dividend+1)^0,f,c
  3447   000578  0E00               	movlw	0
  3448   00057A  6E04               	movwf	(___awmod@divisor+1)^0,c
  3449   00057C  0E03               	movlw	3
  3450   00057E  6E03               	movwf	___awmod@divisor^0,c
  3451   000580  ECFA  F010         	call	___awmod	;wreg free
  3452   000584  5001               	movf	?___awmod^0,w,c
  3453   000586  6E44               	movwf	_field^0,c
  3454   000588                     
  3455                           ;set_time.c: 152:             time3 = 0;
  3456   000588  0E00               	movlw	0
  3457   00058A  0100               	movlb	0	; () banked
  3458   00058C  6F90               	movwf	(_time3+1)& (0+255),b
  3459   00058E  0E00               	movlw	0
  3460   000590  6F8F               	movwf	_time3& (0+255),b
  3461   000592                     l3928:
  3462                           
  3463                           ;set_time.c: 155:         if(menu_key == 12)
  3464   000592  0E0C               	movlw	12
  3465   000594  1810               	xorwf	set_time@menu_key^0,w,c
  3466   000596  A4D8               	btfss	status,2,c
  3467   000598  EFD0  F002         	goto	u3211
  3468   00059C  EFD2  F002         	goto	u3210
  3469   0005A0                     u3211:
  3470   0005A0  EFEA  F002         	goto	l3936
  3471   0005A4                     u3210:
  3472   0005A4                     
  3473                           ;set_time.c: 156:         {;set_time.c: 157:             time4++;
  3474   0005A4  0100               	movlb	0	; () banked
  3475   0005A6  4B8D               	infsnz	_time4& (0+255),f,b
  3476   0005A8  2B8E               	incf	(_time4+1)& (0+255),f,b
  3477   0005AA                     
  3478                           ; BSR set to: 0
  3479                           ;set_time.c: 158:             if(time4 > 200)
  3480   0005AA  518E               	movf	(_time4+1)& (0+255),w,b
  3481   0005AC  E109               	bnz	u3220
  3482   0005AE  0EC9               	movlw	201
  3483   0005B0  5D8D               	subwf	_time4& (0+255),w,b
  3484   0005B2  A0D8               	btfss	status,0,c
  3485   0005B4  EFDE  F002         	goto	u3221
  3486   0005B8  EFE0  F002         	goto	u3220
  3487   0005BC                     u3221:
  3488   0005BC  EF4B  F003         	goto	l3954
  3489   0005C0                     u3220:
  3490   0005C0                     
  3491                           ; BSR set to: 0
  3492                           ;set_time.c: 159:             {;set_time.c: 160:                 time4 = 0;
  3493   0005C0  0E00               	movlw	0
  3494   0005C2  6F8E               	movwf	(_time4+1)& (0+255),b
  3495   0005C4  0E00               	movlw	0
  3496   0005C6  6F8D               	movwf	_time4& (0+255),b
  3497                           
  3498                           ;set_time.c: 161:                 timeout = 3;
  3499   0005C8  0E03               	movlw	3
  3500   0005CA  6E48               	movwf	_timeout^0,c
  3501                           
  3502                           ;set_time.c: 162:                 tc_flag=2;
  3503   0005CC  0E02               	movlw	2
  3504   0005CE  6E4D               	movwf	_tc_flag^0,c
  3505   0005D0  EF4B  F003         	goto	l3954
  3506   0005D4                     l3936:
  3507   0005D4  0100               	movlb	0	; () banked
  3508   0005D6  518E               	movf	(_time4+1)& (0+255),w,b
  3509   0005D8  E107               	bnz	u3231
  3510   0005DA  0EC8               	movlw	200
  3511   0005DC  5D8D               	subwf	_time4& (0+255),w,b
  3512   0005DE  B0D8               	btfsc	status,0,c
  3513   0005E0  EFF4  F002         	goto	u3231
  3514   0005E4  EFF6  F002         	goto	u3230
  3515   0005E8                     u3231:
  3516   0005E8  EF4B  F003         	goto	l3954
  3517   0005EC                     u3230:
  3518   0005EC                     
  3519                           ; BSR set to: 0
  3520   0005EC  518D               	movf	_time4& (0+255),w,b
  3521   0005EE  118E               	iorwf	(_time4+1)& (0+255),w,b
  3522   0005F0  B4D8               	btfsc	status,2,c
  3523   0005F2  EFFD  F002         	goto	u3241
  3524   0005F6  EFFF  F002         	goto	u3240
  3525   0005FA                     u3241:
  3526   0005FA  EF4B  F003         	goto	l3954
  3527   0005FE                     u3240:
  3528   0005FE                     
  3529                           ; BSR set to: 0
  3530                           ;set_time.c: 167:         {;set_time.c: 168:             if(field == 0)
  3531   0005FE  5044               	movf	_field^0,w,c
  3532   000600  A4D8               	btfss	status,2,c
  3533   000602  EF05  F003         	goto	u3251
  3534   000606  EF07  F003         	goto	u3250
  3535   00060A                     u3251:
  3536   00060A  EF17  F003         	goto	l3944
  3537   00060E                     u3250:
  3538   00060E                     
  3539                           ; BSR set to: 0
  3540                           ;set_time.c: 169:                 secs=(secs+1)%60;
  3541   00060E  0E01               	movlw	1
  3542   000610  2445               	addwf	_secs^0,w,c
  3543   000612  6E01               	movwf	___awmod@dividend^0,c
  3544   000614  6A02               	clrf	(___awmod@dividend+1)^0,c
  3545   000616  0E00               	movlw	0
  3546   000618  2202               	addwfc	(___awmod@dividend+1)^0,f,c
  3547   00061A  0E00               	movlw	0
  3548   00061C  6E04               	movwf	(___awmod@divisor+1)^0,c
  3549   00061E  0E3C               	movlw	60
  3550   000620  6E03               	movwf	___awmod@divisor^0,c
  3551   000622  ECFA  F010         	call	___awmod	;wreg free
  3552   000626  5001               	movf	?___awmod^0,w,c
  3553   000628  6E45               	movwf	_secs^0,c
  3554   00062A  EF46  F003         	goto	l3952
  3555   00062E                     l3944:
  3556                           
  3557                           ; BSR set to: 0
  3558   00062E  0444               	decf	_field^0,w,c
  3559   000630  A4D8               	btfss	status,2,c
  3560   000632  EF1D  F003         	goto	u3261
  3561   000636  EF1F  F003         	goto	u3260
  3562   00063A                     u3261:
  3563   00063A  EF2F  F003         	goto	l3948
  3564   00063E                     u3260:
  3565   00063E                     
  3566                           ; BSR set to: 0
  3567                           ;set_time.c: 171:                 min=(min+1)%60;
  3568   00063E  0E01               	movlw	1
  3569   000640  2446               	addwf	_min^0,w,c
  3570   000642  6E01               	movwf	___awmod@dividend^0,c
  3571   000644  6A02               	clrf	(___awmod@dividend+1)^0,c
  3572   000646  0E00               	movlw	0
  3573   000648  2202               	addwfc	(___awmod@dividend+1)^0,f,c
  3574   00064A  0E00               	movlw	0
  3575   00064C  6E04               	movwf	(___awmod@divisor+1)^0,c
  3576   00064E  0E3C               	movlw	60
  3577   000650  6E03               	movwf	___awmod@divisor^0,c
  3578   000652  ECFA  F010         	call	___awmod	;wreg free
  3579   000656  5001               	movf	?___awmod^0,w,c
  3580   000658  6E46               	movwf	_min^0,c
  3581   00065A  EF46  F003         	goto	l3952
  3582   00065E                     l3948:
  3583                           
  3584                           ; BSR set to: 0
  3585   00065E  0E02               	movlw	2
  3586   000660  1844               	xorwf	_field^0,w,c
  3587   000662  A4D8               	btfss	status,2,c
  3588   000664  EF36  F003         	goto	u3271
  3589   000668  EF38  F003         	goto	u3270
  3590   00066C                     u3271:
  3591   00066C  EF46  F003         	goto	l3952
  3592   000670                     u3270:
  3593   000670                     
  3594                           ; BSR set to: 0
  3595                           ;set_time.c: 173:                 hr=(hr+1)%24;
  3596   000670  0E01               	movlw	1
  3597   000672  2447               	addwf	_hr^0,w,c
  3598   000674  6E01               	movwf	___awmod@dividend^0,c
  3599   000676  6A02               	clrf	(___awmod@dividend+1)^0,c
  3600   000678  0E00               	movlw	0
  3601   00067A  2202               	addwfc	(___awmod@dividend+1)^0,f,c
  3602   00067C  0E00               	movlw	0
  3603   00067E  6E04               	movwf	(___awmod@divisor+1)^0,c
  3604   000680  0E18               	movlw	24
  3605   000682  6E03               	movwf	___awmod@divisor^0,c
  3606   000684  ECFA  F010         	call	___awmod	;wreg free
  3607   000688  5001               	movf	?___awmod^0,w,c
  3608   00068A  6E47               	movwf	_hr^0,c
  3609   00068C                     l3952:
  3610                           
  3611                           ;set_time.c: 174:             time4 = 0;
  3612   00068C  0E00               	movlw	0
  3613   00068E  0100               	movlb	0	; () banked
  3614   000690  6F8E               	movwf	(_time4+1)& (0+255),b
  3615   000692  0E00               	movlw	0
  3616   000694  6F8D               	movwf	_time4& (0+255),b
  3617   000696                     l3954:
  3618                           
  3619                           ;set_time.c: 178:     if(wait++ == 150)
  3620   000696  0100               	movlb	0	; () banked
  3621   000698  4B91               	infsnz	_wait& (0+255),f,b
  3622   00069A  2B92               	incf	(_wait+1)& (0+255),f,b
  3623   00069C  0E97               	movlw	151
  3624   00069E  1991               	xorwf	_wait& (0+255),w,b
  3625   0006A0  1192               	iorwf	(_wait+1)& (0+255),w,b
  3626   0006A2  A4D8               	btfss	status,2,c
  3627   0006A4  EF56  F003         	goto	u3281
  3628   0006A8  EF58  F003         	goto	u3280
  3629   0006AC                     u3281:
  3630   0006AC  EF5F  F003         	goto	l418
  3631   0006B0                     u3280:
  3632   0006B0                     
  3633                           ; BSR set to: 0
  3634                           ;set_time.c: 179:     {;set_time.c: 180:         wait=0;
  3635   0006B0  0E00               	movlw	0
  3636   0006B2  6F92               	movwf	(_wait+1)& (0+255),b
  3637   0006B4  0E00               	movlw	0
  3638   0006B6  6F91               	movwf	_wait& (0+255),b
  3639   0006B8                     
  3640                           ; BSR set to: 0
  3641                           ;set_time.c: 181:         blink=~blink;
  3642   0006B8  1E39               	comf	_blink^0,f,c
  3643   0006BA  1E3A               	comf	(_blink+1)^0,f,c
  3644   0006BC                     
  3645                           ; BSR set to: 0
  3646                           ;set_time.c: 182:         timeout--;
  3647   0006BC  0648               	decf	_timeout^0,f,c
  3648   0006BE                     l418:
  3649                           
  3650                           ; BSR set to: 0
  3651   0006BE  0012               	return		;funcret
  3652   0006C0                     __end_of_set_time:
  3653                           	callstack 0
  3654                           
  3655 ;; *************** function _read_adc *****************
  3656 ;; Defined at:
  3657 ;;		line 43 in file "adc.c"
  3658 ;; Parameters:    Size  Location     Type
  3659 ;;  channel         1    wreg     unsigned char 
  3660 ;; Auto vars:     Size  Location     Type
  3661 ;;  channel         1    6[COMRAM] unsigned char 
  3662 ;;  reg_val         2    4[COMRAM] unsigned short 
  3663 ;; Return value:  Size  Location     Type
  3664 ;;                  2    0[COMRAM] unsigned short 
  3665 ;; Registers used:
  3666 ;;		wreg, status,2, status,0
  3667 ;; Tracked objects:
  3668 ;;		On entry : 0/0
  3669 ;;		On exit  : 0/0
  3670 ;;		Unchanged: 0/0
  3671 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3672 ;;      Params:         2       0       0       0       0       0       0
  3673 ;;      Locals:         3       0       0       0       0       0       0
  3674 ;;      Temps:          2       0       0       0       0       0       0
  3675 ;;      Totals:         7       0       0       0       0       0       0
  3676 ;;Total ram usage:        7 bytes
  3677 ;; Hardware stack levels used: 1
  3678 ;; Hardware stack levels required when called: 1
  3679 ;; This function calls:
  3680 ;;		Nothing
  3681 ;; This function is called by:
  3682 ;;		_main
  3683 ;; This function uses a non-reentrant model
  3684 ;;
  3685                           
  3686                           	psect	text6
  3687   002728                     __ptext6:
  3688                           	callstack 0
  3689   002728                     _read_adc:
  3690                           	callstack 29
  3691                           
  3692                           ; BSR set to: 0
  3693                           ;incstack = 0
  3694                           ;read_adc@channel stored from wreg
  3695   002728  6E07               	movwf	read_adc@channel^0,c
  3696   00272A                     
  3697                           ;adc.c: 43: unsigned short read_adc(unsigned char channel);adc.c: 44: {;adc.c: 45:  unsi
      +                          gned short reg_val;;adc.c: 48:  ADCON0 = (ADCON0 & 0xC3) | (channel << 2);
  3698   00272A  C007  F003         	movff	read_adc@channel,??_read_adc
  3699   00272E  90D8               	bcf	status,0,c
  3700   002730  3603               	rlcf	??_read_adc^0,f,c
  3701   002732  90D8               	bcf	status,0,c
  3702   002734  3603               	rlcf	??_read_adc^0,f,c
  3703   002736  50C2               	movf	194,w,c	;volatile
  3704   002738  0BC3               	andlw	195
  3705   00273A  1003               	iorwf	??_read_adc^0,w,c
  3706   00273C  6EC2               	movwf	194,c	;volatile
  3707   00273E                     
  3708                           ;adc.c: 51:  GO = 1;
  3709   00273E  82C2               	bsf	4034,1,c	;volatile
  3710   002740                     l533:
  3711   002740  B2C2               	btfsc	4034,1,c	;volatile
  3712   002742  EFA5  F013         	goto	u2531
  3713   002746  EFA7  F013         	goto	u2530
  3714   00274A                     u2531:
  3715   00274A  EFA0  F013         	goto	l533
  3716   00274E                     u2530:
  3717   00274E                     
  3718                           ;adc.c: 53:  reg_val = (ADRESH << 8) | ADRESL;
  3719   00274E  50C3               	movf	195,w,c	;volatile
  3720   002750  CFC4 F003          	movff	4036,??_read_adc	;volatile
  3721   002754  6A04               	clrf	(??_read_adc+1)^0,c
  3722   002756  C003  F004         	movff	??_read_adc,??_read_adc+1
  3723   00275A  6A03               	clrf	??_read_adc^0,c
  3724   00275C  1003               	iorwf	??_read_adc^0,w,c
  3725   00275E  6E05               	movwf	read_adc@reg_val^0,c
  3726   002760  5004               	movf	(??_read_adc+1)^0,w,c
  3727   002762  6E06               	movwf	(read_adc@reg_val+1)^0,c
  3728   002764                     
  3729                           ;adc.c: 55:  return reg_val;
  3730   002764  C005  F001         	movff	read_adc@reg_val,?_read_adc
  3731   002768  C006  F002         	movff	read_adc@reg_val+1,?_read_adc+1
  3732   00276C  0012               	return		;funcret
  3733   00276E                     __end_of_read_adc:
  3734                           	callstack 0
  3735                           
  3736 ;; *************** function _password *****************
  3737 ;; Defined at:
  3738 ;;		line 25 in file "password.c"
  3739 ;; Parameters:    Size  Location     Type
  3740 ;;  key             1    wreg     unsigned char 
  3741 ;; Auto vars:     Size  Location     Type
  3742 ;;  key             1   12[COMRAM] unsigned char 
  3743 ;; Return value:  Size  Location     Type
  3744 ;;                  1    wreg      void 
  3745 ;; Registers used:
  3746 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3747 ;; Tracked objects:
  3748 ;;		On entry : 0/0
  3749 ;;		On exit  : 0/0
  3750 ;;		Unchanged: 0/0
  3751 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3752 ;;      Params:         0       0       0       0       0       0       0
  3753 ;;      Locals:         1       0       0       0       0       0       0
  3754 ;;      Temps:          2       0       0       0       0       0       0
  3755 ;;      Totals:         3       0       0       0       0       0       0
  3756 ;;Total ram usage:        3 bytes
  3757 ;; Hardware stack levels used: 1
  3758 ;; Hardware stack levels required when called: 5
  3759 ;; This function calls:
  3760 ;;		___awdiv
  3761 ;;		___awmod
  3762 ;;		_clcd_print
  3763 ;;		_clcd_putch
  3764 ;;		_clcd_write
  3765 ;;		_read_ext_eeprom
  3766 ;; This function is called by:
  3767 ;;		_main
  3768 ;; This function uses a non-reentrant model
  3769 ;;
  3770                           
  3771                           	psect	text7
  3772   00121C                     __ptext7:
  3773                           	callstack 0
  3774   00121C                     _password:
  3775                           	callstack 25
  3776                           
  3777                           ;incstack = 0
  3778                           ;password@key stored from wreg
  3779   00121C  6E0D               	movwf	password@key^0,c
  3780   00121E                     
  3781                           ;password.c: 25: void password(char key);password.c: 26: {;password.c: 27:     if (flag<
      +                          4 && attempt > 0 && wait_f == 0)
  3782   00121E  0E04               	movlw	4
  3783   001220  604C               	cpfslt	_flag^0,c
  3784   001222  EF15  F009         	goto	u2551
  3785   001226  EF17  F009         	goto	u2550
  3786   00122A                     u2551:
  3787   00122A  EFA2  F009         	goto	l3506
  3788   00122E                     u2550:
  3789   00122E  505C               	movf	_attempt^0,w,c
  3790   001230  B4D8               	btfsc	status,2,c
  3791   001232  EF1D  F009         	goto	u2561
  3792   001236  EF1F  F009         	goto	u2560
  3793   00123A                     u2561:
  3794   00123A  EFA2  F009         	goto	l3506
  3795   00123E                     u2560:
  3796   00123E  504A               	movf	_wait_f^0,w,c
  3797   001240  A4D8               	btfss	status,2,c
  3798   001242  EF25  F009         	goto	u2571
  3799   001246  EF27  F009         	goto	u2570
  3800   00124A                     u2571:
  3801   00124A  EFA2  F009         	goto	l3506
  3802   00124E                     u2570:
  3803   00124E                     
  3804                           ;password.c: 28:     {;password.c: 29:         clcd_print("ENTER PASSWORD  ", (0x80 + (0
      +                          )));
  3805   00124E  0EAD               	movlw	low STR_15
  3806   001250  6E03               	movwf	clcd_print@data^0,c
  3807   001252  0E2E               	movlw	high STR_15
  3808   001254  6E04               	movwf	(clcd_print@data+1)^0,c
  3809   001256  0E80               	movlw	128
  3810   001258  6E05               	movwf	clcd_print@addr^0,c
  3811   00125A  ECA6  F012         	call	_clcd_print	;wreg free
  3812   00125E                     
  3813                           ;password.c: 30:         attempt_f = 0;
  3814   00125E  0E00               	movlw	0
  3815   001260  6E4B               	movwf	_attempt_f^0,c
  3816   001262                     
  3817                           ;password.c: 31:         if(key == 11)
  3818   001262  0E0B               	movlw	11
  3819   001264  180D               	xorwf	password@key^0,w,c
  3820   001266  A4D8               	btfss	status,2,c
  3821   001268  EF38  F009         	goto	u2581
  3822   00126C  EF3A  F009         	goto	u2580
  3823   001270                     u2581:
  3824   001270  EF49  F009         	goto	l3490
  3825   001274                     u2580:
  3826   001274                     
  3827                           ;password.c: 32:         {;password.c: 33:             input_pass[flag] = '0';
  3828   001274  0E7E               	movlw	low _input_pass
  3829   001276  244C               	addwf	_flag^0,w,c
  3830   001278  6ED9               	movwf	fsr2l,c
  3831   00127A  6ADA               	clrf	fsr2h,c
  3832   00127C  0E00               	movlw	high _input_pass
  3833   00127E  22DA               	addwfc	fsr2h,f,c
  3834   001280  0E30               	movlw	48
  3835   001282  6EDF               	movwf	indf2,c
  3836   001284                     
  3837                           ;password.c: 34:             clcd_putch('*',(0xC0 + (flag)));
  3838   001284  504C               	movf	_flag^0,w,c
  3839   001286  0FC0               	addlw	192
  3840   001288  6E09               	movwf	clcd_putch@addr^0,c
  3841   00128A  0E2A               	movlw	42
  3842   00128C  ECB5  F014         	call	_clcd_putch
  3843   001290                     
  3844                           ;password.c: 35:             flag++;
  3845   001290  2A4C               	incf	_flag^0,f,c
  3846   001292                     l3490:
  3847                           
  3848                           ;password.c: 37:         if(key == 12)
  3849   001292  0E0C               	movlw	12
  3850   001294  180D               	xorwf	password@key^0,w,c
  3851   001296  A4D8               	btfss	status,2,c
  3852   001298  EF50  F009         	goto	u2591
  3853   00129C  EF52  F009         	goto	u2590
  3854   0012A0                     u2591:
  3855   0012A0  EF61  F009         	goto	l3498
  3856   0012A4                     u2590:
  3857   0012A4                     
  3858                           ;password.c: 38:         {;password.c: 39:             input_pass[flag] = '1';
  3859   0012A4  0E7E               	movlw	low _input_pass
  3860   0012A6  244C               	addwf	_flag^0,w,c
  3861   0012A8  6ED9               	movwf	fsr2l,c
  3862   0012AA  6ADA               	clrf	fsr2h,c
  3863   0012AC  0E00               	movlw	high _input_pass
  3864   0012AE  22DA               	addwfc	fsr2h,f,c
  3865   0012B0  0E31               	movlw	49
  3866   0012B2  6EDF               	movwf	indf2,c
  3867   0012B4                     
  3868                           ;password.c: 40:             clcd_putch('*',(0xC0 + (flag)));
  3869   0012B4  504C               	movf	_flag^0,w,c
  3870   0012B6  0FC0               	addlw	192
  3871   0012B8  6E09               	movwf	clcd_putch@addr^0,c
  3872   0012BA  0E2A               	movlw	42
  3873   0012BC  ECB5  F014         	call	_clcd_putch
  3874   0012C0                     
  3875                           ;password.c: 41:             flag++;
  3876   0012C0  2A4C               	incf	_flag^0,f,c
  3877   0012C2                     l3498:
  3878                           
  3879                           ;password.c: 44:         if (blink_delay++ > 200)
  3880   0012C2  0100               	movlb	0	; () banked
  3881   0012C4  5199               	movf	_blink_delay& (0+255),w,b
  3882   0012C6  6E0B               	movwf	??_password^0,c
  3883   0012C8  519A               	movf	(_blink_delay+1)& (0+255),w,b
  3884   0012CA  6E0C               	movwf	(??_password+1)^0,c
  3885   0012CC  4B99               	infsnz	_blink_delay& (0+255),f,b
  3886   0012CE  2B9A               	incf	(_blink_delay+1)& (0+255),f,b
  3887   0012D0  500C               	movf	(??_password+1)^0,w,c
  3888   0012D2  E109               	bnz	u2600
  3889   0012D4  0EC9               	movlw	201
  3890   0012D6  5C0B               	subwf	??_password^0,w,c
  3891   0012D8  A0D8               	btfss	status,0,c
  3892   0012DA  EF71  F009         	goto	u2601
  3893   0012DE  EF73  F009         	goto	u2600
  3894   0012E2                     u2601:
  3895   0012E2  EFBF  F00A         	goto	l345
  3896   0012E6                     u2600:
  3897   0012E6                     
  3898                           ; BSR set to: 0
  3899                           ;password.c: 45:         {;password.c: 46:             blink_delay = 0;
  3900   0012E6  0E00               	movlw	0
  3901   0012E8  6F9A               	movwf	(_blink_delay+1)& (0+255),b
  3902   0012EA  0E00               	movlw	0
  3903   0012EC  6F99               	movwf	_blink_delay& (0+255),b
  3904                           
  3905                           ;password.c: 47:             blink_state = !blink_state;
  3906   0012EE  5051               	movf	_blink_state^0,w,c
  3907   0012F0  B4D8               	btfsc	status,2,c
  3908   0012F2  EF7D  F009         	goto	u2611
  3909   0012F6  EF80  F009         	goto	u2610
  3910   0012FA                     u2611:
  3911   0012FA  0E01               	movlw	1
  3912   0012FC  EF81  F009         	goto	u2620
  3913   001300                     u2610:
  3914   001300  0E00               	movlw	0
  3915   001302                     u2620:
  3916   001302  6E51               	movwf	_blink_state^0,c
  3917                           
  3918                           ;password.c: 49:             if (blink_state)
  3919   001304  5051               	movf	_blink_state^0,w,c
  3920   001306  B4D8               	btfsc	status,2,c
  3921   001308  EF88  F009         	goto	u2631
  3922   00130C  EF8A  F009         	goto	u2630
  3923   001310                     u2631:
  3924   001310  EF95  F009         	goto	l3504
  3925   001314                     u2630:
  3926   001314                     
  3927                           ; BSR set to: 0
  3928                           ;password.c: 50:             {;password.c: 51:                 clcd_print("_            
      +                             ", (0xC0 + (flag)));
  3929   001314  0E68               	movlw	low STR_6
  3930   001316  6E03               	movwf	clcd_print@data^0,c
  3931   001318  0E2F               	movlw	high STR_6
  3932   00131A  6E04               	movwf	(clcd_print@data+1)^0,c
  3933   00131C  504C               	movf	_flag^0,w,c
  3934   00131E  0FC0               	addlw	192
  3935   001320  6E05               	movwf	clcd_print@addr^0,c
  3936   001322  ECA6  F012         	call	_clcd_print	;wreg free
  3937                           
  3938                           ;password.c: 52:             }
  3939   001326  EFBF  F00A         	goto	l345
  3940   00132A                     l3504:
  3941                           
  3942                           ; BSR set to: 0
  3943                           ;password.c: 54:             {;password.c: 55:                 clcd_print("             
      +                             ", (0xC0 + (flag)));
  3944   00132A  0E57               	movlw	low STR_7
  3945   00132C  6E03               	movwf	clcd_print@data^0,c
  3946   00132E  0E2F               	movlw	high STR_7
  3947   001330  6E04               	movwf	(clcd_print@data+1)^0,c
  3948   001332  504C               	movf	_flag^0,w,c
  3949   001334  0FC0               	addlw	192
  3950   001336  6E05               	movwf	clcd_print@addr^0,c
  3951   001338  ECA6  F012         	call	_clcd_print	;wreg free
  3952   00133C  EFBF  F00A         	goto	l345
  3953   001340                     l324:
  3954                           
  3955                           ;password.c: 58:     }
  3956   001340  EFBF  F00A         	goto	l345
  3957   001344                     l3506:
  3958   001344  0E04               	movlw	4
  3959   001346  184C               	xorwf	_flag^0,w,c
  3960   001348  A4D8               	btfss	status,2,c
  3961   00134A  EFA9  F009         	goto	u2641
  3962   00134E  EFAB  F009         	goto	u2640
  3963   001352                     u2641:
  3964   001352  EF84  F00A         	goto	l3566
  3965   001356                     u2640:
  3966   001356                     
  3967                           ;password.c: 60:     {;password.c: 62:         pass[0] = read_ext_eeprom(200);
  3968   001356  0EC8               	movlw	200
  3969   001358  EC42  F014         	call	_read_ext_eeprom
  3970   00135C  0100               	movlb	0	; () banked
  3971   00135E  6FAC               	movwf	_pass& (0+255),b
  3972                           
  3973                           ;password.c: 63:         pass[1] = read_ext_eeprom(201);
  3974   001360  0EC9               	movlw	201
  3975   001362  EC42  F014         	call	_read_ext_eeprom
  3976   001366  0100               	movlb	0	; () banked
  3977   001368  6FAD               	movwf	(_pass+1)& (0+255),b
  3978                           
  3979                           ;password.c: 64:         pass[2] = read_ext_eeprom(202);
  3980   00136A  0ECA               	movlw	202
  3981   00136C  EC42  F014         	call	_read_ext_eeprom
  3982   001370  0100               	movlb	0	; () banked
  3983   001372  6FAE               	movwf	(_pass+2)& (0+255),b
  3984                           
  3985                           ;password.c: 65:         pass[3] = read_ext_eeprom(203);
  3986   001374  0ECB               	movlw	203
  3987   001376  EC42  F014         	call	_read_ext_eeprom
  3988   00137A  0100               	movlb	0	; () banked
  3989   00137C  6FAF               	movwf	(_pass+3)& (0+255),b
  3990   00137E                     
  3991                           ; BSR set to: 0
  3992                           ;password.c: 66:         if(attempt_f == 0)
  3993   00137E  504B               	movf	_attempt_f^0,w,c
  3994   001380  A4D8               	btfss	status,2,c
  3995   001382  EFC5  F009         	goto	u2651
  3996   001386  EFC7  F009         	goto	u2650
  3997   00138A                     u2651:
  3998   00138A  EFF6  F009         	goto	l3528
  3999   00138E                     u2650:
  4000   00138E                     
  4001                           ; BSR set to: 0
  4002                           ;password.c: 67:         for(i = 0; i<4; i++)
  4003   00138E  0E00               	movlw	0
  4004   001390  6E40               	movwf	(_i+1)^0,c
  4005   001392  0E00               	movlw	0
  4006   001394  6E3F               	movwf	_i^0,c
  4007   001396                     l3514:
  4008   001396  5040               	movf	(_i+1)^0,w,c
  4009   001398  E109               	bnz	u2660
  4010   00139A  0E04               	movlw	4
  4011   00139C  5C3F               	subwf	_i^0,w,c
  4012   00139E  A0D8               	btfss	status,0,c
  4013   0013A0  EFD4  F009         	goto	u2661
  4014   0013A4  EFD6  F009         	goto	u2660
  4015   0013A8                     u2661:
  4016   0013A8  EFD8  F009         	goto	l3518
  4017   0013AC                     u2660:
  4018   0013AC  EFF6  F009         	goto	l3528
  4019   0013B0                     l3518:
  4020                           
  4021                           ;password.c: 68:         {;password.c: 69:             if(pass[i] != input_pass[i])
  4022   0013B0  0E7E               	movlw	low _input_pass
  4023   0013B2  243F               	addwf	_i^0,w,c
  4024   0013B4  6ED9               	movwf	fsr2l,c
  4025   0013B6  0E00               	movlw	high _input_pass
  4026   0013B8  2040               	addwfc	(_i+1)^0,w,c
  4027   0013BA  6EDA               	movwf	fsr2h,c
  4028   0013BC  0EAC               	movlw	low _pass
  4029   0013BE  243F               	addwf	_i^0,w,c
  4030   0013C0  6EE1               	movwf	fsr1l,c
  4031   0013C2  0E00               	movlw	high _pass
  4032   0013C4  2040               	addwfc	(_i+1)^0,w,c
  4033   0013C6  6EE2               	movwf	fsr1h,c
  4034   0013C8  50DE               	movf	postinc2,w,c
  4035   0013CA  18E6               	xorwf	postinc1,w,c
  4036   0013CC  B4D8               	btfsc	status,2,c
  4037   0013CE  EFEB  F009         	goto	u2671
  4038   0013D2  EFED  F009         	goto	u2670
  4039   0013D6                     u2671:
  4040   0013D6  EFF2  F009         	goto	l3524
  4041   0013DA                     u2670:
  4042   0013DA                     
  4043                           ;password.c: 70:             {;password.c: 71:                 attempt_f = 1;
  4044   0013DA  0E01               	movlw	1
  4045   0013DC  6E4B               	movwf	_attempt_f^0,c
  4046   0013DE                     
  4047                           ;password.c: 72:                 attempt--;
  4048   0013DE  065C               	decf	_attempt^0,f,c
  4049                           
  4050                           ;password.c: 73:                 break;
  4051   0013E0  EFF6  F009         	goto	l3528
  4052   0013E4                     l3524:
  4053                           
  4054                           ;password.c: 75:         }
  4055   0013E4  4A3F               	infsnz	_i^0,f,c
  4056   0013E6  2A40               	incf	(_i+1)^0,f,c
  4057   0013E8  EFCB  F009         	goto	l3514
  4058   0013EC                     l3528:
  4059                           
  4060                           ;password.c: 77:         if(attempt_f == 0)
  4061   0013EC  504B               	movf	_attempt_f^0,w,c
  4062   0013EE  A4D8               	btfss	status,2,c
  4063   0013F0  EFFC  F009         	goto	u2681
  4064   0013F4  EFFE  F009         	goto	u2680
  4065   0013F8                     u2681:
  4066   0013F8  EF0E  F00A         	goto	l3538
  4067   0013FC                     u2680:
  4068   0013FC                     
  4069                           ;password.c: 78:         {;password.c: 79:             clcd_print("CORRECT PASSWORD", (0
      +                          xC0 + (0)));
  4070   0013FC  0EF1               	movlw	low STR_18
  4071   0013FE  6E03               	movwf	clcd_print@data^0,c
  4072   001400  0E2E               	movlw	high STR_18
  4073   001402  6E04               	movwf	(clcd_print@data+1)^0,c
  4074   001404  0EC0               	movlw	192
  4075   001406  6E05               	movwf	clcd_print@addr^0,c
  4076   001408  ECA6  F012         	call	_clcd_print	;wreg free
  4077   00140C                     
  4078                           ;password.c: 80:             attempt = 3;
  4079   00140C  0E03               	movlw	3
  4080   00140E  6E5C               	movwf	_attempt^0,c
  4081   001410                     
  4082                           ;password.c: 81:             flag = 0;
  4083   001410  0E00               	movlw	0
  4084   001412  6E4C               	movwf	_flag^0,c
  4085   001414                     
  4086                           ;password.c: 83:             main_f = 2;
  4087   001414  0E02               	movlw	2
  4088   001416  6E55               	movwf	_main_f^0,c
  4089                           
  4090                           ;password.c: 84:         }
  4091   001418  EFBF  F00A         	goto	l345
  4092   00141C                     l3538:
  4093   00141C  0E03               	movlw	3
  4094   00141E  605C               	cpfslt	_attempt^0,c
  4095   001420  EF14  F00A         	goto	u2691
  4096   001424  EF16  F00A         	goto	u2690
  4097   001428                     u2691:
  4098   001428  EFBF  F00A         	goto	l345
  4099   00142C                     u2690:
  4100   00142C                     
  4101                           ;password.c: 87:         {;password.c: 88:             if(attempt == 2)
  4102   00142C  0E02               	movlw	2
  4103   00142E  185C               	xorwf	_attempt^0,w,c
  4104   001430  A4D8               	btfss	status,2,c
  4105   001432  EF1D  F00A         	goto	u2701
  4106   001436  EF1F  F00A         	goto	u2700
  4107   00143A                     u2701:
  4108   00143A  EF31  F00A         	goto	l3544
  4109   00143E                     u2700:
  4110   00143E                     
  4111                           ;password.c: 89:             {;password.c: 90:                 clcd_print("WRONG PASSWOR
      +                          D  ", (0x80 + (0)));
  4112   00143E  0E9C               	movlw	low STR_19
  4113   001440  6E03               	movwf	clcd_print@data^0,c
  4114   001442  0E2E               	movlw	high STR_19
  4115   001444  6E04               	movwf	(clcd_print@data+1)^0,c
  4116   001446  0E80               	movlw	128
  4117   001448  6E05               	movwf	clcd_print@addr^0,c
  4118   00144A  ECA6  F012         	call	_clcd_print	;wreg free
  4119                           
  4120                           ;password.c: 91:                 clcd_print("2 Attempts left ", (0xC0 + (0)));
  4121   00144E  0EE0               	movlw	low STR_20
  4122   001450  6E03               	movwf	clcd_print@data^0,c
  4123   001452  0E2E               	movlw	high STR_20
  4124   001454  6E04               	movwf	(clcd_print@data+1)^0,c
  4125   001456  0EC0               	movlw	192
  4126   001458  6E05               	movwf	clcd_print@addr^0,c
  4127   00145A  ECA6  F012         	call	_clcd_print	;wreg free
  4128                           
  4129                           ;password.c: 92:             }
  4130   00145E  EF49  F00A         	goto	l3548
  4131   001462                     l3544:
  4132   001462  045C               	decf	_attempt^0,w,c
  4133   001464  A4D8               	btfss	status,2,c
  4134   001466  EF37  F00A         	goto	u2711
  4135   00146A  EF39  F00A         	goto	u2710
  4136   00146E                     u2711:
  4137   00146E  EF49  F00A         	goto	l3548
  4138   001472                     u2710:
  4139   001472                     
  4140                           ;password.c: 94:             {;password.c: 95:                 clcd_print("WRONG PASSWOR
      +                          D  ", (0x80 + (0)));
  4141   001472  0E9C               	movlw	low STR_19
  4142   001474  6E03               	movwf	clcd_print@data^0,c
  4143   001476  0E2E               	movlw	high STR_19
  4144   001478  6E04               	movwf	(clcd_print@data+1)^0,c
  4145   00147A  0E80               	movlw	128
  4146   00147C  6E05               	movwf	clcd_print@addr^0,c
  4147   00147E  ECA6  F012         	call	_clcd_print	;wreg free
  4148                           
  4149                           ;password.c: 96:                 clcd_print("1 Attempt left  ", (0xC0 + (0)));
  4150   001482  0EBE               	movlw	low STR_22
  4151   001484  6E03               	movwf	clcd_print@data^0,c
  4152   001486  0E2E               	movlw	high STR_22
  4153   001488  6E04               	movwf	(clcd_print@data+1)^0,c
  4154   00148A  0EC0               	movlw	192
  4155   00148C  6E05               	movwf	clcd_print@addr^0,c
  4156   00148E  ECA6  F012         	call	_clcd_print	;wreg free
  4157   001492                     l3548:
  4158                           
  4159                           ;password.c: 99:             if(attempt == 0)
  4160   001492  505C               	movf	_attempt^0,w,c
  4161   001494  A4D8               	btfss	status,2,c
  4162   001496  EF4F  F00A         	goto	u2721
  4163   00149A  EF51  F00A         	goto	u2720
  4164   00149E                     u2721:
  4165   00149E  EF6A  F00A         	goto	l3560
  4166   0014A2                     u2720:
  4167   0014A2                     
  4168                           ;password.c: 100:             {;password.c: 102:                 TMR0ON = 1;
  4169   0014A2  8ED5               	bsf	4053,7,c	;volatile
  4170   0014A4                     
  4171                           ;password.c: 103:                 clcd_print("YOU ARE BLOCKED ", (0x80 + (0)));
  4172   0014A4  0ECF               	movlw	low STR_23
  4173   0014A6  6E03               	movwf	clcd_print@data^0,c
  4174   0014A8  0E2E               	movlw	high STR_23
  4175   0014AA  6E04               	movwf	(clcd_print@data+1)^0,c
  4176   0014AC  0E80               	movlw	128
  4177   0014AE  6E05               	movwf	clcd_print@addr^0,c
  4178   0014B0  ECA6  F012         	call	_clcd_print	;wreg free
  4179                           
  4180                           ;password.c: 104:                 clcd_print("Wait... ", (0xC0 + (0)));
  4181   0014B4  0EF1               	movlw	low STR_24
  4182   0014B6  6E03               	movwf	clcd_print@data^0,c
  4183   0014B8  0E2F               	movlw	high STR_24
  4184   0014BA  6E04               	movwf	(clcd_print@data+1)^0,c
  4185   0014BC  0EC0               	movlw	192
  4186   0014BE  6E05               	movwf	clcd_print@addr^0,c
  4187   0014C0  ECA6  F012         	call	_clcd_print	;wreg free
  4188   0014C4                     
  4189                           ;password.c: 105:                 wait_f = 1;
  4190   0014C4  0E01               	movlw	1
  4191   0014C6  6E4A               	movwf	_wait_f^0,c
  4192   0014C8                     
  4193                           ;password.c: 106:                 sec = 60;
  4194   0014C8  0E3C               	movlw	60
  4195   0014CA  6E5D               	movwf	_sec^0,c
  4196   0014CC                     
  4197                           ;password.c: 107:                 flag = 0;
  4198   0014CC  0E00               	movlw	0
  4199   0014CE  6E4C               	movwf	_flag^0,c
  4200                           
  4201                           ;password.c: 108:             }
  4202   0014D0  EFBF  F00A         	goto	l345
  4203   0014D4                     l3560:
  4204   0014D4  4A3F               	infsnz	_i^0,f,c
  4205   0014D6  2A40               	incf	(_i+1)^0,f,c
  4206   0014D8  0EF5               	movlw	245
  4207   0014DA  183F               	xorwf	_i^0,w,c
  4208   0014DC  E106               	bnz	u2731
  4209   0014DE  0440               	decf	(_i+1)^0,w,c
  4210   0014E0  A4D8               	btfss	status,2,c
  4211   0014E2  EF75  F00A         	goto	u2731
  4212   0014E6  EF77  F00A         	goto	u2730
  4213   0014EA                     u2731:
  4214   0014EA  EFA0  F009         	goto	l324
  4215   0014EE                     u2730:
  4216   0014EE                     
  4217                           ;password.c: 110:             {;password.c: 111:                 i=0;
  4218   0014EE  0E00               	movlw	0
  4219   0014F0  6E40               	movwf	(_i+1)^0,c
  4220   0014F2  0E00               	movlw	0
  4221   0014F4  6E3F               	movwf	_i^0,c
  4222                           
  4223                           ;password.c: 112:                 flag = 0;
  4224   0014F6  0E00               	movlw	0
  4225   0014F8  6E4C               	movwf	_flag^0,c
  4226   0014FA                     
  4227                           ;password.c: 113:                 clcd_write(0x01, 0);
  4228   0014FA  0E00               	movlw	0
  4229   0014FC  6E01               	movwf	clcd_write@control_bit^0,c
  4230   0014FE  0E01               	movlw	1
  4231   001500  ECFA  F013         	call	_clcd_write
  4232   001504  EFBF  F00A         	goto	l345
  4233   001508                     l3566:
  4234   001508  044A               	decf	_wait_f^0,w,c
  4235   00150A  A4D8               	btfss	status,2,c
  4236   00150C  EF8A  F00A         	goto	u2741
  4237   001510  EF8C  F00A         	goto	u2740
  4238   001514                     u2741:
  4239   001514  EFBF  F00A         	goto	l345
  4240   001518                     u2740:
  4241   001518                     
  4242                           ;password.c: 119:     {;password.c: 121:         if(sec == 0)
  4243   001518  505D               	movf	_sec^0,w,c
  4244   00151A  A4D8               	btfss	status,2,c
  4245   00151C  EF92  F00A         	goto	u2751
  4246   001520  EF94  F00A         	goto	u2750
  4247   001524                     u2751:
  4248   001524  EF99  F00A         	goto	l3574
  4249   001528                     u2750:
  4250   001528                     
  4251                           ;password.c: 122:         {;password.c: 123:             TMR0ON = 0;
  4252   001528  9ED5               	bcf	4053,7,c	;volatile
  4253   00152A                     
  4254                           ;password.c: 124:             wait_f = 0;
  4255   00152A  0E00               	movlw	0
  4256   00152C  6E4A               	movwf	_wait_f^0,c
  4257                           
  4258                           ;password.c: 125:             attempt = 3;
  4259   00152E  0E03               	movlw	3
  4260   001530  6E5C               	movwf	_attempt^0,c
  4261   001532                     l3574:
  4262                           
  4263                           ;password.c: 127:         clcd_putch('0' + sec/10, (0xC0 + (8)));
  4264   001532  0EC8               	movlw	200
  4265   001534  6E09               	movwf	clcd_putch@addr^0,c
  4266   001536  C05D  F001         	movff	_sec,___awdiv@dividend
  4267   00153A  6A02               	clrf	(___awdiv@dividend+1)^0,c
  4268   00153C  0E00               	movlw	0
  4269   00153E  6E04               	movwf	(___awdiv@divisor+1)^0,c
  4270   001540  0E0A               	movlw	10
  4271   001542  6E03               	movwf	___awdiv@divisor^0,c
  4272   001544  EC98  F010         	call	___awdiv	;wreg free
  4273   001548  5001               	movf	?___awdiv^0,w,c
  4274   00154A  0F30               	addlw	48
  4275   00154C  ECB5  F014         	call	_clcd_putch
  4276   001550                     
  4277                           ;password.c: 128:         clcd_putch('0' + sec%10, (0xC0 + (9)));
  4278   001550  0EC9               	movlw	201
  4279   001552  6E09               	movwf	clcd_putch@addr^0,c
  4280   001554  C05D  F001         	movff	_sec,___awmod@dividend
  4281   001558  6A02               	clrf	(___awmod@dividend+1)^0,c
  4282   00155A  0E00               	movlw	0
  4283   00155C  6E04               	movwf	(___awmod@divisor+1)^0,c
  4284   00155E  0E0A               	movlw	10
  4285   001560  6E03               	movwf	___awmod@divisor^0,c
  4286   001562  ECFA  F010         	call	___awmod	;wreg free
  4287   001566  5001               	movf	?___awmod^0,w,c
  4288   001568  0F30               	addlw	48
  4289   00156A  ECB5  F014         	call	_clcd_putch
  4290   00156E                     
  4291                           ;password.c: 129:         clcd_print(" sec",(0xC0 + (10)));
  4292   00156E  0EFA               	movlw	low STR_25
  4293   001570  6E03               	movwf	clcd_print@data^0,c
  4294   001572  0E2F               	movlw	high STR_25
  4295   001574  6E04               	movwf	(clcd_print@data+1)^0,c
  4296   001576  0ECA               	movlw	202
  4297   001578  6E05               	movwf	clcd_print@addr^0,c
  4298   00157A  ECA6  F012         	call	_clcd_print	;wreg free
  4299   00157E                     l345:
  4300   00157E  0012               	return		;funcret
  4301   001580                     __end_of_password:
  4302                           	callstack 0
  4303                           
  4304 ;; *************** function _menu *****************
  4305 ;; Defined at:
  4306 ;;		line 20 in file "menu.c"
  4307 ;; Parameters:    Size  Location     Type
  4308 ;;  menu_key        1    wreg     unsigned char 
  4309 ;; Auto vars:     Size  Location     Type
  4310 ;;  menu_key        1   10[COMRAM] unsigned char 
  4311 ;; Return value:  Size  Location     Type
  4312 ;;                  1    wreg      void 
  4313 ;; Registers used:
  4314 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4315 ;; Tracked objects:
  4316 ;;		On entry : 0/0
  4317 ;;		On exit  : 0/0
  4318 ;;		Unchanged: 0/0
  4319 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4320 ;;      Params:         0       0       0       0       0       0       0
  4321 ;;      Locals:         1       0       0       0       0       0       0
  4322 ;;      Temps:          0       0       0       0       0       0       0
  4323 ;;      Totals:         1       0       0       0       0       0       0
  4324 ;;Total ram usage:        1 bytes
  4325 ;; Hardware stack levels used: 1
  4326 ;; Hardware stack levels required when called: 3
  4327 ;; This function calls:
  4328 ;;		_clcd_print
  4329 ;;		_clcd_putch
  4330 ;;		_clcd_write
  4331 ;; This function is called by:
  4332 ;;		_main
  4333 ;; This function uses a non-reentrant model
  4334 ;;
  4335                           
  4336                           	psect	text8
  4337   001A42                     __ptext8:
  4338                           	callstack 0
  4339   001A42                     _menu:
  4340                           	callstack 27
  4341                           
  4342                           ;incstack = 0
  4343                           ;menu@menu_key stored from wreg
  4344   001A42  6E0B               	movwf	menu@menu_key^0,c
  4345   001A44                     
  4346                           ;menu.c: 20: void menu(char menu_key);menu.c: 21: {;menu.c: 23:     clcd_print(menu_op[m
      +                          enu_ind],(0x80 + (1)));
  4347   001A44  5050               	movf	_menu_ind^0,w,c
  4348   001A46  0D11               	mullw	17
  4349   001A48  0E00               	movlw	low _menu_op
  4350   001A4A  24F3               	addwf	243,w,c
  4351   001A4C  6E03               	movwf	clcd_print@data^0,c
  4352   001A4E  0E02               	movlw	high _menu_op
  4353   001A50  20F4               	addwfc	prodh,w,c
  4354   001A52  6E04               	movwf	(clcd_print@data+1)^0,c
  4355   001A54  0E81               	movlw	129
  4356   001A56  6E05               	movwf	clcd_print@addr^0,c
  4357   001A58  ECA6  F012         	call	_clcd_print	;wreg free
  4358                           
  4359                           ;menu.c: 24:     clcd_print(menu_op[menu_ind+1],(0xC0 + (1)));
  4360   001A5C  5050               	movf	_menu_ind^0,w,c
  4361   001A5E  0D11               	mullw	17
  4362   001A60  0E11               	movlw	low (_menu_op+17)
  4363   001A62  24F3               	addwf	243,w,c
  4364   001A64  6E03               	movwf	clcd_print@data^0,c
  4365   001A66  0E02               	movlw	high (_menu_op+17)
  4366   001A68  20F4               	addwfc	prodh,w,c
  4367   001A6A  6E04               	movwf	(clcd_print@data+1)^0,c
  4368   001A6C  0EC1               	movlw	193
  4369   001A6E  6E05               	movwf	clcd_print@addr^0,c
  4370   001A70  ECA6  F012         	call	_clcd_print	;wreg free
  4371   001A74                     
  4372                           ;menu.c: 26:     if(arrow_st == 0)
  4373   001A74  504F               	movf	_arrow_st^0,w,c
  4374   001A76  A4D8               	btfss	status,2,c
  4375   001A78  EF40  F00D         	goto	u2761
  4376   001A7C  EF42  F00D         	goto	u2760
  4377   001A80                     u2761:
  4378   001A80  EF4E  F00D         	goto	l3586
  4379   001A84                     u2760:
  4380   001A84                     
  4381                           ;menu.c: 27:     {;menu.c: 28:         clcd_putch('*',(0x80 + (0)));
  4382   001A84  0E80               	movlw	128
  4383   001A86  6E09               	movwf	clcd_putch@addr^0,c
  4384   001A88  0E2A               	movlw	42
  4385   001A8A  ECB5  F014         	call	_clcd_putch
  4386                           
  4387                           ;menu.c: 29:         clcd_putch(' ',(0xC0 + (0)));
  4388   001A8E  0EC0               	movlw	192
  4389   001A90  6E09               	movwf	clcd_putch@addr^0,c
  4390   001A92  0E20               	movlw	32
  4391   001A94  ECB5  F014         	call	_clcd_putch
  4392                           
  4393                           ;menu.c: 30:     }
  4394   001A98  EF58  F00D         	goto	l3588
  4395   001A9C                     l3586:
  4396                           
  4397                           ;menu.c: 32:     {;menu.c: 33:         clcd_putch(' ',(0x80 + (0)));
  4398   001A9C  0E80               	movlw	128
  4399   001A9E  6E09               	movwf	clcd_putch@addr^0,c
  4400   001AA0  0E20               	movlw	32
  4401   001AA2  ECB5  F014         	call	_clcd_putch
  4402                           
  4403                           ;menu.c: 34:         clcd_putch('*',(0xC0 + (0)));
  4404   001AA6  0EC0               	movlw	192
  4405   001AA8  6E09               	movwf	clcd_putch@addr^0,c
  4406   001AAA  0E2A               	movlw	42
  4407   001AAC  ECB5  F014         	call	_clcd_putch
  4408   001AB0                     l3588:
  4409                           
  4410                           ;menu.c: 37:     if(menu_key == 11)
  4411   001AB0  0E0B               	movlw	11
  4412   001AB2  180B               	xorwf	menu@menu_key^0,w,c
  4413   001AB4  A4D8               	btfss	status,2,c
  4414   001AB6  EF5F  F00D         	goto	u2771
  4415   001ABA  EF61  F00D         	goto	u2770
  4416   001ABE                     u2771:
  4417   001ABE  EF81  F00D         	goto	l3602
  4418   001AC2                     u2770:
  4419   001AC2                     
  4420                           ;menu.c: 38:     {;menu.c: 39:         time1++;
  4421   001AC2  0100               	movlb	0	; () banked
  4422   001AC4  4B93               	infsnz	_time1& (0+255),f,b
  4423   001AC6  2B94               	incf	(_time1+1)& (0+255),f,b
  4424   001AC8                     
  4425                           ; BSR set to: 0
  4426                           ;menu.c: 40:         if(time1 > 200)
  4427   001AC8  5194               	movf	(_time1+1)& (0+255),w,b
  4428   001ACA  E109               	bnz	u2780
  4429   001ACC  0EC9               	movlw	201
  4430   001ACE  5D93               	subwf	_time1& (0+255),w,b
  4431   001AD0  A0D8               	btfss	status,0,c
  4432   001AD2  EF6D  F00D         	goto	u2781
  4433   001AD6  EF6F  F00D         	goto	u2780
  4434   001ADA                     u2781:
  4435   001ADA  EFAF  F00D         	goto	l3616
  4436   001ADE                     u2780:
  4437   001ADE                     
  4438                           ; BSR set to: 0
  4439                           ;menu.c: 41:         {;menu.c: 43:             time1=0;
  4440   001ADE  0E00               	movlw	0
  4441   001AE0  6F94               	movwf	(_time1+1)& (0+255),b
  4442   001AE2  0E00               	movlw	0
  4443   001AE4  6F93               	movwf	_time1& (0+255),b
  4444                           
  4445                           ;menu.c: 44:             main_f = 3;
  4446   001AE6  0E03               	movlw	3
  4447   001AE8  6E55               	movwf	_main_f^0,c
  4448   001AEA                     
  4449                           ; BSR set to: 0
  4450                           ;menu.c: 45:             clcd_write(0x01, 0);
  4451   001AEA  0E00               	movlw	0
  4452   001AEC  6E01               	movwf	clcd_write@control_bit^0,c
  4453   001AEE  0E01               	movlw	1
  4454   001AF0  ECFA  F013         	call	_clcd_write
  4455   001AF4                     
  4456                           ;menu.c: 46:             tc_flag = 0;
  4457   001AF4  0E00               	movlw	0
  4458   001AF6  6E4D               	movwf	_tc_flag^0,c
  4459   001AF8                     
  4460                           ;menu.c: 47:             menu_f = menu_ind + arrow_st;
  4461   001AF8  5050               	movf	_menu_ind^0,w,c
  4462   001AFA  244F               	addwf	_arrow_st^0,w,c
  4463   001AFC  6E53               	movwf	_menu_f^0,c
  4464   001AFE  EFAF  F00D         	goto	l3616
  4465   001B02                     l3602:
  4466   001B02  0100               	movlb	0	; () banked
  4467   001B04  5194               	movf	(_time1+1)& (0+255),w,b
  4468   001B06  E107               	bnz	u2791
  4469   001B08  0EC8               	movlw	200
  4470   001B0A  5D93               	subwf	_time1& (0+255),w,b
  4471   001B0C  B0D8               	btfsc	status,0,c
  4472   001B0E  EF8B  F00D         	goto	u2791
  4473   001B12  EF8D  F00D         	goto	u2790
  4474   001B16                     u2791:
  4475   001B16  EFAF  F00D         	goto	l3616
  4476   001B1A                     u2790:
  4477   001B1A                     
  4478                           ; BSR set to: 0
  4479   001B1A  5193               	movf	_time1& (0+255),w,b
  4480   001B1C  1194               	iorwf	(_time1+1)& (0+255),w,b
  4481   001B1E  B4D8               	btfsc	status,2,c
  4482   001B20  EF94  F00D         	goto	u2801
  4483   001B24  EF96  F00D         	goto	u2800
  4484   001B28                     u2801:
  4485   001B28  EFAF  F00D         	goto	l3616
  4486   001B2C                     u2800:
  4487   001B2C                     
  4488                           ; BSR set to: 0
  4489                           ;menu.c: 52:     {;menu.c: 53:         time1 = 0;
  4490   001B2C  0E00               	movlw	0
  4491   001B2E  6F94               	movwf	(_time1+1)& (0+255),b
  4492   001B30  0E00               	movlw	0
  4493   001B32  6F93               	movwf	_time1& (0+255),b
  4494   001B34                     
  4495                           ; BSR set to: 0
  4496                           ;menu.c: 54:         if(arrow_st == 1)
  4497   001B34  044F               	decf	_arrow_st^0,w,c
  4498   001B36  A4D8               	btfss	status,2,c
  4499   001B38  EFA0  F00D         	goto	u2811
  4500   001B3C  EFA2  F00D         	goto	u2810
  4501   001B40                     u2811:
  4502   001B40  EFA6  F00D         	goto	l3612
  4503   001B44                     u2810:
  4504   001B44                     
  4505                           ; BSR set to: 0
  4506                           ;menu.c: 55:             arrow_st = 0;
  4507   001B44  0E00               	movlw	0
  4508   001B46  6E4F               	movwf	_arrow_st^0,c
  4509   001B48  EFAF  F00D         	goto	l3616
  4510   001B4C                     l3612:
  4511                           
  4512                           ; BSR set to: 0
  4513   001B4C  5050               	movf	_menu_ind^0,w,c
  4514   001B4E  B4D8               	btfsc	status,2,c
  4515   001B50  EFAC  F00D         	goto	u2821
  4516   001B54  EFAE  F00D         	goto	u2820
  4517   001B58                     u2821:
  4518   001B58  EFAF  F00D         	goto	l3616
  4519   001B5C                     u2820:
  4520   001B5C                     
  4521                           ; BSR set to: 0
  4522                           ;menu.c: 57:             menu_ind--;
  4523   001B5C  0650               	decf	_menu_ind^0,f,c
  4524   001B5E                     l3616:
  4525                           
  4526                           ;menu.c: 60:     if(menu_key == 12)
  4527   001B5E  0E0C               	movlw	12
  4528   001B60  180B               	xorwf	menu@menu_key^0,w,c
  4529   001B62  A4D8               	btfss	status,2,c
  4530   001B64  EFB6  F00D         	goto	u2831
  4531   001B68  EFB8  F00D         	goto	u2830
  4532   001B6C                     u2831:
  4533   001B6C  EFD2  F00D         	goto	l3626
  4534   001B70                     u2830:
  4535   001B70                     
  4536                           ;menu.c: 61:     {;menu.c: 62:         time2++;
  4537   001B70  4A3B               	infsnz	_time2^0,f,c
  4538   001B72  2A3C               	incf	(_time2+1)^0,f,c
  4539   001B74                     
  4540                           ;menu.c: 63:         if(time2 > 200)
  4541   001B74  503C               	movf	(_time2+1)^0,w,c
  4542   001B76  E109               	bnz	u2840
  4543   001B78  0EC9               	movlw	201
  4544   001B7A  5C3B               	subwf	_time2^0,w,c
  4545   001B7C  A0D8               	btfss	status,0,c
  4546   001B7E  EFC3  F00D         	goto	u2841
  4547   001B82  EFC5  F00D         	goto	u2840
  4548   001B86                     u2841:
  4549   001B86  EFFF  F00D         	goto	l286
  4550   001B8A                     u2840:
  4551   001B8A                     
  4552                           ;menu.c: 64:         {;menu.c: 66:             time2=0;
  4553   001B8A  0E00               	movlw	0
  4554   001B8C  6E3C               	movwf	(_time2+1)^0,c
  4555   001B8E  0E00               	movlw	0
  4556   001B90  6E3B               	movwf	_time2^0,c
  4557                           
  4558                           ;menu.c: 67:             main_f = 0;
  4559   001B92  0E00               	movlw	0
  4560   001B94  6E55               	movwf	_main_f^0,c
  4561   001B96                     
  4562                           ;menu.c: 68:             clcd_write(0x01, 0);
  4563   001B96  0E00               	movlw	0
  4564   001B98  6E01               	movwf	clcd_write@control_bit^0,c
  4565   001B9A  0E01               	movlw	1
  4566   001B9C  ECFA  F013         	call	_clcd_write
  4567   001BA0  EFFF  F00D         	goto	l286
  4568   001BA4                     l3626:
  4569   001BA4  503C               	movf	(_time2+1)^0,w,c
  4570   001BA6  E107               	bnz	u2851
  4571   001BA8  0EC8               	movlw	200
  4572   001BAA  5C3B               	subwf	_time2^0,w,c
  4573   001BAC  B0D8               	btfsc	status,0,c
  4574   001BAE  EFDB  F00D         	goto	u2851
  4575   001BB2  EFDD  F00D         	goto	u2850
  4576   001BB6                     u2851:
  4577   001BB6  EFFF  F00D         	goto	l286
  4578   001BBA                     u2850:
  4579   001BBA  503B               	movf	_time2^0,w,c
  4580   001BBC  103C               	iorwf	(_time2+1)^0,w,c
  4581   001BBE  B4D8               	btfsc	status,2,c
  4582   001BC0  EFE4  F00D         	goto	u2861
  4583   001BC4  EFE6  F00D         	goto	u2860
  4584   001BC8                     u2861:
  4585   001BC8  EFFF  F00D         	goto	l286
  4586   001BCC                     u2860:
  4587   001BCC                     
  4588                           ;menu.c: 73:     {;menu.c: 74:         time2 = 0;
  4589   001BCC  0E00               	movlw	0
  4590   001BCE  6E3C               	movwf	(_time2+1)^0,c
  4591   001BD0  0E00               	movlw	0
  4592   001BD2  6E3B               	movwf	_time2^0,c
  4593                           
  4594                           ;menu.c: 75:         if(arrow_st == 0)
  4595   001BD4  504F               	movf	_arrow_st^0,w,c
  4596   001BD6  A4D8               	btfss	status,2,c
  4597   001BD8  EFF0  F00D         	goto	u2871
  4598   001BDC  EFF2  F00D         	goto	u2870
  4599   001BE0                     u2871:
  4600   001BE0  EFF6  F00D         	goto	l3634
  4601   001BE4                     u2870:
  4602   001BE4                     
  4603                           ;menu.c: 76:             arrow_st = 1;
  4604   001BE4  0E01               	movlw	1
  4605   001BE6  6E4F               	movwf	_arrow_st^0,c
  4606   001BE8  EFFF  F00D         	goto	l286
  4607   001BEC                     l3634:
  4608   001BEC  0E03               	movlw	3
  4609   001BEE  6050               	cpfslt	_menu_ind^0,c
  4610   001BF0  EFFC  F00D         	goto	u2881
  4611   001BF4  EFFE  F00D         	goto	u2880
  4612   001BF8                     u2881:
  4613   001BF8  EFFF  F00D         	goto	l286
  4614   001BFC                     u2880:
  4615   001BFC                     
  4616                           ;menu.c: 78:             menu_ind++;
  4617   001BFC  2A50               	incf	_menu_ind^0,f,c
  4618   001BFE                     l286:
  4619   001BFE  0012               	return		;funcret
  4620   001C00                     __end_of_menu:
  4621                           	callstack 0
  4622                           
  4623 ;; *************** function _inti_config *****************
  4624 ;; Defined at:
  4625 ;;		line 28 in file "main.c"
  4626 ;; Parameters:    Size  Location     Type
  4627 ;;		None
  4628 ;; Auto vars:     Size  Location     Type
  4629 ;;		None
  4630 ;; Return value:  Size  Location     Type
  4631 ;;                  2   70[None  ] int 
  4632 ;; Registers used:
  4633 ;;		wreg, status,2, status,0, cstack
  4634 ;; Tracked objects:
  4635 ;;		On entry : 0/0
  4636 ;;		On exit  : 0/0
  4637 ;;		Unchanged: 0/0
  4638 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4639 ;;      Params:         0       0       0       0       0       0       0
  4640 ;;      Locals:         0       0       0       0       0       0       0
  4641 ;;      Temps:          0       0       0       0       0       0       0
  4642 ;;      Totals:         0       0       0       0       0       0       0
  4643 ;;Total ram usage:        0 bytes
  4644 ;; Hardware stack levels used: 1
  4645 ;; Hardware stack levels required when called: 6
  4646 ;; This function calls:
  4647 ;;		_init_adc
  4648 ;;		_init_clcd
  4649 ;;		_init_ds1307
  4650 ;;		_init_i2c
  4651 ;;		_init_matrix_keypad
  4652 ;;		_init_timer0
  4653 ;;		_init_uart
  4654 ;; This function is called by:
  4655 ;;		_main
  4656 ;; This function uses a non-reentrant model
  4657 ;;
  4658                           
  4659                           	psect	text9
  4660   0028D4                     __ptext9:
  4661                           	callstack 0
  4662   0028D4                     _inti_config:
  4663                           	callstack 24
  4664   0028D4                     
  4665                           ;main.c: 30:     GIE = 1;
  4666   0028D4  8EF2               	bsf	4082,7,c	;volatile
  4667   0028D6                     
  4668                           ;main.c: 31:     init_matrix_keypad();
  4669   0028D6  ECD6  F014         	call	_init_matrix_keypad	;wreg free
  4670                           
  4671                           ;main.c: 32:     init_clcd();
  4672   0028DA  EC52  F011         	call	_init_clcd	;wreg free
  4673   0028DE                     
  4674                           ;main.c: 33:     init_adc();
  4675   0028DE  EC8A  F014         	call	_init_adc	;wreg free
  4676   0028E2                     
  4677                           ;main.c: 34:     init_i2c();
  4678   0028E2  ECC1  F014         	call	_init_i2c	;wreg free
  4679                           
  4680                           ;main.c: 35:  init_ds1307();
  4681   0028E6  ECB7  F013         	call	_init_ds1307	;wreg free
  4682   0028EA                     
  4683                           ;main.c: 36:     init_timer0();
  4684   0028EA  ECCC  F014         	call	_init_timer0	;wreg free
  4685   0028EE                     
  4686                           ;main.c: 37:     init_uart();
  4687   0028EE  EC7A  F014         	call	_init_uart	;wreg free
  4688   0028F2  0012               	return		;funcret
  4689   0028F4                     __end_of_inti_config:
  4690                           	callstack 0
  4691                           
  4692 ;; *************** function _init_uart *****************
  4693 ;; Defined at:
  4694 ;;		line 4 in file "uart.c"
  4695 ;; Parameters:    Size  Location     Type
  4696 ;;		None
  4697 ;; Auto vars:     Size  Location     Type
  4698 ;;		None
  4699 ;; Return value:  Size  Location     Type
  4700 ;;                  1    wreg      void 
  4701 ;; Registers used:
  4702 ;;		wreg, status,2
  4703 ;; Tracked objects:
  4704 ;;		On entry : 0/0
  4705 ;;		On exit  : 0/0
  4706 ;;		Unchanged: 0/0
  4707 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4708 ;;      Params:         0       0       0       0       0       0       0
  4709 ;;      Locals:         0       0       0       0       0       0       0
  4710 ;;      Temps:          0       0       0       0       0       0       0
  4711 ;;      Totals:         0       0       0       0       0       0       0
  4712 ;;Total ram usage:        0 bytes
  4713 ;; Hardware stack levels used: 1
  4714 ;; Hardware stack levels required when called: 1
  4715 ;; This function calls:
  4716 ;;		Nothing
  4717 ;; This function is called by:
  4718 ;;		_inti_config
  4719 ;; This function uses a non-reentrant model
  4720 ;;
  4721                           
  4722                           	psect	text10
  4723   0028F4                     __ptext10:
  4724                           	callstack 0
  4725   0028F4                     _init_uart:
  4726                           	callstack 28
  4727   0028F4                     
  4728                           ;uart.c: 7:  TRISC7 = 1;
  4729   0028F4  8E94               	bsf	3988,7,c	;volatile
  4730                           
  4731                           ;uart.c: 8:  TRISC6 = 0;
  4732   0028F6  9C94               	bcf	3988,6,c	;volatile
  4733                           
  4734                           ;uart.c: 12:  TX9 = 0;
  4735   0028F8  9CAC               	bcf	4012,6,c	;volatile
  4736                           
  4737                           ;uart.c: 14:  TXEN = 1;
  4738   0028FA  8AAC               	bsf	4012,5,c	;volatile
  4739                           
  4740                           ;uart.c: 17:  SYNC = 0;
  4741   0028FC  98AC               	bcf	4012,4,c	;volatile
  4742                           
  4743                           ;uart.c: 19:  SENDB = 0;
  4744   0028FE  96AC               	bcf	4012,3,c	;volatile
  4745                           
  4746                           ;uart.c: 22:  BRGH = 1;
  4747   002900  84AC               	bsf	4012,2,c	;volatile
  4748                           
  4749                           ;uart.c: 26:  SPEN = 1;
  4750   002902  8EAB               	bsf	4011,7,c	;volatile
  4751                           
  4752                           ;uart.c: 28:  RX9 = 0;
  4753   002904  9CAB               	bcf	4011,6,c	;volatile
  4754                           
  4755                           ;uart.c: 30:  CREN = 1;
  4756   002906  88AB               	bsf	4011,4,c	;volatile
  4757                           
  4758                           ;uart.c: 35:  BRG16 = 0;
  4759   002908  96B8               	bcf	4024,3,c	;volatile
  4760   00290A                     
  4761                           ;uart.c: 40:  SPBRG = 129;
  4762   00290A  0E81               	movlw	129
  4763   00290C  6EAF               	movwf	175,c	;volatile
  4764   00290E                     
  4765                           ;uart.c: 44:  TXIF = 0;
  4766   00290E  989E               	bcf	3998,4,c	;volatile
  4767   002910                     
  4768                           ;uart.c: 47:  RCIF = 0;
  4769   002910  9A9E               	bcf	3998,5,c	;volatile
  4770   002912  0012               	return		;funcret
  4771   002914                     __end_of_init_uart:
  4772                           	callstack 0
  4773                           
  4774 ;; *************** function _init_timer0 *****************
  4775 ;; Defined at:
  4776 ;;		line 4 in file "timer0.c"
  4777 ;; Parameters:    Size  Location     Type
  4778 ;;		None
  4779 ;; Auto vars:     Size  Location     Type
  4780 ;;		None
  4781 ;; Return value:  Size  Location     Type
  4782 ;;                  1    wreg      void 
  4783 ;; Registers used:
  4784 ;;		wreg, status,2
  4785 ;; Tracked objects:
  4786 ;;		On entry : 0/0
  4787 ;;		On exit  : 0/0
  4788 ;;		Unchanged: 0/0
  4789 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4790 ;;      Params:         0       0       0       0       0       0       0
  4791 ;;      Locals:         0       0       0       0       0       0       0
  4792 ;;      Temps:          0       0       0       0       0       0       0
  4793 ;;      Totals:         0       0       0       0       0       0       0
  4794 ;;Total ram usage:        0 bytes
  4795 ;; Hardware stack levels used: 1
  4796 ;; Hardware stack levels required when called: 1
  4797 ;; This function calls:
  4798 ;;		Nothing
  4799 ;; This function is called by:
  4800 ;;		_inti_config
  4801 ;; This function uses a non-reentrant model
  4802 ;;
  4803                           
  4804                           	psect	text11
  4805   002998                     __ptext11:
  4806                           	callstack 0
  4807   002998                     _init_timer0:
  4808                           	callstack 28
  4809   002998                     
  4810                           ;timer0.c: 12:  T08BIT = 1;
  4811   002998  8CD5               	bsf	4053,6,c	;volatile
  4812                           
  4813                           ;timer0.c: 15:  T0CS = 0;
  4814   00299A  9AD5               	bcf	4053,5,c	;volatile
  4815                           
  4816                           ;timer0.c: 18:  PSA = 1;
  4817   00299C  86D5               	bsf	4053,3,c	;volatile
  4818   00299E                     
  4819                           ;timer0.c: 20:  TMR0 = 6;
  4820   00299E  0E00               	movlw	0
  4821   0029A0  6ED7               	movwf	215,c	;volatile
  4822   0029A2  0E06               	movlw	6
  4823   0029A4  6ED6               	movwf	214,c	;volatile
  4824   0029A6                     
  4825                           ;timer0.c: 23:  TMR0IF = 0;
  4826   0029A6  94F2               	bcf	4082,2,c	;volatile
  4827   0029A8                     
  4828                           ;timer0.c: 26:  TMR0IE = 1;
  4829   0029A8  8AF2               	bsf	4082,5,c	;volatile
  4830   0029AA  0012               	return		;funcret
  4831   0029AC                     __end_of_init_timer0:
  4832                           	callstack 0
  4833                           
  4834 ;; *************** function _init_matrix_keypad *****************
  4835 ;; Defined at:
  4836 ;;		line 4 in file "matrix_keypad.c"
  4837 ;; Parameters:    Size  Location     Type
  4838 ;;		None
  4839 ;; Auto vars:     Size  Location     Type
  4840 ;;		None
  4841 ;; Return value:  Size  Location     Type
  4842 ;;                  1    wreg      void 
  4843 ;; Registers used:
  4844 ;;		wreg, status,2, status,0
  4845 ;; Tracked objects:
  4846 ;;		On entry : 0/0
  4847 ;;		On exit  : 0/0
  4848 ;;		Unchanged: 0/0
  4849 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4850 ;;      Params:         0       0       0       0       0       0       0
  4851 ;;      Locals:         0       0       0       0       0       0       0
  4852 ;;      Temps:          0       0       0       0       0       0       0
  4853 ;;      Totals:         0       0       0       0       0       0       0
  4854 ;;Total ram usage:        0 bytes
  4855 ;; Hardware stack levels used: 1
  4856 ;; Hardware stack levels required when called: 1
  4857 ;; This function calls:
  4858 ;;		Nothing
  4859 ;; This function is called by:
  4860 ;;		_inti_config
  4861 ;; This function uses a non-reentrant model
  4862 ;;
  4863                           
  4864                           	psect	text12
  4865   0029AC                     __ptext12:
  4866                           	callstack 0
  4867   0029AC                     _init_matrix_keypad:
  4868                           	callstack 28
  4869   0029AC                     
  4870                           ;matrix_keypad.c: 7:  ADCON1 = 0x0F;
  4871   0029AC  0E0F               	movlw	15
  4872   0029AE  6EC1               	movwf	193,c	;volatile
  4873                           
  4874                           ;matrix_keypad.c: 10:  TRISB = 0x1E;
  4875   0029B0  0E1E               	movlw	30
  4876   0029B2  6E93               	movwf	147,c	;volatile
  4877   0029B4                     
  4878                           ;matrix_keypad.c: 13:  RBPU = 0;
  4879   0029B4  9EF1               	bcf	4081,7,c	;volatile
  4880   0029B6                     
  4881                           ;matrix_keypad.c: 15:  PORTB = PORTB | 0xE0;
  4882   0029B6  5081               	movf	129,w,c	;volatile
  4883   0029B8  09E0               	iorlw	224
  4884   0029BA  6E81               	movwf	129,c	;volatile
  4885   0029BC  0012               	return		;funcret
  4886   0029BE                     __end_of_init_matrix_keypad:
  4887                           	callstack 0
  4888                           
  4889 ;; *************** function _init_i2c *****************
  4890 ;; Defined at:
  4891 ;;		line 4 in file "i2c.c"
  4892 ;; Parameters:    Size  Location     Type
  4893 ;;		None
  4894 ;; Auto vars:     Size  Location     Type
  4895 ;;		None
  4896 ;; Return value:  Size  Location     Type
  4897 ;;                  1    wreg      void 
  4898 ;; Registers used:
  4899 ;;		wreg, status,2
  4900 ;; Tracked objects:
  4901 ;;		On entry : 0/0
  4902 ;;		On exit  : 0/0
  4903 ;;		Unchanged: 0/0
  4904 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4905 ;;      Params:         0       0       0       0       0       0       0
  4906 ;;      Locals:         0       0       0       0       0       0       0
  4907 ;;      Temps:          0       0       0       0       0       0       0
  4908 ;;      Totals:         0       0       0       0       0       0       0
  4909 ;;Total ram usage:        0 bytes
  4910 ;; Hardware stack levels used: 1
  4911 ;; Hardware stack levels required when called: 1
  4912 ;; This function calls:
  4913 ;;		Nothing
  4914 ;; This function is called by:
  4915 ;;		_inti_config
  4916 ;; This function uses a non-reentrant model
  4917 ;;
  4918                           
  4919                           	psect	text13
  4920   002982                     __ptext13:
  4921                           	callstack 0
  4922   002982                     _init_i2c:
  4923                           	callstack 28
  4924   002982                     
  4925                           ;i2c.c: 7:  TRISC3 = 1;
  4926   002982  8694               	bsf	3988,3,c	;volatile
  4927                           
  4928                           ;i2c.c: 8:  TRISC4 = 1;
  4929   002984  8894               	bsf	3988,4,c	;volatile
  4930   002986                     
  4931                           ;i2c.c: 10:  SSPCON1 = 0x28;
  4932   002986  0E28               	movlw	40
  4933   002988  6EC6               	movwf	198,c	;volatile
  4934                           
  4935                           ;i2c.c: 12:  SSPADD = 0x31;
  4936   00298A  0E31               	movlw	49
  4937   00298C  6EC8               	movwf	200,c	;volatile
  4938   00298E                     
  4939                           ;i2c.c: 14:  CKE = 0;
  4940   00298E  9CC7               	bcf	4039,6,c	;volatile
  4941   002990                     
  4942                           ;i2c.c: 16:  SMP = 1;
  4943   002990  8EC7               	bsf	4039,7,c	;volatile
  4944   002992                     
  4945                           ;i2c.c: 18:  SSPIF = 0;
  4946   002992  969E               	bcf	3998,3,c	;volatile
  4947   002994                     
  4948                           ;i2c.c: 20:  BCLIF = 0;
  4949   002994  96A1               	bcf	4001,3,c	;volatile
  4950   002996  0012               	return		;funcret
  4951   002998                     __end_of_init_i2c:
  4952                           	callstack 0
  4953                           
  4954 ;; *************** function _init_ds1307 *****************
  4955 ;; Defined at:
  4956 ;;		line 13 in file "ds1307.c"
  4957 ;; Parameters:    Size  Location     Type
  4958 ;;		None
  4959 ;; Auto vars:     Size  Location     Type
  4960 ;;  dummy           1    3[COMRAM] unsigned char 
  4961 ;; Return value:  Size  Location     Type
  4962 ;;                  1    wreg      void 
  4963 ;; Registers used:
  4964 ;;		wreg, status,2, status,0, cstack
  4965 ;; Tracked objects:
  4966 ;;		On entry : 0/0
  4967 ;;		On exit  : 0/0
  4968 ;;		Unchanged: 0/0
  4969 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4970 ;;      Params:         0       0       0       0       0       0       0
  4971 ;;      Locals:         1       0       0       0       0       0       0
  4972 ;;      Temps:          0       0       0       0       0       0       0
  4973 ;;      Totals:         1       0       0       0       0       0       0
  4974 ;;Total ram usage:        1 bytes
  4975 ;; Hardware stack levels used: 1
  4976 ;; Hardware stack levels required when called: 5
  4977 ;; This function calls:
  4978 ;;		_read_ds1307
  4979 ;;		_write_ds1307
  4980 ;; This function is called by:
  4981 ;;		_inti_config
  4982 ;; This function uses a non-reentrant model
  4983 ;;
  4984                           
  4985                           	psect	text14
  4986   00276E                     __ptext14:
  4987                           	callstack 0
  4988   00276E                     _init_ds1307:
  4989                           	callstack 24
  4990   00276E                     
  4991                           ;ds1307.c: 15:  unsigned char dummy;;ds1307.c: 18:  dummy = read_ds1307(0x00);
  4992   00276E  0E00               	movlw	0
  4993   002770  EC2D  F014         	call	_read_ds1307
  4994   002774  6E04               	movwf	init_ds1307@dummy^0,c
  4995   002776                     
  4996                           ;ds1307.c: 19:  write_ds1307(0x00, dummy | 0x80);
  4997   002776  5004               	movf	init_ds1307@dummy^0,w,c
  4998   002778  0980               	iorlw	128
  4999   00277A  6E02               	movwf	write_ds1307@data^0,c
  5000   00277C  0E00               	movlw	0
  5001   00277E  EC9A  F014         	call	_write_ds1307
  5002   002782                     
  5003                           ;ds1307.c: 22:  dummy = read_ds1307(0x02);
  5004   002782  0E02               	movlw	2
  5005   002784  EC2D  F014         	call	_read_ds1307
  5006   002788  6E04               	movwf	init_ds1307@dummy^0,c
  5007   00278A                     
  5008                           ;ds1307.c: 23:  write_ds1307(0x02, dummy | 0x00);
  5009   00278A  C004  F002         	movff	init_ds1307@dummy,write_ds1307@data
  5010   00278E  0E02               	movlw	2
  5011   002790  EC9A  F014         	call	_write_ds1307
  5012   002794                     
  5013                           ;ds1307.c: 25:  write_ds1307(0x07, 0x93);
  5014   002794  0E93               	movlw	147
  5015   002796  6E02               	movwf	write_ds1307@data^0,c
  5016   002798  0E07               	movlw	7
  5017   00279A  EC9A  F014         	call	_write_ds1307
  5018   00279E                     
  5019                           ;ds1307.c: 28:  dummy = read_ds1307(0x00);
  5020   00279E  0E00               	movlw	0
  5021   0027A0  EC2D  F014         	call	_read_ds1307
  5022   0027A4  6E04               	movwf	init_ds1307@dummy^0,c
  5023   0027A6                     
  5024                           ;ds1307.c: 29:  write_ds1307(0x00, dummy & 0x7F);
  5025   0027A6  5004               	movf	init_ds1307@dummy^0,w,c
  5026   0027A8  0B7F               	andlw	127
  5027   0027AA  6E02               	movwf	write_ds1307@data^0,c
  5028   0027AC  0E00               	movlw	0
  5029   0027AE  EC9A  F014         	call	_write_ds1307
  5030   0027B2  0012               	return		;funcret
  5031   0027B4                     __end_of_init_ds1307:
  5032                           	callstack 0
  5033                           
  5034 ;; *************** function _write_ds1307 *****************
  5035 ;; Defined at:
  5036 ;;		line 33 in file "ds1307.c"
  5037 ;; Parameters:    Size  Location     Type
  5038 ;;  address         1    wreg     unsigned char 
  5039 ;;  data            1    1[COMRAM] unsigned char 
  5040 ;; Auto vars:     Size  Location     Type
  5041 ;;  address         1    2[COMRAM] unsigned char 
  5042 ;; Return value:  Size  Location     Type
  5043 ;;                  1    wreg      void 
  5044 ;; Registers used:
  5045 ;;		wreg, status,2, cstack
  5046 ;; Tracked objects:
  5047 ;;		On entry : 0/0
  5048 ;;		On exit  : 0/0
  5049 ;;		Unchanged: 0/0
  5050 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5051 ;;      Params:         1       0       0       0       0       0       0
  5052 ;;      Locals:         1       0       0       0       0       0       0
  5053 ;;      Temps:          0       0       0       0       0       0       0
  5054 ;;      Totals:         2       0       0       0       0       0       0
  5055 ;;Total ram usage:        2 bytes
  5056 ;; Hardware stack levels used: 1
  5057 ;; Hardware stack levels required when called: 3
  5058 ;; This function calls:
  5059 ;;		_i2c_start
  5060 ;;		_i2c_stop
  5061 ;;		_i2c_write
  5062 ;; This function is called by:
  5063 ;;		_set_time
  5064 ;;		_init_ds1307
  5065 ;; This function uses a non-reentrant model
  5066 ;;
  5067                           
  5068                           	psect	text15
  5069   002934                     __ptext15:
  5070                           	callstack 0
  5071   002934                     _write_ds1307:
  5072                           	callstack 26
  5073                           
  5074                           ;incstack = 0
  5075                           ;write_ds1307@address stored from wreg
  5076   002934  6E03               	movwf	write_ds1307@address^0,c
  5077   002936                     
  5078                           ;ds1307.c: 33: void write_ds1307(unsigned char address, unsigned char data);ds1307.c: 34
      +                          : {;ds1307.c: 35:  i2c_start();
  5079   002936  ECF8  F014         	call	_i2c_start	;wreg free
  5080   00293A                     
  5081                           ;ds1307.c: 36:  i2c_write(0xD0);
  5082   00293A  0ED0               	movlw	208
  5083   00293C  ECE8  F014         	call	_i2c_write
  5084   002940                     
  5085                           ;ds1307.c: 37:  i2c_write(address);
  5086   002940  5003               	movf	write_ds1307@address^0,w,c
  5087   002942  ECE8  F014         	call	_i2c_write
  5088   002946                     
  5089                           ;ds1307.c: 38:  i2c_write(data);
  5090   002946  5002               	movf	write_ds1307@data^0,w,c
  5091   002948  ECE8  F014         	call	_i2c_write
  5092   00294C                     
  5093                           ;ds1307.c: 39:  i2c_stop();
  5094   00294C  ECF4  F014         	call	_i2c_stop	;wreg free
  5095   002950  0012               	return		;funcret
  5096   002952                     __end_of_write_ds1307:
  5097                           	callstack 0
  5098                           
  5099 ;; *************** function _init_clcd *****************
  5100 ;; Defined at:
  5101 ;;		line 29 in file "clcd.c"
  5102 ;; Parameters:    Size  Location     Type
  5103 ;;		None
  5104 ;; Auto vars:     Size  Location     Type
  5105 ;;		None
  5106 ;; Return value:  Size  Location     Type
  5107 ;;                  1    wreg      void 
  5108 ;; Registers used:
  5109 ;;		wreg, status,2, status,0, cstack
  5110 ;; Tracked objects:
  5111 ;;		On entry : 0/0
  5112 ;;		On exit  : 0/0
  5113 ;;		Unchanged: 0/0
  5114 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5115 ;;      Params:         0       0       0       0       0       0       0
  5116 ;;      Locals:         0       0       0       0       0       0       0
  5117 ;;      Temps:          1       0       0       0       0       0       0
  5118 ;;      Totals:         1       0       0       0       0       0       0
  5119 ;;Total ram usage:        1 bytes
  5120 ;; Hardware stack levels used: 1
  5121 ;; Hardware stack levels required when called: 2
  5122 ;; This function calls:
  5123 ;;		_clcd_write
  5124 ;; This function is called by:
  5125 ;;		_inti_config
  5126 ;; This function uses a non-reentrant model
  5127 ;;
  5128                           
  5129                           	psect	text16
  5130   0022A4                     __ptext16:
  5131                           	callstack 0
  5132   0022A4                     _init_clcd:
  5133                           	callstack 27
  5134   0022A4                     
  5135                           ;clcd.c: 32:  TRISD = 0x00;
  5136   0022A4  0E00               	movlw	0
  5137   0022A6  6E95               	movwf	149,c	;volatile
  5138   0022A8                     
  5139                           ;clcd.c: 34:  TRISC = TRISC & 0xF8;
  5140   0022A8  5094               	movf	148,w,c	;volatile
  5141   0022AA  0BF8               	andlw	248
  5142   0022AC  6E94               	movwf	148,c	;volatile
  5143   0022AE                     
  5144                           ;clcd.c: 36:  RC0 = 0;
  5145   0022AE  9082               	bcf	3970,0,c	;volatile
  5146   0022B0                     
  5147                           ;clcd.c: 40:     _delay((unsigned long)((30)*(20000000/4000.0)));
  5148   0022B0  0EC3               	movlw	195
  5149   0022B2  6E03               	movwf	??_init_clcd^0,c
  5150   0022B4  0ECD               	movlw	205
  5151   0022B6                     u4117:
  5152   0022B6  2EE8               	decfsz	wreg,f,c
  5153   0022B8  D7FE               	bra	u4117
  5154   0022BA  2E03               	decfsz	??_init_clcd^0,f,c
  5155   0022BC  D7FC               	bra	u4117
  5156   0022BE  F000               	nop	
  5157   0022C0                     
  5158                           ;clcd.c: 43:     clcd_write(0x33, 0 );
  5159   0022C0  0E00               	movlw	0
  5160   0022C2  6E01               	movwf	clcd_write@control_bit^0,c
  5161   0022C4  0E33               	movlw	51
  5162   0022C6  ECFA  F013         	call	_clcd_write
  5163   0022CA                     
  5164                           ;clcd.c: 44:     _delay((unsigned long)((4100)*(20000000/4000000.0)));
  5165   0022CA  0E1B               	movlw	27
  5166   0022CC  6E03               	movwf	??_init_clcd^0,c
  5167   0022CE  0E9E               	movlw	158
  5168   0022D0                     u4127:
  5169   0022D0  2EE8               	decfsz	wreg,f,c
  5170   0022D2  D7FE               	bra	u4127
  5171   0022D4  2E03               	decfsz	??_init_clcd^0,f,c
  5172   0022D6  D7FC               	bra	u4127
  5173   0022D8  D000               	nop2	
  5174   0022DA                     
  5175                           ;clcd.c: 45:     clcd_write(0x33, 0 );
  5176   0022DA  0E00               	movlw	0
  5177   0022DC  6E01               	movwf	clcd_write@control_bit^0,c
  5178   0022DE  0E33               	movlw	51
  5179   0022E0  ECFA  F013         	call	_clcd_write
  5180   0022E4                     
  5181                           ;clcd.c: 46:     _delay((unsigned long)((100)*(20000000/4000000.0)));
  5182   0022E4  0EA6               	movlw	166
  5183   0022E6                     u4137:
  5184   0022E6  2EE8               	decfsz	wreg,f,c
  5185   0022E8  D7FE               	bra	u4137
  5186   0022EA  D000               	nop2	
  5187   0022EC                     
  5188                           ;clcd.c: 47:     clcd_write(0x33, 0 );
  5189   0022EC  0E00               	movlw	0
  5190   0022EE  6E01               	movwf	clcd_write@control_bit^0,c
  5191   0022F0  0E33               	movlw	51
  5192   0022F2  ECFA  F013         	call	_clcd_write
  5193   0022F6                     
  5194                           ;clcd.c: 48:     _delay((unsigned long)((1)*(20000000/4000000.0)));
  5195   0022F6  D000               	nop2		;2 cycle nop
  5196   0022F8  D000               	nop2		;2 cycle nop
  5197   0022FA  F000               	nop	
  5198   0022FC                     
  5199                           ;clcd.c: 50:     clcd_write(0x02, 0);
  5200   0022FC  0E00               	movlw	0
  5201   0022FE  6E01               	movwf	clcd_write@control_bit^0,c
  5202   002300  0E02               	movlw	2
  5203   002302  ECFA  F013         	call	_clcd_write
  5204   002306                     
  5205                           ;clcd.c: 51:     _delay((unsigned long)((100)*(20000000/4000000.0)));
  5206   002306  0EA6               	movlw	166
  5207   002308                     u4147:
  5208   002308  2EE8               	decfsz	wreg,f,c
  5209   00230A  D7FE               	bra	u4147
  5210   00230C  D000               	nop2	
  5211   00230E                     
  5212                           ;clcd.c: 52:     clcd_write(0x38, 0);
  5213   00230E  0E00               	movlw	0
  5214   002310  6E01               	movwf	clcd_write@control_bit^0,c
  5215   002312  0E38               	movlw	56
  5216   002314  ECFA  F013         	call	_clcd_write
  5217   002318                     
  5218                           ;clcd.c: 53:     _delay((unsigned long)((100)*(20000000/4000000.0)));
  5219   002318  0EA6               	movlw	166
  5220   00231A                     u4157:
  5221   00231A  2EE8               	decfsz	wreg,f,c
  5222   00231C  D7FE               	bra	u4157
  5223   00231E  D000               	nop2	
  5224   002320                     
  5225                           ;clcd.c: 54:     clcd_write(0x01, 0);
  5226   002320  0E00               	movlw	0
  5227   002322  6E01               	movwf	clcd_write@control_bit^0,c
  5228   002324  0E01               	movlw	1
  5229   002326  ECFA  F013         	call	_clcd_write
  5230   00232A                     
  5231                           ;clcd.c: 55:     _delay((unsigned long)((500)*(20000000/4000000.0)));
  5232   00232A  0E04               	movlw	4
  5233   00232C  6E03               	movwf	??_init_clcd^0,c
  5234   00232E  0E3E               	movlw	62
  5235   002330                     u4167:
  5236   002330  2EE8               	decfsz	wreg,f,c
  5237   002332  D7FE               	bra	u4167
  5238   002334  2E03               	decfsz	??_init_clcd^0,f,c
  5239   002336  D7FC               	bra	u4167
  5240   002338                     
  5241                           ;clcd.c: 56:     clcd_write(0x0C, 0);
  5242   002338  0E00               	movlw	0
  5243   00233A  6E01               	movwf	clcd_write@control_bit^0,c
  5244   00233C  0E0C               	movlw	12
  5245   00233E  ECFA  F013         	call	_clcd_write
  5246   002342                     
  5247                           ;clcd.c: 57:     _delay((unsigned long)((100)*(20000000/4000000.0)));
  5248   002342  0EA6               	movlw	166
  5249   002344                     u4177:
  5250   002344  2EE8               	decfsz	wreg,f,c
  5251   002346  D7FE               	bra	u4177
  5252   002348  D000               	nop2	
  5253   00234A  0012               	return		;funcret
  5254   00234C                     __end_of_init_clcd:
  5255                           	callstack 0
  5256                           
  5257 ;; *************** function _init_adc *****************
  5258 ;; Defined at:
  5259 ;;		line 4 in file "adc.c"
  5260 ;; Parameters:    Size  Location     Type
  5261 ;;		None
  5262 ;; Auto vars:     Size  Location     Type
  5263 ;;		None
  5264 ;; Return value:  Size  Location     Type
  5265 ;;                  1    wreg      void 
  5266 ;; Registers used:
  5267 ;;		wreg, status,2
  5268 ;; Tracked objects:
  5269 ;;		On entry : 0/0
  5270 ;;		On exit  : 0/0
  5271 ;;		Unchanged: 0/0
  5272 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5273 ;;      Params:         0       0       0       0       0       0       0
  5274 ;;      Locals:         0       0       0       0       0       0       0
  5275 ;;      Temps:          0       0       0       0       0       0       0
  5276 ;;      Totals:         0       0       0       0       0       0       0
  5277 ;;Total ram usage:        0 bytes
  5278 ;; Hardware stack levels used: 1
  5279 ;; Hardware stack levels required when called: 1
  5280 ;; This function calls:
  5281 ;;		Nothing
  5282 ;; This function is called by:
  5283 ;;		_inti_config
  5284 ;; This function uses a non-reentrant model
  5285 ;;
  5286                           
  5287                           	psect	text17
  5288   002914                     __ptext17:
  5289                           	callstack 0
  5290   002914                     _init_adc:
  5291                           	callstack 28
  5292   002914                     
  5293                           ;adc.c: 7:  ADFM = 1;
  5294   002914  8EC0               	bsf	4032,7,c	;volatile
  5295                           
  5296                           ;adc.c: 13:  ACQT2 = 1;
  5297   002916  8AC0               	bsf	4032,5,c	;volatile
  5298                           
  5299                           ;adc.c: 14:  ACQT1 = 0;
  5300   002918  98C0               	bcf	4032,4,c	;volatile
  5301                           
  5302                           ;adc.c: 15:  ACQT0 = 0;
  5303   00291A  96C0               	bcf	4032,3,c	;volatile
  5304                           
  5305                           ;adc.c: 21:  ADCS0 = 0;
  5306   00291C  90C0               	bcf	4032,0,c	;volatile
  5307                           
  5308                           ;adc.c: 22:  ADCS1 = 1;
  5309   00291E  82C0               	bsf	4032,1,c	;volatile
  5310                           
  5311                           ;adc.c: 23:  ADCS2 = 0;
  5312   002920  94C0               	bcf	4032,2,c	;volatile
  5313                           
  5314                           ;adc.c: 26:  GODONE = 0;
  5315   002922  92C2               	bcf	4034,1,c	;volatile
  5316                           
  5317                           ;adc.c: 31:  VCFG1 = 0;
  5318   002924  9AC1               	bcf	4033,5,c	;volatile
  5319                           
  5320                           ;adc.c: 33:  VCFG0 = 0;
  5321   002926  98C1               	bcf	4033,4,c	;volatile
  5322   002928                     
  5323                           ;adc.c: 36:  ADRESH = 0;
  5324   002928  0E00               	movlw	0
  5325   00292A  6EC4               	movwf	196,c	;volatile
  5326                           
  5327                           ;adc.c: 37:  ADRESL = 0;
  5328   00292C  0E00               	movlw	0
  5329   00292E  6EC3               	movwf	195,c	;volatile
  5330   002930                     
  5331                           ;adc.c: 40:  ADON = 1;
  5332   002930  80C2               	bsf	4034,0,c	;volatile
  5333   002932  0012               	return		;funcret
  5334   002934                     __end_of_init_adc:
  5335                           	callstack 0
  5336                           
  5337 ;; *************** function _get_time *****************
  5338 ;; Defined at:
  5339 ;;		line 41 in file "main.c"
  5340 ;; Parameters:    Size  Location     Type
  5341 ;;		None
  5342 ;; Auto vars:     Size  Location     Type
  5343 ;;		None
  5344 ;; Return value:  Size  Location     Type
  5345 ;;                  1    wreg      void 
  5346 ;; Registers used:
  5347 ;;		wreg, status,2, status,0, cstack
  5348 ;; Tracked objects:
  5349 ;;		On entry : 0/0
  5350 ;;		On exit  : 0/0
  5351 ;;		Unchanged: 0/0
  5352 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5353 ;;      Params:         0       0       0       0       0       0       0
  5354 ;;      Locals:         0       0       0       0       0       0       0
  5355 ;;      Temps:          0       0       0       0       0       0       0
  5356 ;;      Totals:         0       0       0       0       0       0       0
  5357 ;;Total ram usage:        0 bytes
  5358 ;; Hardware stack levels used: 1
  5359 ;; Hardware stack levels required when called: 5
  5360 ;; This function calls:
  5361 ;;		_read_ds1307
  5362 ;; This function is called by:
  5363 ;;		_main
  5364 ;; This function uses a non-reentrant model
  5365 ;;
  5366                           
  5367                           	psect	text18
  5368   0025B8                     __ptext18:
  5369                           	callstack 0
  5370   0025B8                     _get_time:
  5371                           	callstack 25
  5372   0025B8                     
  5373                           ;main.c: 43:  clock_reg[0] = read_ds1307(0x02);
  5374   0025B8  0E02               	movlw	2
  5375   0025BA  EC2D  F014         	call	_read_ds1307
  5376   0025BE  0100               	movlb	0	; () banked
  5377   0025C0  6F82               	movwf	_clock_reg& (0+255),b
  5378                           
  5379                           ;main.c: 44:  clock_reg[1] = read_ds1307(0x01);
  5380   0025C2  0E01               	movlw	1
  5381   0025C4  EC2D  F014         	call	_read_ds1307
  5382   0025C8  0100               	movlb	0	; () banked
  5383   0025CA  6F83               	movwf	(_clock_reg+1)& (0+255),b
  5384                           
  5385                           ;main.c: 45:  clock_reg[2] = read_ds1307(0x00);
  5386   0025CC  0E00               	movlw	0
  5387   0025CE  EC2D  F014         	call	_read_ds1307
  5388   0025D2  0100               	movlb	0	; () banked
  5389   0025D4  6F84               	movwf	(_clock_reg+2)& (0+255),b
  5390   0025D6                     
  5391                           ; BSR set to: 0
  5392                           ;main.c: 46:     time[0] = '0' + ((clock_reg[0] >> 4) & 0x03);
  5393   0025D6  3982               	swapf	_clock_reg& (0+255),w,b
  5394   0025D8  0B0F               	andlw	15
  5395   0025DA  0B03               	andlw	3
  5396   0025DC  0F30               	addlw	48
  5397   0025DE  6FA3               	movwf	_time& (0+255),b
  5398   0025E0                     
  5399                           ; BSR set to: 0
  5400                           ;main.c: 47:     time[1] = '0' + (clock_reg[0] & 0x0F);
  5401   0025E0  5182               	movf	_clock_reg& (0+255),w,b
  5402   0025E2  0B0F               	andlw	15
  5403   0025E4  0F30               	addlw	48
  5404   0025E6  6FA4               	movwf	(_time+1)& (0+255),b
  5405   0025E8                     
  5406                           ; BSR set to: 0
  5407                           ;main.c: 48:  time[2] = ':';
  5408   0025E8  0E3A               	movlw	58
  5409   0025EA  6FA5               	movwf	(_time+2)& (0+255),b
  5410   0025EC                     
  5411                           ; BSR set to: 0
  5412                           ;main.c: 49:  time[3] = '0' + ((clock_reg[1] >> 4) & 0x0F);
  5413   0025EC  3983               	swapf	(_clock_reg+1)& (0+255),w,b
  5414   0025EE  0B0F               	andlw	15
  5415   0025F0  0B0F               	andlw	15
  5416   0025F2  0F30               	addlw	48
  5417   0025F4  6FA6               	movwf	(_time+3)& (0+255),b
  5418   0025F6                     
  5419                           ; BSR set to: 0
  5420                           ;main.c: 50:  time[4] = '0' + (clock_reg[1] & 0x0F);
  5421   0025F6  5183               	movf	(_clock_reg+1)& (0+255),w,b
  5422   0025F8  0B0F               	andlw	15
  5423   0025FA  0F30               	addlw	48
  5424   0025FC  6FA7               	movwf	(_time+4)& (0+255),b
  5425   0025FE                     
  5426                           ; BSR set to: 0
  5427                           ;main.c: 51:  time[5] = ':';
  5428   0025FE  0E3A               	movlw	58
  5429   002600  6FA8               	movwf	(_time+5)& (0+255),b
  5430   002602                     
  5431                           ; BSR set to: 0
  5432                           ;main.c: 52:  time[6] = '0' + ((clock_reg[2] >> 4) & 0x0F);
  5433   002602  3984               	swapf	(_clock_reg+2)& (0+255),w,b
  5434   002604  0B0F               	andlw	15
  5435   002606  0B0F               	andlw	15
  5436   002608  0F30               	addlw	48
  5437   00260A  6FA9               	movwf	(_time+6)& (0+255),b
  5438   00260C                     
  5439                           ; BSR set to: 0
  5440                           ;main.c: 53:  time[7] = '0' + (clock_reg[2] & 0x0F);
  5441   00260C  5184               	movf	(_clock_reg+2)& (0+255),w,b
  5442   00260E  0B0F               	andlw	15
  5443   002610  0F30               	addlw	48
  5444   002612  6FAA               	movwf	(_time+7)& (0+255),b
  5445   002614                     
  5446                           ; BSR set to: 0
  5447                           ;main.c: 54:  time[8] = '\0';
  5448   002614  0E00               	movlw	0
  5449   002616  6FAB               	movwf	(_time+8)& (0+255),b
  5450   002618                     
  5451                           ; BSR set to: 0
  5452   002618  0012               	return		;funcret
  5453   00261A                     __end_of_get_time:
  5454                           	callstack 0
  5455                           
  5456 ;; *************** function _read_ds1307 *****************
  5457 ;; Defined at:
  5458 ;;		line 42 in file "ds1307.c"
  5459 ;; Parameters:    Size  Location     Type
  5460 ;;  address         1    wreg     unsigned char 
  5461 ;; Auto vars:     Size  Location     Type
  5462 ;;  address         1    1[COMRAM] unsigned char 
  5463 ;;  data            1    2[COMRAM] unsigned char 
  5464 ;; Return value:  Size  Location     Type
  5465 ;;                  1    wreg      unsigned char 
  5466 ;; Registers used:
  5467 ;;		wreg, status,2, cstack
  5468 ;; Tracked objects:
  5469 ;;		On entry : 0/0
  5470 ;;		On exit  : 0/0
  5471 ;;		Unchanged: 0/0
  5472 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5473 ;;      Params:         0       0       0       0       0       0       0
  5474 ;;      Locals:         2       0       0       0       0       0       0
  5475 ;;      Temps:          0       0       0       0       0       0       0
  5476 ;;      Totals:         2       0       0       0       0       0       0
  5477 ;;Total ram usage:        2 bytes
  5478 ;; Hardware stack levels used: 1
  5479 ;; Hardware stack levels required when called: 4
  5480 ;; This function calls:
  5481 ;;		_i2c_read
  5482 ;;		_i2c_rep_start
  5483 ;;		_i2c_start
  5484 ;;		_i2c_stop
  5485 ;;		_i2c_write
  5486 ;; This function is called by:
  5487 ;;		_get_time
  5488 ;;		_init_ds1307
  5489 ;; This function uses a non-reentrant model
  5490 ;;
  5491                           
  5492                           	psect	text19
  5493   00285A                     __ptext19:
  5494                           	callstack 0
  5495   00285A                     _read_ds1307:
  5496                           	callstack 24
  5497                           
  5498                           ; BSR set to: 0
  5499                           ;incstack = 0
  5500                           ;read_ds1307@address stored from wreg
  5501   00285A  6E02               	movwf	read_ds1307@address^0,c
  5502   00285C                     
  5503                           ;ds1307.c: 42: unsigned char read_ds1307(unsigned char address);ds1307.c: 43: {;ds1307.c
      +                          : 44:  unsigned char data;;ds1307.c: 46:  i2c_start();
  5504   00285C  ECF8  F014         	call	_i2c_start	;wreg free
  5505   002860                     
  5506                           ;ds1307.c: 47:  i2c_write(0xD0);
  5507   002860  0ED0               	movlw	208
  5508   002862  ECE8  F014         	call	_i2c_write
  5509   002866                     
  5510                           ;ds1307.c: 48:  i2c_write(address);
  5511   002866  5002               	movf	read_ds1307@address^0,w,c
  5512   002868  ECE8  F014         	call	_i2c_write
  5513   00286C                     
  5514                           ;ds1307.c: 49:  i2c_rep_start();
  5515   00286C  ECFC  F014         	call	_i2c_rep_start	;wreg free
  5516   002870                     
  5517                           ;ds1307.c: 50:  i2c_write(0xD1);
  5518   002870  0ED1               	movlw	209
  5519   002872  ECE8  F014         	call	_i2c_write
  5520                           
  5521                           ;ds1307.c: 51:  data = i2c_read();
  5522   002876  ECEE  F014         	call	_i2c_read	;wreg free
  5523   00287A  6E03               	movwf	read_ds1307@data^0,c
  5524   00287C                     
  5525                           ;ds1307.c: 52:  i2c_stop();
  5526   00287C  ECF4  F014         	call	_i2c_stop	;wreg free
  5527                           
  5528                           ;ds1307.c: 54:  return data;
  5529   002880  5003               	movf	read_ds1307@data^0,w,c
  5530   002882  0012               	return		;funcret
  5531   002884                     __end_of_read_ds1307:
  5532                           	callstack 0
  5533                           
  5534 ;; *************** function _download_log *****************
  5535 ;; Defined at:
  5536 ;;		line 26 in file "download_log.c"
  5537 ;; Parameters:    Size  Location     Type
  5538 ;;		None
  5539 ;; Auto vars:     Size  Location     Type
  5540 ;;		None
  5541 ;; Return value:  Size  Location     Type
  5542 ;;                  1    wreg      void 
  5543 ;; Registers used:
  5544 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5545 ;; Tracked objects:
  5546 ;;		On entry : 0/0
  5547 ;;		On exit  : 0/0
  5548 ;;		Unchanged: 0/0
  5549 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5550 ;;      Params:         0       0       0       0       0       0       0
  5551 ;;      Locals:         0       0       0       0       0       0       0
  5552 ;;      Temps:          3       0       0       0       0       0       0
  5553 ;;      Totals:         3       0       0       0       0       0       0
  5554 ;;Total ram usage:        3 bytes
  5555 ;; Hardware stack levels used: 1
  5556 ;; Hardware stack levels required when called: 6
  5557 ;; This function calls:
  5558 ;;		_clcd_print
  5559 ;;		_clcd_write
  5560 ;;		_puts
  5561 ;;		_read_ext_eeprom
  5562 ;;		_store_event
  5563 ;; This function is called by:
  5564 ;;		_main
  5565 ;; This function uses a non-reentrant model
  5566 ;;
  5567                           
  5568                           	psect	text20
  5569   001580                     __ptext20:
  5570                           	callstack 0
  5571   001580                     _download_log:
  5572                           	callstack 24
  5573   001580                     
  5574                           ;download_log.c: 29:     if(wait3 == 0)
  5575   001580  0100               	movlb	0	; () banked
  5576   001582  5195               	movf	_wait3& (0+255),w,b
  5577   001584  1196               	iorwf	(_wait3+1)& (0+255),w,b
  5578   001586  A4D8               	btfss	status,2,c
  5579   001588  EFC8  F00A         	goto	u3011
  5580   00158C  EFCA  F00A         	goto	u3010
  5581   001590                     u3011:
  5582   001590  EFDC  F00B         	goto	l3772
  5583   001594                     u3010:
  5584   001594                     
  5585                           ; BSR set to: 0
  5586                           ;download_log.c: 30:     {;download_log.c: 32:         ev_ind = 9;
  5587   001594  0E09               	movlw	9
  5588   001596  6E56               	movwf	_ev_ind^0,c
  5589   001598                     
  5590                           ; BSR set to: 0
  5591                           ;download_log.c: 33:         store_event();
  5592   001598  ECDA  F00E         	call	_store_event	;wreg free
  5593   00159C                     
  5594                           ;download_log.c: 34:         clcd_print(" Log Downloaded ", (0x80 + (0)));
  5595   00159C  0E13               	movlw	low STR_11
  5596   00159E  6E03               	movwf	clcd_print@data^0,c
  5597   0015A0  0E2F               	movlw	high STR_11
  5598   0015A2  6E04               	movwf	(clcd_print@data+1)^0,c
  5599   0015A4  0E80               	movlw	128
  5600   0015A6  6E05               	movwf	clcd_print@addr^0,c
  5601   0015A8  ECA6  F012         	call	_clcd_print	;wreg free
  5602   0015AC                     
  5603                           ;download_log.c: 35:         clcd_print("  Successfully  ", (0xC0 + (0)));
  5604   0015AC  0E02               	movlw	low STR_12
  5605   0015AE  6E03               	movwf	clcd_print@data^0,c
  5606   0015B0  0E2F               	movlw	high STR_12
  5607   0015B2  6E04               	movwf	(clcd_print@data+1)^0,c
  5608   0015B4  0EC0               	movlw	192
  5609   0015B6  6E05               	movwf	clcd_print@addr^0,c
  5610   0015B8  ECA6  F012         	call	_clcd_print	;wreg free
  5611   0015BC                     
  5612                           ;download_log.c: 36:         puts("\n\n\r# Time     EV SP\n\r");
  5613   0015BC  0E53               	movlw	low STR_13
  5614   0015BE  6E02               	movwf	puts@s^0,c
  5615   0015C0  0E2E               	movlw	high STR_13
  5616   0015C2  6E03               	movwf	(puts@s+1)^0,c
  5617   0015C4  EC0D  F013         	call	_puts	;wreg free
  5618   0015C8                     
  5619                           ;download_log.c: 39:         for (Y = 0; Y < log; Y++)
  5620   0015C8  0E00               	movlw	0
  5621   0015CA  6E4E               	movwf	_Y^0,c
  5622   0015CC  EFCA  F00B         	goto	l3770
  5623   0015D0                     l3742:
  5624                           
  5625                           ;download_log.c: 40:         {;download_log.c: 42:             d_log[Y][0] = Y + '0';
  5626   0015D0  504E               	movf	_Y^0,w,c
  5627   0015D2  0D0E               	mullw	14
  5628   0015D4  0E00               	movlw	low _d_log
  5629   0015D6  24F3               	addwf	243,w,c
  5630   0015D8  6ED9               	movwf	fsr2l,c
  5631   0015DA  0E01               	movlw	high _d_log
  5632   0015DC  20F4               	addwfc	prodh,w,c
  5633   0015DE  6EDA               	movwf	fsr2h,c
  5634   0015E0  504E               	movf	_Y^0,w,c
  5635   0015E2  0F30               	addlw	48
  5636   0015E4  6EDF               	movwf	indf2,c
  5637                           
  5638                           ;download_log.c: 43:             d_log[Y][1] = ' ';
  5639   0015E6  504E               	movf	_Y^0,w,c
  5640   0015E8  0D0E               	mullw	14
  5641   0015EA  0E01               	movlw	low (_d_log+1)
  5642   0015EC  24F3               	addwf	243,w,c
  5643   0015EE  6ED9               	movwf	fsr2l,c
  5644   0015F0  0E01               	movlw	high (_d_log+1)
  5645   0015F2  20F4               	addwfc	prodh,w,c
  5646   0015F4  6EDA               	movwf	fsr2h,c
  5647   0015F6  0E20               	movlw	32
  5648   0015F8  6EDF               	movwf	indf2,c
  5649   0015FA                     
  5650                           ;download_log.c: 45:             d_log[Y][2] = read_ext_eeprom((Y * 10) + 0);
  5651   0015FA  504E               	movf	_Y^0,w,c
  5652   0015FC  0D0E               	mullw	14
  5653   0015FE  0E02               	movlw	low (_d_log+2)
  5654   001600  24F3               	addwf	243,w,c
  5655   001602  6ED9               	movwf	fsr2l,c
  5656   001604  0E01               	movlw	high (_d_log+2)
  5657   001606  20F4               	addwfc	prodh,w,c
  5658   001608  6EDA               	movwf	fsr2h,c
  5659   00160A  504E               	movf	_Y^0,w,c
  5660   00160C  0D0A               	mullw	10
  5661   00160E  50F3               	movf	243,w,c
  5662   001610  EC42  F014         	call	_read_ext_eeprom
  5663   001614  6EDF               	movwf	indf2,c
  5664   001616                     
  5665                           ;download_log.c: 46:             d_log[Y][3] = read_ext_eeprom((Y * 10) + 1);
  5666   001616  504E               	movf	_Y^0,w,c
  5667   001618  0D0E               	mullw	14
  5668   00161A  0E03               	movlw	low (_d_log+3)
  5669   00161C  24F3               	addwf	243,w,c
  5670   00161E  6ED9               	movwf	fsr2l,c
  5671   001620  0E01               	movlw	high (_d_log+3)
  5672   001622  20F4               	addwfc	prodh,w,c
  5673   001624  6EDA               	movwf	fsr2h,c
  5674   001626  504E               	movf	_Y^0,w,c
  5675   001628  0D0A               	mullw	10
  5676   00162A  28F3               	incf	243,w,c
  5677   00162C  EC42  F014         	call	_read_ext_eeprom
  5678   001630  6EDF               	movwf	indf2,c
  5679                           
  5680                           ;download_log.c: 47:             d_log[Y][4] = ':';
  5681   001632  504E               	movf	_Y^0,w,c
  5682   001634  0D0E               	mullw	14
  5683   001636  0E04               	movlw	low (_d_log+4)
  5684   001638  24F3               	addwf	243,w,c
  5685   00163A  6ED9               	movwf	fsr2l,c
  5686   00163C  0E01               	movlw	high (_d_log+4)
  5687   00163E  20F4               	addwfc	prodh,w,c
  5688   001640  6EDA               	movwf	fsr2h,c
  5689   001642  0E3A               	movlw	58
  5690   001644  6EDF               	movwf	indf2,c
  5691   001646                     
  5692                           ;download_log.c: 48:             d_log[Y][5] = read_ext_eeprom((Y * 10) + 2);
  5693   001646  504E               	movf	_Y^0,w,c
  5694   001648  0D0E               	mullw	14
  5695   00164A  0E05               	movlw	low (_d_log+5)
  5696   00164C  24F3               	addwf	243,w,c
  5697   00164E  6ED9               	movwf	fsr2l,c
  5698   001650  0E01               	movlw	high (_d_log+5)
  5699   001652  20F4               	addwfc	prodh,w,c
  5700   001654  6EDA               	movwf	fsr2h,c
  5701   001656  504E               	movf	_Y^0,w,c
  5702   001658  0D0A               	mullw	10
  5703   00165A  50F3               	movf	243,w,c
  5704   00165C  0F02               	addlw	2
  5705   00165E  EC42  F014         	call	_read_ext_eeprom
  5706   001662  6EDF               	movwf	indf2,c
  5707   001664                     
  5708                           ;download_log.c: 49:             d_log[Y][6] = read_ext_eeprom((Y * 10) + 3);
  5709   001664  504E               	movf	_Y^0,w,c
  5710   001666  0D0E               	mullw	14
  5711   001668  0E06               	movlw	low (_d_log+6)
  5712   00166A  24F3               	addwf	243,w,c
  5713   00166C  6ED9               	movwf	fsr2l,c
  5714   00166E  0E01               	movlw	high (_d_log+6)
  5715   001670  20F4               	addwfc	prodh,w,c
  5716   001672  6EDA               	movwf	fsr2h,c
  5717   001674  504E               	movf	_Y^0,w,c
  5718   001676  0D0A               	mullw	10
  5719   001678  50F3               	movf	243,w,c
  5720   00167A  0F03               	addlw	3
  5721   00167C  EC42  F014         	call	_read_ext_eeprom
  5722   001680  6EDF               	movwf	indf2,c
  5723                           
  5724                           ;download_log.c: 50:             d_log[Y][7] = ':';
  5725   001682  504E               	movf	_Y^0,w,c
  5726   001684  0D0E               	mullw	14
  5727   001686  0E07               	movlw	low (_d_log+7)
  5728   001688  24F3               	addwf	243,w,c
  5729   00168A  6ED9               	movwf	fsr2l,c
  5730   00168C  0E01               	movlw	high (_d_log+7)
  5731   00168E  20F4               	addwfc	prodh,w,c
  5732   001690  6EDA               	movwf	fsr2h,c
  5733   001692  0E3A               	movlw	58
  5734   001694  6EDF               	movwf	indf2,c
  5735   001696                     
  5736                           ;download_log.c: 51:             d_log[Y][8] = read_ext_eeprom((Y * 10) + 4);
  5737   001696  504E               	movf	_Y^0,w,c
  5738   001698  0D0E               	mullw	14
  5739   00169A  0E08               	movlw	low (_d_log+8)
  5740   00169C  24F3               	addwf	243,w,c
  5741   00169E  6ED9               	movwf	fsr2l,c
  5742   0016A0  0E01               	movlw	high (_d_log+8)
  5743   0016A2  20F4               	addwfc	prodh,w,c
  5744   0016A4  6EDA               	movwf	fsr2h,c
  5745   0016A6  504E               	movf	_Y^0,w,c
  5746   0016A8  0D0A               	mullw	10
  5747   0016AA  50F3               	movf	243,w,c
  5748   0016AC  0F04               	addlw	4
  5749   0016AE  EC42  F014         	call	_read_ext_eeprom
  5750   0016B2  6EDF               	movwf	indf2,c
  5751   0016B4                     
  5752                           ;download_log.c: 52:             d_log[Y][9] = read_ext_eeprom((Y * 10) + 5);
  5753   0016B4  504E               	movf	_Y^0,w,c
  5754   0016B6  0D0E               	mullw	14
  5755   0016B8  0E09               	movlw	low (_d_log+9)
  5756   0016BA  24F3               	addwf	243,w,c
  5757   0016BC  6ED9               	movwf	fsr2l,c
  5758   0016BE  0E01               	movlw	high (_d_log+9)
  5759   0016C0  20F4               	addwfc	prodh,w,c
  5760   0016C2  6EDA               	movwf	fsr2h,c
  5761   0016C4  504E               	movf	_Y^0,w,c
  5762   0016C6  0D0A               	mullw	10
  5763   0016C8  50F3               	movf	243,w,c
  5764   0016CA  0F05               	addlw	5
  5765   0016CC  EC42  F014         	call	_read_ext_eeprom
  5766   0016D0  6EDF               	movwf	indf2,c
  5767                           
  5768                           ;download_log.c: 53:             d_log[Y][10] = ' ';
  5769   0016D2  504E               	movf	_Y^0,w,c
  5770   0016D4  0D0E               	mullw	14
  5771   0016D6  0E0A               	movlw	low (_d_log+10)
  5772   0016D8  24F3               	addwf	243,w,c
  5773   0016DA  6ED9               	movwf	fsr2l,c
  5774   0016DC  0E01               	movlw	high (_d_log+10)
  5775   0016DE  20F4               	addwfc	prodh,w,c
  5776   0016E0  6EDA               	movwf	fsr2h,c
  5777   0016E2  0E20               	movlw	32
  5778   0016E4  6EDF               	movwf	indf2,c
  5779   0016E6                     
  5780                           ;download_log.c: 55:             d_log[Y][11] = read_ext_eeprom((Y * 10) + 6);
  5781   0016E6  504E               	movf	_Y^0,w,c
  5782   0016E8  0D0E               	mullw	14
  5783   0016EA  0E0B               	movlw	low (_d_log+11)
  5784   0016EC  24F3               	addwf	243,w,c
  5785   0016EE  6ED9               	movwf	fsr2l,c
  5786   0016F0  0E01               	movlw	high (_d_log+11)
  5787   0016F2  20F4               	addwfc	prodh,w,c
  5788   0016F4  6EDA               	movwf	fsr2h,c
  5789   0016F6  504E               	movf	_Y^0,w,c
  5790   0016F8  0D0A               	mullw	10
  5791   0016FA  50F3               	movf	243,w,c
  5792   0016FC  0F06               	addlw	6
  5793   0016FE  EC42  F014         	call	_read_ext_eeprom
  5794   001702  6EDF               	movwf	indf2,c
  5795   001704                     
  5796                           ;download_log.c: 56:             d_log[Y][12] = read_ext_eeprom((Y * 10) + 7);
  5797   001704  504E               	movf	_Y^0,w,c
  5798   001706  0D0E               	mullw	14
  5799   001708  0E0C               	movlw	low (_d_log+12)
  5800   00170A  24F3               	addwf	243,w,c
  5801   00170C  6ED9               	movwf	fsr2l,c
  5802   00170E  0E01               	movlw	high (_d_log+12)
  5803   001710  20F4               	addwfc	prodh,w,c
  5804   001712  6EDA               	movwf	fsr2h,c
  5805   001714  504E               	movf	_Y^0,w,c
  5806   001716  0D0A               	mullw	10
  5807   001718  50F3               	movf	243,w,c
  5808   00171A  0F07               	addlw	7
  5809   00171C  EC42  F014         	call	_read_ext_eeprom
  5810   001720  6EDF               	movwf	indf2,c
  5811                           
  5812                           ;download_log.c: 57:             d_log[Y][13] = ' ';
  5813   001722  504E               	movf	_Y^0,w,c
  5814   001724  0D0E               	mullw	14
  5815   001726  0E0D               	movlw	low (_d_log+13)
  5816   001728  24F3               	addwf	243,w,c
  5817   00172A  6ED9               	movwf	fsr2l,c
  5818   00172C  0E01               	movlw	high (_d_log+13)
  5819   00172E  20F4               	addwfc	prodh,w,c
  5820   001730  6EDA               	movwf	fsr2h,c
  5821   001732  0E20               	movlw	32
  5822   001734  6EDF               	movwf	indf2,c
  5823   001736                     
  5824                           ;download_log.c: 59:             d_log[Y][14] = read_ext_eeprom((Y * 10) + 8);
  5825   001736  504E               	movf	_Y^0,w,c
  5826   001738  0D0E               	mullw	14
  5827   00173A  0E0E               	movlw	low (_d_log+14)
  5828   00173C  24F3               	addwf	243,w,c
  5829   00173E  6ED9               	movwf	fsr2l,c
  5830   001740  0E01               	movlw	high (_d_log+14)
  5831   001742  20F4               	addwfc	prodh,w,c
  5832   001744  6EDA               	movwf	fsr2h,c
  5833   001746  504E               	movf	_Y^0,w,c
  5834   001748  0D0A               	mullw	10
  5835   00174A  50F3               	movf	243,w,c
  5836   00174C  0F08               	addlw	8
  5837   00174E  EC42  F014         	call	_read_ext_eeprom
  5838   001752  6EDF               	movwf	indf2,c
  5839   001754                     
  5840                           ;download_log.c: 60:             d_log[Y][15] = read_ext_eeprom((Y * 10) + 9);
  5841   001754  504E               	movf	_Y^0,w,c
  5842   001756  0D0E               	mullw	14
  5843   001758  0E0F               	movlw	low (_d_log+15)
  5844   00175A  24F3               	addwf	243,w,c
  5845   00175C  6ED9               	movwf	fsr2l,c
  5846   00175E  0E01               	movlw	high (_d_log+15)
  5847   001760  20F4               	addwfc	prodh,w,c
  5848   001762  6EDA               	movwf	fsr2h,c
  5849   001764  504E               	movf	_Y^0,w,c
  5850   001766  0D0A               	mullw	10
  5851   001768  50F3               	movf	243,w,c
  5852   00176A  0F09               	addlw	9
  5853   00176C  EC42  F014         	call	_read_ext_eeprom
  5854   001770  6EDF               	movwf	indf2,c
  5855   001772                     
  5856                           ;download_log.c: 61:             puts(d_log[Y]);
  5857   001772  504E               	movf	_Y^0,w,c
  5858   001774  0D0E               	mullw	14
  5859   001776  0E00               	movlw	low _d_log
  5860   001778  24F3               	addwf	243,w,c
  5861   00177A  6E02               	movwf	puts@s^0,c
  5862   00177C  0E01               	movlw	high _d_log
  5863   00177E  20F4               	addwfc	prodh,w,c
  5864   001780  6E03               	movwf	(puts@s+1)^0,c
  5865   001782  EC0D  F013         	call	_puts	;wreg free
  5866   001786                     
  5867                           ;download_log.c: 62:             puts("\n\r");
  5868   001786  0E66               	movlw	low (STR_13+19)
  5869   001788  6E02               	movwf	puts@s^0,c
  5870   00178A  0E2E               	movlw	high (STR_13+19)
  5871   00178C  6E03               	movwf	(puts@s+1)^0,c
  5872   00178E  EC0D  F013         	call	_puts	;wreg free
  5873   001792                     
  5874                           ;download_log.c: 63:         }
  5875   001792  2A4E               	incf	_Y^0,f,c
  5876   001794                     l3770:
  5877   001794  504E               	movf	_Y^0,w,c
  5878   001796  6E09               	movwf	??_download_log^0,c
  5879   001798  6A0A               	clrf	(??_download_log+1)^0,c
  5880   00179A  5041               	movf	_log^0,w,c
  5881   00179C  5C09               	subwf	??_download_log^0,w,c
  5882   00179E  500A               	movf	(??_download_log+1)^0,w,c
  5883   0017A0  0A80               	xorlw	128
  5884   0017A2  6E0B               	movwf	(??_download_log+2)^0,c
  5885   0017A4  5042               	movf	(_log+1)^0,w,c
  5886   0017A6  0A80               	xorlw	128
  5887   0017A8  580B               	subwfb	(??_download_log+2)^0,w,c
  5888   0017AA  A0D8               	btfss	status,0,c
  5889   0017AC  EFDA  F00B         	goto	u3021
  5890   0017B0  EFDC  F00B         	goto	u3020
  5891   0017B4                     u3021:
  5892   0017B4  EFE8  F00A         	goto	l3742
  5893   0017B8                     u3020:
  5894   0017B8                     l3772:
  5895                           
  5896                           ;download_log.c: 66:     if(wait3++ == 450)
  5897   0017B8  0100               	movlb	0	; () banked
  5898   0017BA  4B95               	infsnz	_wait3& (0+255),f,b
  5899   0017BC  2B96               	incf	(_wait3+1)& (0+255),f,b
  5900   0017BE  0EC3               	movlw	195
  5901   0017C0  1995               	xorwf	_wait3& (0+255),w,b
  5902   0017C2  E106               	bnz	u3031
  5903   0017C4  0596               	decf	(_wait3+1)& (0+255),w,b
  5904   0017C6  A4D8               	btfss	status,2,c
  5905   0017C8  EFE8  F00B         	goto	u3031
  5906   0017CC  EFEA  F00B         	goto	u3030
  5907   0017D0                     u3031:
  5908   0017D0  EFF5  F00B         	goto	l245
  5909   0017D4                     u3030:
  5910   0017D4                     
  5911                           ; BSR set to: 0
  5912                           ;download_log.c: 67:     {;download_log.c: 68:         wait3 = 0;
  5913   0017D4  0E00               	movlw	0
  5914   0017D6  6F96               	movwf	(_wait3+1)& (0+255),b
  5915   0017D8  0E00               	movlw	0
  5916   0017DA  6F95               	movwf	_wait3& (0+255),b
  5917                           
  5918                           ;download_log.c: 69:         main_f = 2;
  5919   0017DC  0E02               	movlw	2
  5920   0017DE  6E55               	movwf	_main_f^0,c
  5921   0017E0                     
  5922                           ; BSR set to: 0
  5923                           ;download_log.c: 70:         clcd_write(0x01, 0);
  5924   0017E0  0E00               	movlw	0
  5925   0017E2  6E01               	movwf	clcd_write@control_bit^0,c
  5926   0017E4  0E01               	movlw	1
  5927   0017E6  ECFA  F013         	call	_clcd_write
  5928   0017EA                     l245:
  5929   0017EA  0012               	return		;funcret
  5930   0017EC                     __end_of_download_log:
  5931                           	callstack 0
  5932                           
  5933 ;; *************** function _puts *****************
  5934 ;; Defined at:
  5935 ;;		line 62 in file "uart.c"
  5936 ;; Parameters:    Size  Location     Type
  5937 ;;  s               2    1[COMRAM] PTR const unsigned char 
  5938 ;;		 -> STR_14(3), d_log(140), STR_13(22), 
  5939 ;; Auto vars:     Size  Location     Type
  5940 ;;		None
  5941 ;; Return value:  Size  Location     Type
  5942 ;;                  2    1[COMRAM] int 
  5943 ;; Registers used:
  5944 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  5945 ;; Tracked objects:
  5946 ;;		On entry : 0/0
  5947 ;;		On exit  : 0/0
  5948 ;;		Unchanged: 0/0
  5949 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5950 ;;      Params:         2       0       0       0       0       0       0
  5951 ;;      Locals:         0       0       0       0       0       0       0
  5952 ;;      Temps:          0       0       0       0       0       0       0
  5953 ;;      Totals:         2       0       0       0       0       0       0
  5954 ;;Total ram usage:        2 bytes
  5955 ;; Hardware stack levels used: 1
  5956 ;; Hardware stack levels required when called: 2
  5957 ;; This function calls:
  5958 ;;		_putch
  5959 ;; This function is called by:
  5960 ;;		_download_log
  5961 ;; This function uses a non-reentrant model
  5962 ;;
  5963                           
  5964                           	psect	text21
  5965   00261A                     __ptext21:
  5966                           	callstack 0
  5967   00261A                     _puts:
  5968                           	callstack 27
  5969   00261A                     
  5970                           ;uart.c: 62: int puts(const char *s);uart.c: 63: {;uart.c: 64:  while(*s)
  5971   00261A  EF23  F013         	goto	l3404
  5972   00261E                     l3400:
  5973                           
  5974                           ;uart.c: 65:  {;uart.c: 66:   putch(*s++);
  5975   00261E  C002  FFF6         	movff	puts@s,tblptrl
  5976   002622  C003  FFF7         	movff	puts@s+1,tblptrh
  5977   002626  6AF8               	clrf	tblptru,c
  5978   002628  0E05               	movlw	(high __ramtop+-1)
  5979   00262A  64F7               	cpfsgt	tblptrh,c
  5980   00262C  D003               	bra	u2507
  5981   00262E  0008               	tblrd		*
  5982   002630  50F5               	movf	tablat,w,c
  5983   002632  D005               	bra	u2500
  5984   002634                     u2507:
  5985   002634  CFF6 FFE1          	movff	tblptrl,fsr1l
  5986   002638  CFF7 FFE2          	movff	tblptrh,fsr1h
  5987   00263C  50E7               	movf	indf1,w,c
  5988   00263E                     u2500:
  5989   00263E  ECA9  F014         	call	_putch
  5990   002642  4A02               	infsnz	puts@s^0,f,c
  5991   002644  2A03               	incf	(puts@s+1)^0,f,c
  5992   002646                     l3404:
  5993                           
  5994                           ;uart.c: 64:  while(*s)
  5995   002646  C002  FFF6         	movff	puts@s,tblptrl
  5996   00264A  C003  FFF7         	movff	puts@s+1,tblptrh
  5997   00264E  6AF8               	clrf	tblptru,c
  5998   002650  0E05               	movlw	(high __ramtop+-1)
  5999   002652  64F7               	cpfsgt	tblptrh,c
  6000   002654  D003               	bra	u2517
  6001   002656  0008               	tblrd		*
  6002   002658  50F5               	movf	tablat,w,c
  6003   00265A  D005               	bra	u2510
  6004   00265C                     u2517:
  6005   00265C  CFF6 FFE1          	movff	tblptrl,fsr1l
  6006   002660  CFF7 FFE2          	movff	tblptrh,fsr1h
  6007   002664  50E7               	movf	indf1,w,c
  6008   002666                     u2510:
  6009   002666  0900               	iorlw	0
  6010   002668  A4D8               	btfss	status,2,c
  6011   00266A  EF39  F013         	goto	u2521
  6012   00266E  EF3B  F013         	goto	u2520
  6013   002672                     u2521:
  6014   002672  EF0F  F013         	goto	l3400
  6015   002676                     u2520:
  6016   002676  0012               	return		;funcret
  6017   002678                     __end_of_puts:
  6018                           	callstack 0
  6019                           
  6020 ;; *************** function _putch *****************
  6021 ;; Defined at:
  6022 ;;		line 50 in file "uart.c"
  6023 ;; Parameters:    Size  Location     Type
  6024 ;;  byte            1    wreg     unsigned char 
  6025 ;; Auto vars:     Size  Location     Type
  6026 ;;  byte            1    0[COMRAM] unsigned char 
  6027 ;; Return value:  Size  Location     Type
  6028 ;;                  1    wreg      void 
  6029 ;; Registers used:
  6030 ;;		wreg
  6031 ;; Tracked objects:
  6032 ;;		On entry : 0/0
  6033 ;;		On exit  : 0/0
  6034 ;;		Unchanged: 0/0
  6035 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6036 ;;      Params:         0       0       0       0       0       0       0
  6037 ;;      Locals:         1       0       0       0       0       0       0
  6038 ;;      Temps:          0       0       0       0       0       0       0
  6039 ;;      Totals:         1       0       0       0       0       0       0
  6040 ;;Total ram usage:        1 bytes
  6041 ;; Hardware stack levels used: 1
  6042 ;; Hardware stack levels required when called: 1
  6043 ;; This function calls:
  6044 ;;		Nothing
  6045 ;; This function is called by:
  6046 ;;		_puts
  6047 ;;		_getche
  6048 ;; This function uses a non-reentrant model
  6049 ;;
  6050                           
  6051                           	psect	text22
  6052   002952                     __ptext22:
  6053                           	callstack 0
  6054   002952                     _putch:
  6055                           	callstack 27
  6056                           
  6057                           ;incstack = 0
  6058                           ;putch@byte stored from wreg
  6059   002952  6E01               	movwf	putch@byte^0,c
  6060   002954                     l798:
  6061                           
  6062                           ;uart.c: 54:  while(!TXIF)
  6063   002954  A89E               	btfss	3998,4,c	;volatile
  6064   002956  EFAF  F014         	goto	u2241
  6065   00295A  EFB1  F014         	goto	u2240
  6066   00295E                     u2241:
  6067   00295E  EFAA  F014         	goto	l798
  6068   002962                     u2240:
  6069   002962                     
  6070                           ;uart.c: 58:  TXIF = 0;
  6071   002962  989E               	bcf	3998,4,c	;volatile
  6072   002964                     
  6073                           ;uart.c: 59:  TXREG = byte;
  6074   002964  C001  FFAD         	movff	putch@byte,4013	;volatile
  6075   002968  0012               	return		;funcret
  6076   00296A                     __end_of_putch:
  6077                           	callstack 0
  6078                           
  6079 ;; *************** function _dashboard *****************
  6080 ;; Defined at:
  6081 ;;		line 18 in file "dashboard.c"
  6082 ;; Parameters:    Size  Location     Type
  6083 ;;		None
  6084 ;; Auto vars:     Size  Location     Type
  6085 ;;		None
  6086 ;; Return value:  Size  Location     Type
  6087 ;;                  1    wreg      void 
  6088 ;; Registers used:
  6089 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6090 ;; Tracked objects:
  6091 ;;		On entry : 0/0
  6092 ;;		On exit  : 0/0
  6093 ;;		Unchanged: 0/0
  6094 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6095 ;;      Params:         0       0       0       0       0       0       0
  6096 ;;      Locals:         0       0       0       0       0       0       0
  6097 ;;      Temps:          0       0       0       0       0       0       0
  6098 ;;      Totals:         0       0       0       0       0       0       0
  6099 ;;Total ram usage:        0 bytes
  6100 ;; Hardware stack levels used: 1
  6101 ;; Hardware stack levels required when called: 3
  6102 ;; This function calls:
  6103 ;;		_clcd_print
  6104 ;;		_clcd_putch
  6105 ;;		_clcd_write
  6106 ;; This function is called by:
  6107 ;;		_main
  6108 ;; This function uses a non-reentrant model
  6109 ;;
  6110                           
  6111                           	psect	text23
  6112   0024D6                     __ptext23:
  6113                           	callstack 0
  6114   0024D6                     _dashboard:
  6115                           	callstack 27
  6116   0024D6                     
  6117                           ;dashboard.c: 21:     clcd_print("  TIME    EV  SP", (0x80 + (0)));
  6118   0024D6  0E24               	movlw	low STR_10
  6119   0024D8  6E03               	movwf	clcd_print@data^0,c
  6120   0024DA  0E2F               	movlw	high STR_10
  6121   0024DC  6E04               	movwf	(clcd_print@data+1)^0,c
  6122   0024DE  0E80               	movlw	128
  6123   0024E0  6E05               	movwf	clcd_print@addr^0,c
  6124   0024E2  ECA6  F012         	call	_clcd_print	;wreg free
  6125                           
  6126                           ;dashboard.c: 22:     clcd_print(time, (0xC0 + (0)));
  6127   0024E6  0EA3               	movlw	low _time
  6128   0024E8  6E03               	movwf	clcd_print@data^0,c
  6129   0024EA  0E00               	movlw	high _time
  6130   0024EC  6E04               	movwf	(clcd_print@data+1)^0,c
  6131   0024EE  0EC0               	movlw	192
  6132   0024F0  6E05               	movwf	clcd_print@addr^0,c
  6133   0024F2  ECA6  F012         	call	_clcd_print	;wreg free
  6134   0024F6                     
  6135                           ;dashboard.c: 23:     clcd_print(ev[ev_ind], (0xC0 + (10)));
  6136   0024F6  5056               	movf	_ev_ind^0,w,c
  6137   0024F8  0D03               	mullw	3
  6138   0024FA  0EB1               	movlw	low _ev
  6139   0024FC  24F3               	addwf	243,w,c
  6140   0024FE  6E03               	movwf	clcd_print@data^0,c
  6141   002500  0E00               	movlw	high _ev
  6142   002502  20F4               	addwfc	prodh,w,c
  6143   002504  6E04               	movwf	(clcd_print@data+1)^0,c
  6144   002506  0ECA               	movlw	202
  6145   002508  6E05               	movwf	clcd_print@addr^0,c
  6146   00250A  ECA6  F012         	call	_clcd_print	;wreg free
  6147   00250E                     
  6148                           ;dashboard.c: 24:     clcd_putch(sp1, (0xC0 + (14)));
  6149   00250E  0ECE               	movlw	206
  6150   002510  6E09               	movwf	clcd_putch@addr^0,c
  6151   002512  5058               	movf	_sp1^0,w,c
  6152   002514  ECB5  F014         	call	_clcd_putch
  6153   002518                     
  6154                           ;dashboard.c: 25:     clcd_putch(sp2, (0xC0 + (15)));
  6155   002518  0ECF               	movlw	207
  6156   00251A  6E09               	movwf	clcd_putch@addr^0,c
  6157   00251C  5057               	movf	_sp2^0,w,c
  6158   00251E  ECB5  F014         	call	_clcd_putch
  6159   002522                     
  6160                           ;dashboard.c: 28:     if(key == 11)
  6161   002522  0E0B               	movlw	11
  6162   002524  1854               	xorwf	_key^0,w,c
  6163   002526  A4D8               	btfss	status,2,c
  6164   002528  EF98  F012         	goto	u2541
  6165   00252C  EF9A  F012         	goto	u2540
  6166   002530                     u2541:
  6167   002530  EFA5  F012         	goto	l215
  6168   002534                     u2540:
  6169   002534                     
  6170                           ;dashboard.c: 29:     {;dashboard.c: 30:         clcd_write(0x01, 0);
  6171   002534  0E00               	movlw	0
  6172   002536  6E01               	movwf	clcd_write@control_bit^0,c
  6173   002538  0E01               	movlw	1
  6174   00253A  ECFA  F013         	call	_clcd_write
  6175   00253E                     
  6176                           ;dashboard.c: 31:         menu_ind = 0;
  6177   00253E  0E00               	movlw	0
  6178   002540  6E50               	movwf	_menu_ind^0,c
  6179   002542                     
  6180                           ;dashboard.c: 32:         arrow_st = 0;
  6181   002542  0E00               	movlw	0
  6182   002544  6E4F               	movwf	_arrow_st^0,c
  6183   002546                     
  6184                           ;dashboard.c: 33:         main_f = 1;
  6185   002546  0E01               	movlw	1
  6186   002548  6E55               	movwf	_main_f^0,c
  6187   00254A                     l215:
  6188   00254A  0012               	return		;funcret
  6189   00254C                     __end_of_dashboard:
  6190                           	callstack 0
  6191                           
  6192 ;; *************** function _clear_log *****************
  6193 ;; Defined at:
  6194 ;;		line 18 in file "clear_log.c"
  6195 ;; Parameters:    Size  Location     Type
  6196 ;;  key             1    wreg     unsigned char 
  6197 ;; Auto vars:     Size  Location     Type
  6198 ;;  key             1    0[COMRAM] unsigned char 
  6199 ;; Return value:  Size  Location     Type
  6200 ;;                  1    wreg      void 
  6201 ;; Registers used:
  6202 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6203 ;; Tracked objects:
  6204 ;;		On entry : 0/0
  6205 ;;		On exit  : 0/0
  6206 ;;		Unchanged: 0/0
  6207 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6208 ;;      Params:         0       0       0       0       0       0       0
  6209 ;;      Locals:         0       0       0       0       0       0       0
  6210 ;;      Temps:          0       0       0       0       0       0       0
  6211 ;;      Totals:         0       0       0       0       0       0       0
  6212 ;;Total ram usage:        0 bytes
  6213 ;; Hardware stack levels used: 1
  6214 ;; Hardware stack levels required when called: 6
  6215 ;; This function calls:
  6216 ;;		_clcd_print
  6217 ;;		_clcd_write
  6218 ;;		_store_event
  6219 ;;		_write_ext_eeprom
  6220 ;; This function is called by:
  6221 ;;		_main
  6222 ;; This function uses a non-reentrant model
  6223 ;;
  6224                           
  6225                           	psect	text24
  6226   0023DE                     __ptext24:
  6227                           	callstack 0
  6228   0023DE                     _clear_log:
  6229                           	callstack 24
  6230   0023DE                     
  6231                           ;clear_log.c: 18: void clear_log(char key);clear_log.c: 19: {;clear_log.c: 21:     if(wa
      +                          it1 == 0)
  6232   0023DE  0100               	movlb	0	; () banked
  6233   0023E0  5197               	movf	_wait1& (0+255),w,b
  6234   0023E2  1198               	iorwf	(_wait1+1)& (0+255),w,b
  6235   0023E4  A4D8               	btfss	status,2,c
  6236   0023E6  EFF7  F011         	goto	u3041
  6237   0023EA  EFF9  F011         	goto	u3040
  6238   0023EE                     u3041:
  6239   0023EE  EF16  F012         	goto	l3792
  6240   0023F2                     u3040:
  6241   0023F2                     
  6242                           ; BSR set to: 0
  6243                           ;clear_log.c: 22:     {;clear_log.c: 24:         log = 0;
  6244   0023F2  0E00               	movlw	0
  6245   0023F4  6E42               	movwf	(_log+1)^0,c
  6246   0023F6  0E00               	movlw	0
  6247   0023F8  6E41               	movwf	_log^0,c
  6248   0023FA                     
  6249                           ; BSR set to: 0
  6250                           ;clear_log.c: 25:         write_ext_eeprom(250,log);
  6251   0023FA  C041  F004         	movff	_log,write_ext_eeprom@data
  6252   0023FE  0EFA               	movlw	250
  6253   002400  ECDA  F013         	call	_write_ext_eeprom
  6254   002404                     
  6255                           ;clear_log.c: 27:         ev_ind = 10;
  6256   002404  0E0A               	movlw	10
  6257   002406  6E56               	movwf	_ev_ind^0,c
  6258   002408                     
  6259                           ;clear_log.c: 28:         store_event();
  6260   002408  ECDA  F00E         	call	_store_event	;wreg free
  6261   00240C                     
  6262                           ;clear_log.c: 29:         clcd_print("   LOG CLEARED  ",(0x80 + (0)));
  6263   00240C  0E35               	movlw	low STR_8
  6264   00240E  6E03               	movwf	clcd_print@data^0,c
  6265   002410  0E2F               	movlw	high STR_8
  6266   002412  6E04               	movwf	(clcd_print@data+1)^0,c
  6267   002414  0E80               	movlw	128
  6268   002416  6E05               	movwf	clcd_print@addr^0,c
  6269   002418  ECA6  F012         	call	_clcd_print	;wreg free
  6270   00241C                     
  6271                           ;clear_log.c: 30:         clcd_print("  SUCCESSFULLY  ",(0xC0 + (0)));
  6272   00241C  0E46               	movlw	low STR_9
  6273   00241E  6E03               	movwf	clcd_print@data^0,c
  6274   002420  0E2F               	movlw	high STR_9
  6275   002422  6E04               	movwf	(clcd_print@data+1)^0,c
  6276   002424  0EC0               	movlw	192
  6277   002426  6E05               	movwf	clcd_print@addr^0,c
  6278   002428  ECA6  F012         	call	_clcd_print	;wreg free
  6279   00242C                     l3792:
  6280                           
  6281                           ;clear_log.c: 33:     if(wait1++ == 450)
  6282   00242C  0100               	movlb	0	; () banked
  6283   00242E  4B97               	infsnz	_wait1& (0+255),f,b
  6284   002430  2B98               	incf	(_wait1+1)& (0+255),f,b
  6285   002432  0EC3               	movlw	195
  6286   002434  1997               	xorwf	_wait1& (0+255),w,b
  6287   002436  E106               	bnz	u3051
  6288   002438  0598               	decf	(_wait1+1)& (0+255),w,b
  6289   00243A  A4D8               	btfss	status,2,c
  6290   00243C  EF22  F012         	goto	u3051
  6291   002440  EF24  F012         	goto	u3050
  6292   002444                     u3051:
  6293   002444  EF2F  F012         	goto	l187
  6294   002448                     u3050:
  6295   002448                     
  6296                           ; BSR set to: 0
  6297                           ;clear_log.c: 34:     {;clear_log.c: 35:         wait1 = 0;
  6298   002448  0E00               	movlw	0
  6299   00244A  6F98               	movwf	(_wait1+1)& (0+255),b
  6300   00244C  0E00               	movlw	0
  6301   00244E  6F97               	movwf	_wait1& (0+255),b
  6302                           
  6303                           ;clear_log.c: 36:         main_f = 2;
  6304   002450  0E02               	movlw	2
  6305   002452  6E55               	movwf	_main_f^0,c
  6306   002454                     
  6307                           ; BSR set to: 0
  6308                           ;clear_log.c: 37:         clcd_write(0x01, 0);
  6309   002454  0E00               	movlw	0
  6310   002456  6E01               	movwf	clcd_write@control_bit^0,c
  6311   002458  0E01               	movlw	1
  6312   00245A  ECFA  F013         	call	_clcd_write
  6313   00245E                     l187:
  6314   00245E  0012               	return		;funcret
  6315   002460                     __end_of_clear_log:
  6316                           	callstack 0
  6317                           
  6318 ;; *************** function _change_pass *****************
  6319 ;; Defined at:
  6320 ;;		line 21 in file "change_password.c"
  6321 ;; Parameters:    Size  Location     Type
  6322 ;;  key             1    wreg     unsigned char 
  6323 ;; Auto vars:     Size  Location     Type
  6324 ;;  key             1   14[COMRAM] unsigned char 
  6325 ;; Return value:  Size  Location     Type
  6326 ;;                  1    wreg      void 
  6327 ;; Registers used:
  6328 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6329 ;; Tracked objects:
  6330 ;;		On entry : 0/0
  6331 ;;		On exit  : 0/0
  6332 ;;		Unchanged: 0/0
  6333 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6334 ;;      Params:         0       0       0       0       0       0       0
  6335 ;;      Locals:         1       0       0       0       0       0       0
  6336 ;;      Temps:          4       0       0       0       0       0       0
  6337 ;;      Totals:         5       0       0       0       0       0       0
  6338 ;;Total ram usage:        5 bytes
  6339 ;; Hardware stack levels used: 1
  6340 ;; Hardware stack levels required when called: 6
  6341 ;; This function calls:
  6342 ;;		_clcd_print
  6343 ;;		_clcd_putch
  6344 ;;		_clcd_write
  6345 ;;		_store_event
  6346 ;;		_write_ext_eeprom
  6347 ;; This function is called by:
  6348 ;;		_main
  6349 ;; This function uses a non-reentrant model
  6350 ;;
  6351                           
  6352                           	psect	text25
  6353   000AA6                     __ptext25:
  6354                           	callstack 0
  6355   000AA6                     _change_pass:
  6356                           	callstack 24
  6357                           
  6358                           ;incstack = 0
  6359                           ;change_pass@key stored from wreg
  6360   000AA6  6E0F               	movwf	change_pass@key^0,c
  6361   000AA8                     
  6362                           ;change_password.c: 21: void change_pass(char key);change_password.c: 22: {;change_passw
      +                          ord.c: 25:     if(go_back_f == 1)
  6363   000AA8  0100               	movlb	0	; () banked
  6364   000AAA  059B               	decf	_go_back_f& (0+255),w,b
  6365   000AAC  119C               	iorwf	(_go_back_f+1)& (0+255),w,b
  6366   000AAE  A4D8               	btfss	status,2,c
  6367   000AB0  EF5C  F005         	goto	u3291
  6368   000AB4  EF5E  F005         	goto	u3290
  6369   000AB8                     u3291:
  6370   000AB8  EF81  F005         	goto	l3978
  6371   000ABC                     u3290:
  6372   000ABC                     
  6373                           ; BSR set to: 0
  6374                           ;change_password.c: 26:     {;change_password.c: 27:         if (i++ == 800)
  6375   000ABC  4A3F               	infsnz	_i^0,f,c
  6376   000ABE  2A40               	incf	(_i+1)^0,f,c
  6377   000AC0  0E21               	movlw	33
  6378   000AC2  183F               	xorwf	_i^0,w,c
  6379   000AC4  E107               	bnz	u3301
  6380   000AC6  0E03               	movlw	3
  6381   000AC8  1840               	xorwf	(_i+1)^0,w,c
  6382   000ACA  A4D8               	btfss	status,2,c
  6383   000ACC  EF6A  F005         	goto	u3301
  6384   000AD0  EF6C  F005         	goto	u3300
  6385   000AD4                     u3301:
  6386   000AD4  EFEF  F006         	goto	l4076
  6387   000AD8                     u3300:
  6388   000AD8                     
  6389                           ; BSR set to: 0
  6390                           ;change_password.c: 28:         {;change_password.c: 30:             ev_ind = 12;
  6391   000AD8  0E0C               	movlw	12
  6392   000ADA  6E56               	movwf	_ev_ind^0,c
  6393   000ADC                     
  6394                           ; BSR set to: 0
  6395                           ;change_password.c: 31:             store_event();
  6396   000ADC  ECDA  F00E         	call	_store_event	;wreg free
  6397   000AE0                     
  6398                           ;change_password.c: 32:             main_f = 2;
  6399   000AE0  0E02               	movlw	2
  6400   000AE2  6E55               	movwf	_main_f^0,c
  6401   000AE4                     
  6402                           ;change_password.c: 33:             count1 = 0;
  6403   000AE4  0E00               	movlw	0
  6404   000AE6  6E3E               	movwf	(_count1+1)^0,c
  6405   000AE8  0E00               	movlw	0
  6406   000AEA  6E3D               	movwf	_count1^0,c
  6407   000AEC                     
  6408                           ;change_password.c: 34:             re_flag = 0;
  6409   000AEC  0E00               	movlw	0
  6410   000AEE  0100               	movlb	0	; () banked
  6411   000AF0  6F9E               	movwf	(_re_flag+1)& (0+255),b
  6412   000AF2  0E00               	movlw	0
  6413   000AF4  6F9D               	movwf	_re_flag& (0+255),b
  6414   000AF6                     
  6415                           ; BSR set to: 0
  6416                           ;change_password.c: 35:             go_back_f = 0;
  6417   000AF6  0E00               	movlw	0
  6418   000AF8  6F9C               	movwf	(_go_back_f+1)& (0+255),b
  6419   000AFA  0E00               	movlw	0
  6420   000AFC  6F9B               	movwf	_go_back_f& (0+255),b
  6421   000AFE  EFEF  F006         	goto	l4076
  6422   000B02                     l3978:
  6423                           
  6424                           ; BSR set to: 0
  6425   000B02  519D               	movf	_re_flag& (0+255),w,b
  6426   000B04  119E               	iorwf	(_re_flag+1)& (0+255),w,b
  6427   000B06  A4D8               	btfss	status,2,c
  6428   000B08  EF88  F005         	goto	u3311
  6429   000B0C  EF8A  F005         	goto	u3310
  6430   000B10                     u3311:
  6431   000B10  EF00  F006         	goto	l4012
  6432   000B14                     u3310:
  6433   000B14                     
  6434                           ; BSR set to: 0
  6435                           ;change_password.c: 40:     {;change_password.c: 41:         if (count1 < 4)
  6436   000B14  503E               	movf	(_count1+1)^0,w,c
  6437   000B16  E107               	bnz	u3321
  6438   000B18  0E04               	movlw	4
  6439   000B1A  5C3D               	subwf	_count1^0,w,c
  6440   000B1C  B0D8               	btfsc	status,0,c
  6441   000B1E  EF93  F005         	goto	u3321
  6442   000B22  EF95  F005         	goto	u3320
  6443   000B26                     u3321:
  6444   000B26  EFDF  F005         	goto	l4002
  6445   000B2A                     u3320:
  6446   000B2A                     
  6447                           ; BSR set to: 0
  6448                           ;change_password.c: 42:         {;change_password.c: 43:             go_back_f = 0;
  6449   000B2A  0E00               	movlw	0
  6450   000B2C  6F9C               	movwf	(_go_back_f+1)& (0+255),b
  6451   000B2E  0E00               	movlw	0
  6452   000B30  6F9B               	movwf	_go_back_f& (0+255),b
  6453   000B32                     
  6454                           ; BSR set to: 0
  6455                           ;change_password.c: 44:             clcd_print("ENTER NEW PASSWD", (0x80 + (0)));
  6456   000B32  0EBD               	movlw	low STR_1
  6457   000B34  6E03               	movwf	clcd_print@data^0,c
  6458   000B36  0E2F               	movlw	high STR_1
  6459   000B38  6E04               	movwf	(clcd_print@data+1)^0,c
  6460   000B3A  0E80               	movlw	128
  6461   000B3C  6E05               	movwf	clcd_print@addr^0,c
  6462   000B3E  ECA6  F012         	call	_clcd_print	;wreg free
  6463   000B42                     
  6464                           ;change_password.c: 45:             if (key == 11)
  6465   000B42  0E0B               	movlw	11
  6466   000B44  180F               	xorwf	change_pass@key^0,w,c
  6467   000B46  A4D8               	btfss	status,2,c
  6468   000B48  EFA8  F005         	goto	u3331
  6469   000B4C  EFAA  F005         	goto	u3330
  6470   000B50                     u3331:
  6471   000B50  EFBF  F005         	goto	l3994
  6472   000B54                     u3330:
  6473   000B54                     
  6474                           ;change_password.c: 46:             {;change_password.c: 47:                 pa[count1] 
      +                          = '0';
  6475   000B54  90D8               	bcf	status,0,c
  6476   000B56  343D               	rlcf	_count1^0,w,c
  6477   000B58  6ED9               	movwf	fsr2l,c
  6478   000B5A  343E               	rlcf	(_count1+1)^0,w,c
  6479   000B5C  6EDA               	movwf	fsr2h,c
  6480   000B5E  0E74               	movlw	low _pa
  6481   000B60  26D9               	addwf	fsr2l,f,c
  6482   000B62  0E00               	movlw	high _pa
  6483   000B64  22DA               	addwfc	fsr2h,f,c
  6484   000B66  0E30               	movlw	48
  6485   000B68  6EDE               	movwf	postinc2,c
  6486   000B6A  0E00               	movlw	0
  6487   000B6C  6EDD               	movwf	postdec2,c
  6488   000B6E                     
  6489                           ;change_password.c: 48:                 clcd_putch('*', (0xC0 + (count1++)));
  6490   000B6E  503D               	movf	_count1^0,w,c
  6491   000B70  0FC0               	addlw	192
  6492   000B72  6E09               	movwf	clcd_putch@addr^0,c
  6493   000B74  0E2A               	movlw	42
  6494   000B76  ECB5  F014         	call	_clcd_putch
  6495   000B7A  4A3D               	infsnz	_count1^0,f,c
  6496   000B7C  2A3E               	incf	(_count1+1)^0,f,c
  6497   000B7E                     l3994:
  6498                           
  6499                           ;change_password.c: 50:             if (key == 12)
  6500   000B7E  0E0C               	movlw	12
  6501   000B80  180F               	xorwf	change_pass@key^0,w,c
  6502   000B82  A4D8               	btfss	status,2,c
  6503   000B84  EFC6  F005         	goto	u3341
  6504   000B88  EFC8  F005         	goto	u3340
  6505   000B8C                     u3341:
  6506   000B8C  EFEF  F006         	goto	l4076
  6507   000B90                     u3340:
  6508   000B90                     
  6509                           ;change_password.c: 51:             {;change_password.c: 52:                 pa[count1] 
      +                          = '1';
  6510   000B90  90D8               	bcf	status,0,c
  6511   000B92  343D               	rlcf	_count1^0,w,c
  6512   000B94  6ED9               	movwf	fsr2l,c
  6513   000B96  343E               	rlcf	(_count1+1)^0,w,c
  6514   000B98  6EDA               	movwf	fsr2h,c
  6515   000B9A  0E74               	movlw	low _pa
  6516   000B9C  26D9               	addwf	fsr2l,f,c
  6517   000B9E  0E00               	movlw	high _pa
  6518   000BA0  22DA               	addwfc	fsr2h,f,c
  6519   000BA2  0E31               	movlw	49
  6520   000BA4  6EDE               	movwf	postinc2,c
  6521   000BA6  0E00               	movlw	0
  6522   000BA8  6EDD               	movwf	postdec2,c
  6523   000BAA                     
  6524                           ;change_password.c: 53:                 clcd_putch('*', (0xC0 + (count1++)));
  6525   000BAA  503D               	movf	_count1^0,w,c
  6526   000BAC  0FC0               	addlw	192
  6527   000BAE  6E09               	movwf	clcd_putch@addr^0,c
  6528   000BB0  0E2A               	movlw	42
  6529   000BB2  ECB5  F014         	call	_clcd_putch
  6530   000BB6  4A3D               	infsnz	_count1^0,f,c
  6531   000BB8  2A3E               	incf	(_count1+1)^0,f,c
  6532   000BBA  EFEF  F006         	goto	l4076
  6533   000BBE                     l4002:
  6534                           
  6535                           ; BSR set to: 0
  6536   000BBE  0E04               	movlw	4
  6537   000BC0  183D               	xorwf	_count1^0,w,c
  6538   000BC2  103E               	iorwf	(_count1+1)^0,w,c
  6539   000BC4  A4D8               	btfss	status,2,c
  6540   000BC6  EFE7  F005         	goto	u3351
  6541   000BCA  EFE9  F005         	goto	u3350
  6542   000BCE                     u3351:
  6543   000BCE  EFEF  F006         	goto	l4076
  6544   000BD2                     u3350:
  6545   000BD2                     
  6546                           ; BSR set to: 0
  6547                           ;change_password.c: 58:         {;change_password.c: 59:             re_flag = 1;
  6548   000BD2  0E00               	movlw	0
  6549   000BD4  6F9E               	movwf	(_re_flag+1)& (0+255),b
  6550   000BD6  0E01               	movlw	1
  6551   000BD8  6F9D               	movwf	_re_flag& (0+255),b
  6552   000BDA                     
  6553                           ; BSR set to: 0
  6554                           ;change_password.c: 60:             clcd_write(0x01, 0);
  6555   000BDA  0E00               	movlw	0
  6556   000BDC  6E01               	movwf	clcd_write@control_bit^0,c
  6557   000BDE  0E01               	movlw	1
  6558   000BE0  ECFA  F013         	call	_clcd_write
  6559   000BE4                     
  6560                           ;change_password.c: 61:             clcd_print("RE-ENTER PASSWD ", (0x80 + (0)));
  6561   000BE4  0E8A               	movlw	low STR_2
  6562   000BE6  6E03               	movwf	clcd_print@data^0,c
  6563   000BE8  0E2F               	movlw	high STR_2
  6564   000BEA  6E04               	movwf	(clcd_print@data+1)^0,c
  6565   000BEC  0E80               	movlw	128
  6566   000BEE  6E05               	movwf	clcd_print@addr^0,c
  6567   000BF0  ECA6  F012         	call	_clcd_print	;wreg free
  6568   000BF4                     l4010:
  6569                           
  6570                           ;change_password.c: 62:             count1 = 0;
  6571   000BF4  0E00               	movlw	0
  6572   000BF6  6E3E               	movwf	(_count1+1)^0,c
  6573   000BF8  0E00               	movlw	0
  6574   000BFA  6E3D               	movwf	_count1^0,c
  6575   000BFC  EFEF  F006         	goto	l4076
  6576   000C00                     l4012:
  6577                           
  6578                           ; BSR set to: 0
  6579   000C00  059D               	decf	_re_flag& (0+255),w,b
  6580   000C02  119E               	iorwf	(_re_flag+1)& (0+255),w,b
  6581   000C04  A4D8               	btfss	status,2,c
  6582   000C06  EF07  F006         	goto	u3361
  6583   000C0A  EF09  F006         	goto	u3360
  6584   000C0E                     u3361:
  6585   000C0E  EFEF  F006         	goto	l4076
  6586   000C12                     u3360:
  6587   000C12                     
  6588                           ; BSR set to: 0
  6589                           ;change_password.c: 67:     {;change_password.c: 68:         if (count1 < 4)
  6590   000C12  503E               	movf	(_count1+1)^0,w,c
  6591   000C14  E107               	bnz	u3371
  6592   000C16  0E04               	movlw	4
  6593   000C18  5C3D               	subwf	_count1^0,w,c
  6594   000C1A  B0D8               	btfsc	status,0,c
  6595   000C1C  EF12  F006         	goto	u3371
  6596   000C20  EF14  F006         	goto	u3370
  6597   000C24                     u3371:
  6598   000C24  EF50  F006         	goto	l4032
  6599   000C28                     u3370:
  6600   000C28                     
  6601                           ; BSR set to: 0
  6602                           ;change_password.c: 69:         {;change_password.c: 70:             if (key == 11)
  6603   000C28  0E0B               	movlw	11
  6604   000C2A  180F               	xorwf	change_pass@key^0,w,c
  6605   000C2C  A4D8               	btfss	status,2,c
  6606   000C2E  EF1B  F006         	goto	u3381
  6607   000C32  EF1D  F006         	goto	u3380
  6608   000C36                     u3381:
  6609   000C36  EF32  F006         	goto	l4024
  6610   000C3A                     u3380:
  6611   000C3A                     
  6612                           ; BSR set to: 0
  6613                           ;change_password.c: 71:             {;change_password.c: 72:                 repa[count1
      +                          ] = '0';
  6614   000C3A  90D8               	bcf	status,0,c
  6615   000C3C  343D               	rlcf	_count1^0,w,c
  6616   000C3E  6ED9               	movwf	fsr2l,c
  6617   000C40  343E               	rlcf	(_count1+1)^0,w,c
  6618   000C42  6EDA               	movwf	fsr2h,c
  6619   000C44  0E6A               	movlw	low _repa
  6620   000C46  26D9               	addwf	fsr2l,f,c
  6621   000C48  0E00               	movlw	high _repa
  6622   000C4A  22DA               	addwfc	fsr2h,f,c
  6623   000C4C  0E30               	movlw	48
  6624   000C4E  6EDE               	movwf	postinc2,c
  6625   000C50  0E00               	movlw	0
  6626   000C52  6EDD               	movwf	postdec2,c
  6627   000C54                     
  6628                           ; BSR set to: 0
  6629                           ;change_password.c: 73:                 clcd_putch('*', (0xC0 + (count1++)));
  6630   000C54  503D               	movf	_count1^0,w,c
  6631   000C56  0FC0               	addlw	192
  6632   000C58  6E09               	movwf	clcd_putch@addr^0,c
  6633   000C5A  0E2A               	movlw	42
  6634   000C5C  ECB5  F014         	call	_clcd_putch
  6635   000C60  4A3D               	infsnz	_count1^0,f,c
  6636   000C62  2A3E               	incf	(_count1+1)^0,f,c
  6637   000C64                     l4024:
  6638                           
  6639                           ;change_password.c: 75:             if (key == 12)
  6640   000C64  0E0C               	movlw	12
  6641   000C66  180F               	xorwf	change_pass@key^0,w,c
  6642   000C68  A4D8               	btfss	status,2,c
  6643   000C6A  EF39  F006         	goto	u3391
  6644   000C6E  EF3B  F006         	goto	u3390
  6645   000C72                     u3391:
  6646   000C72  EF50  F006         	goto	l4032
  6647   000C76                     u3390:
  6648   000C76                     
  6649                           ;change_password.c: 76:             {;change_password.c: 77:                 repa[count1
      +                          ] = '1';
  6650   000C76  90D8               	bcf	status,0,c
  6651   000C78  343D               	rlcf	_count1^0,w,c
  6652   000C7A  6ED9               	movwf	fsr2l,c
  6653   000C7C  343E               	rlcf	(_count1+1)^0,w,c
  6654   000C7E  6EDA               	movwf	fsr2h,c
  6655   000C80  0E6A               	movlw	low _repa
  6656   000C82  26D9               	addwf	fsr2l,f,c
  6657   000C84  0E00               	movlw	high _repa
  6658   000C86  22DA               	addwfc	fsr2h,f,c
  6659   000C88  0E31               	movlw	49
  6660   000C8A  6EDE               	movwf	postinc2,c
  6661   000C8C  0E00               	movlw	0
  6662   000C8E  6EDD               	movwf	postdec2,c
  6663   000C90                     
  6664                           ;change_password.c: 78:                 clcd_putch('*', (0xC0 + (count1++)));
  6665   000C90  503D               	movf	_count1^0,w,c
  6666   000C92  0FC0               	addlw	192
  6667   000C94  6E09               	movwf	clcd_putch@addr^0,c
  6668   000C96  0E2A               	movlw	42
  6669   000C98  ECB5  F014         	call	_clcd_putch
  6670   000C9C  4A3D               	infsnz	_count1^0,f,c
  6671   000C9E  2A3E               	incf	(_count1+1)^0,f,c
  6672   000CA0                     l4032:
  6673                           
  6674                           ;change_password.c: 81:         if (count1 == 4 && same == 0)
  6675   000CA0  0E04               	movlw	4
  6676   000CA2  183D               	xorwf	_count1^0,w,c
  6677   000CA4  103E               	iorwf	(_count1+1)^0,w,c
  6678   000CA6  A4D8               	btfss	status,2,c
  6679   000CA8  EF58  F006         	goto	u3401
  6680   000CAC  EF5A  F006         	goto	u3400
  6681   000CB0                     u3401:
  6682   000CB0  EFEF  F006         	goto	l4076
  6683   000CB4                     u3400:
  6684   000CB4  0100               	movlb	0	; () banked
  6685   000CB6  519F               	movf	_same& (0+255),w,b
  6686   000CB8  11A0               	iorwf	(_same+1)& (0+255),w,b
  6687   000CBA  A4D8               	btfss	status,2,c
  6688   000CBC  EF62  F006         	goto	u3411
  6689   000CC0  EF64  F006         	goto	u3410
  6690   000CC4                     u3411:
  6691   000CC4  EFEF  F006         	goto	l4076
  6692   000CC8                     u3410:
  6693   000CC8                     
  6694                           ; BSR set to: 0
  6695                           ;change_password.c: 82:         {;change_password.c: 84:             for (i = 0; i < 4; 
      +                          i++)
  6696   000CC8  0E00               	movlw	0
  6697   000CCA  6E40               	movwf	(_i+1)^0,c
  6698   000CCC  0E00               	movlw	0
  6699   000CCE  6E3F               	movwf	_i^0,c
  6700   000CD0                     l4038:
  6701   000CD0  5040               	movf	(_i+1)^0,w,c
  6702   000CD2  E109               	bnz	u3420
  6703   000CD4  0E04               	movlw	4
  6704   000CD6  5C3F               	subwf	_i^0,w,c
  6705   000CD8  A0D8               	btfss	status,0,c
  6706   000CDA  EF71  F006         	goto	u3421
  6707   000CDE  EF73  F006         	goto	u3420
  6708   000CE2                     u3421:
  6709   000CE2  EF75  F006         	goto	l4042
  6710   000CE6                     u3420:
  6711   000CE6  EF9E  F006         	goto	l4050
  6712   000CEA                     l4042:
  6713                           
  6714                           ;change_password.c: 85:             {;change_password.c: 86:                 if (repa[i]
      +                           != pa[i])
  6715   000CEA  90D8               	bcf	status,0,c
  6716   000CEC  343F               	rlcf	_i^0,w,c
  6717   000CEE  6ED9               	movwf	fsr2l,c
  6718   000CF0  3440               	rlcf	(_i+1)^0,w,c
  6719   000CF2  6EDA               	movwf	fsr2h,c
  6720   000CF4  0E74               	movlw	low _pa
  6721   000CF6  26D9               	addwf	fsr2l,f,c
  6722   000CF8  0E00               	movlw	high _pa
  6723   000CFA  22DA               	addwfc	fsr2h,f,c
  6724   000CFC  90D8               	bcf	status,0,c
  6725   000CFE  343F               	rlcf	_i^0,w,c
  6726   000D00  6EE1               	movwf	fsr1l,c
  6727   000D02  3440               	rlcf	(_i+1)^0,w,c
  6728   000D04  6EE2               	movwf	fsr1h,c
  6729   000D06  0E6A               	movlw	low _repa
  6730   000D08  26E1               	addwf	fsr1l,f,c
  6731   000D0A  0E00               	movlw	high _repa
  6732   000D0C  22E2               	addwfc	fsr1h,f,c
  6733   000D0E  50DE               	movf	postinc2,w,c
  6734   000D10  18E6               	xorwf	postinc1,w,c
  6735   000D12  E109               	bnz	u3430
  6736   000D14  50DE               	movf	postinc2,w,c
  6737   000D16  18E6               	xorwf	postinc1,w,c
  6738   000D18  B4D8               	btfsc	status,2,c
  6739   000D1A  EF91  F006         	goto	u3431
  6740   000D1E  EF93  F006         	goto	u3430
  6741   000D22                     u3431:
  6742   000D22  EF9A  F006         	goto	l4046
  6743   000D26                     u3430:
  6744   000D26                     
  6745                           ;change_password.c: 87:                 {;change_password.c: 88:                     sam
      +                          e = 1;
  6746   000D26  0E00               	movlw	0
  6747   000D28  0100               	movlb	0	; () banked
  6748   000D2A  6FA0               	movwf	(_same+1)& (0+255),b
  6749   000D2C  0E01               	movlw	1
  6750   000D2E  6F9F               	movwf	_same& (0+255),b
  6751                           
  6752                           ;change_password.c: 89:                     break;
  6753   000D30  EF9E  F006         	goto	l4050
  6754   000D34                     l4046:
  6755                           
  6756                           ;change_password.c: 91:             }
  6757   000D34  4A3F               	infsnz	_i^0,f,c
  6758   000D36  2A40               	incf	(_i+1)^0,f,c
  6759   000D38  EF68  F006         	goto	l4038
  6760   000D3C                     l4050:
  6761                           
  6762                           ;change_password.c: 93:             if (same == 1)
  6763   000D3C  0100               	movlb	0	; () banked
  6764   000D3E  059F               	decf	_same& (0+255),w,b
  6765   000D40  11A0               	iorwf	(_same+1)& (0+255),w,b
  6766   000D42  A4D8               	btfss	status,2,c
  6767   000D44  EFA6  F006         	goto	u3441
  6768   000D48  EFA8  F006         	goto	u3440
  6769   000D4C                     u3441:
  6770   000D4C  EFC4  F006         	goto	l4062
  6771   000D50                     u3440:
  6772   000D50                     
  6773                           ; BSR set to: 0
  6774                           ;change_password.c: 94:             {;change_password.c: 95:                 clcd_write(
      +                          0x01, 0);
  6775   000D50  0E00               	movlw	0
  6776   000D52  6E01               	movwf	clcd_write@control_bit^0,c
  6777   000D54  0E01               	movlw	1
  6778   000D56  ECFA  F013         	call	_clcd_write
  6779   000D5A                     
  6780                           ;change_password.c: 96:                 clcd_print("PSWD NOT MATCHED", (0xC0 + (0)));
  6781   000D5A  0EAC               	movlw	low STR_3
  6782   000D5C  6E03               	movwf	clcd_print@data^0,c
  6783   000D5E  0E2F               	movlw	high STR_3
  6784   000D60  6E04               	movwf	(clcd_print@data+1)^0,c
  6785   000D62  0EC0               	movlw	192
  6786   000D64  6E05               	movwf	clcd_print@addr^0,c
  6787   000D66  ECA6  F012         	call	_clcd_print	;wreg free
  6788   000D6A                     
  6789                           ;change_password.c: 97:                 re_flag = 0;
  6790   000D6A  0E00               	movlw	0
  6791   000D6C  0100               	movlb	0	; () banked
  6792   000D6E  6F9E               	movwf	(_re_flag+1)& (0+255),b
  6793   000D70  0E00               	movlw	0
  6794   000D72  6F9D               	movwf	_re_flag& (0+255),b
  6795   000D74                     
  6796                           ; BSR set to: 0
  6797                           ;change_password.c: 98:                 same = 0;
  6798   000D74  0E00               	movlw	0
  6799   000D76  6FA0               	movwf	(_same+1)& (0+255),b
  6800   000D78  0E00               	movlw	0
  6801   000D7A  6F9F               	movwf	_same& (0+255),b
  6802   000D7C                     
  6803                           ; BSR set to: 0
  6804                           ;change_password.c: 99:                 go_back_f = 1;
  6805   000D7C  0E00               	movlw	0
  6806   000D7E  6F9C               	movwf	(_go_back_f+1)& (0+255),b
  6807   000D80  0E01               	movlw	1
  6808   000D82  6F9B               	movwf	_go_back_f& (0+255),b
  6809                           
  6810                           ;change_password.c: 100:             }
  6811   000D84  EFEF  F006         	goto	l4076
  6812   000D88                     l4062:
  6813                           
  6814                           ; BSR set to: 0
  6815                           ;change_password.c: 103:             {;change_password.c: 104:                 clcd_prin
      +                          t("PASSWORD UPDATE ", (0x80 + (0)));
  6816   000D88  0E9B               	movlw	low STR_4
  6817   000D8A  6E03               	movwf	clcd_print@data^0,c
  6818   000D8C  0E2F               	movlw	high STR_4
  6819   000D8E  6E04               	movwf	(clcd_print@data+1)^0,c
  6820   000D90  0E80               	movlw	128
  6821   000D92  6E05               	movwf	clcd_print@addr^0,c
  6822   000D94  ECA6  F012         	call	_clcd_print	;wreg free
  6823                           
  6824                           ;change_password.c: 105:                 clcd_print("SUCCESSFUL      ", (0xC0 + (0)));
  6825   000D98  0E79               	movlw	low STR_5
  6826   000D9A  6E03               	movwf	clcd_print@data^0,c
  6827   000D9C  0E2F               	movlw	high STR_5
  6828   000D9E  6E04               	movwf	(clcd_print@data+1)^0,c
  6829   000DA0  0EC0               	movlw	192
  6830   000DA2  6E05               	movwf	clcd_print@addr^0,c
  6831   000DA4  ECA6  F012         	call	_clcd_print	;wreg free
  6832   000DA8                     
  6833                           ;change_password.c: 106:                 write_ext_eeprom(200, repa[0]);
  6834   000DA8  C06A  F004         	movff	_repa,write_ext_eeprom@data
  6835   000DAC  0EC8               	movlw	200
  6836   000DAE  ECDA  F013         	call	_write_ext_eeprom
  6837   000DB2                     
  6838                           ;change_password.c: 107:                 write_ext_eeprom(201, repa[1]);
  6839   000DB2  C06C  F004         	movff	_repa+2,write_ext_eeprom@data
  6840   000DB6  0EC9               	movlw	201
  6841   000DB8  ECDA  F013         	call	_write_ext_eeprom
  6842   000DBC                     
  6843                           ;change_password.c: 108:                 write_ext_eeprom(202, repa[2]);
  6844   000DBC  C06E  F004         	movff	_repa+4,write_ext_eeprom@data
  6845   000DC0  0ECA               	movlw	202
  6846   000DC2  ECDA  F013         	call	_write_ext_eeprom
  6847   000DC6                     
  6848                           ;change_password.c: 109:                 write_ext_eeprom(203, repa[3]);
  6849   000DC6  C070  F004         	movff	_repa+6,write_ext_eeprom@data
  6850   000DCA  0ECB               	movlw	203
  6851   000DCC  ECDA  F013         	call	_write_ext_eeprom
  6852   000DD0                     
  6853                           ;change_password.c: 110:                 go_back_f = 1;
  6854   000DD0  0E00               	movlw	0
  6855   000DD2  0100               	movlb	0	; () banked
  6856   000DD4  6F9C               	movwf	(_go_back_f+1)& (0+255),b
  6857   000DD6  0E01               	movlw	1
  6858   000DD8  6F9B               	movwf	_go_back_f& (0+255),b
  6859   000DDA  EFFA  F005         	goto	l4010
  6860   000DDE                     l4076:
  6861                           
  6862                           ;change_password.c: 116:     if(count1 < 4 && go_back_f == 0)
  6863   000DDE  503E               	movf	(_count1+1)^0,w,c
  6864   000DE0  E107               	bnz	u3451
  6865   000DE2  0E04               	movlw	4
  6866   000DE4  5C3D               	subwf	_count1^0,w,c
  6867   000DE6  B0D8               	btfsc	status,0,c
  6868   000DE8  EFF8  F006         	goto	u3451
  6869   000DEC  EFFA  F006         	goto	u3450
  6870   000DF0                     u3451:
  6871   000DF0  EF40  F007         	goto	l166
  6872   000DF4                     u3450:
  6873   000DF4  0100               	movlb	0	; () banked
  6874   000DF6  519B               	movf	_go_back_f& (0+255),w,b
  6875   000DF8  119C               	iorwf	(_go_back_f+1)& (0+255),w,b
  6876   000DFA  A4D8               	btfss	status,2,c
  6877   000DFC  EF02  F007         	goto	u3461
  6878   000E00  EF04  F007         	goto	u3460
  6879   000E04                     u3461:
  6880   000E04  EF40  F007         	goto	l166
  6881   000E08                     u3460:
  6882   000E08                     
  6883                           ; BSR set to: 0
  6884                           ;change_password.c: 117:         if (blink_delay++ > 200)
  6885   000E08  5199               	movf	_blink_delay& (0+255),w,b
  6886   000E0A  6E0B               	movwf	??_change_pass^0,c
  6887   000E0C  519A               	movf	(_blink_delay+1)& (0+255),w,b
  6888   000E0E  6E0C               	movwf	(??_change_pass+1)^0,c
  6889   000E10  4B99               	infsnz	_blink_delay& (0+255),f,b
  6890   000E12  2B9A               	incf	(_blink_delay+1)& (0+255),f,b
  6891   000E14  500C               	movf	(??_change_pass+1)^0,w,c
  6892   000E16  E109               	bnz	u3470
  6893   000E18  0EC9               	movlw	201
  6894   000E1A  5C0B               	subwf	??_change_pass^0,w,c
  6895   000E1C  A0D8               	btfss	status,0,c
  6896   000E1E  EF13  F007         	goto	u3471
  6897   000E22  EF15  F007         	goto	u3470
  6898   000E26                     u3471:
  6899   000E26  EF40  F007         	goto	l166
  6900   000E2A                     u3470:
  6901   000E2A                     
  6902                           ; BSR set to: 0
  6903                           ;change_password.c: 118:         {;change_password.c: 119:             blink_delay = 0;
  6904   000E2A  0E00               	movlw	0
  6905   000E2C  6F9A               	movwf	(_blink_delay+1)& (0+255),b
  6906   000E2E  0E00               	movlw	0
  6907   000E30  6F99               	movwf	_blink_delay& (0+255),b
  6908                           
  6909                           ;change_password.c: 120:             blink_state = !blink_state;
  6910   000E32  5051               	movf	_blink_state^0,w,c
  6911   000E34  B4D8               	btfsc	status,2,c
  6912   000E36  EF1F  F007         	goto	u3481
  6913   000E3A  EF22  F007         	goto	u3480
  6914   000E3E                     u3481:
  6915   000E3E  0E01               	movlw	1
  6916   000E40  EF23  F007         	goto	u3490
  6917   000E44                     u3480:
  6918   000E44  0E00               	movlw	0
  6919   000E46                     u3490:
  6920   000E46  6E51               	movwf	_blink_state^0,c
  6921                           
  6922                           ;change_password.c: 122:             if (blink_state)
  6923   000E48  5051               	movf	_blink_state^0,w,c
  6924   000E4A  B4D8               	btfsc	status,2,c
  6925   000E4C  EF2A  F007         	goto	u3501
  6926   000E50  EF2C  F007         	goto	u3500
  6927   000E54                     u3501:
  6928   000E54  EF37  F007         	goto	l4086
  6929   000E58                     u3500:
  6930   000E58                     
  6931                           ; BSR set to: 0
  6932                           ;change_password.c: 123:             {;change_password.c: 124:                 clcd_prin
      +                          t("_               ", (0xC0 + (count1)));
  6933   000E58  0E68               	movlw	low STR_6
  6934   000E5A  6E03               	movwf	clcd_print@data^0,c
  6935   000E5C  0E2F               	movlw	high STR_6
  6936   000E5E  6E04               	movwf	(clcd_print@data+1)^0,c
  6937   000E60  503D               	movf	_count1^0,w,c
  6938   000E62  0FC0               	addlw	192
  6939   000E64  6E05               	movwf	clcd_print@addr^0,c
  6940   000E66  ECA6  F012         	call	_clcd_print	;wreg free
  6941                           
  6942                           ;change_password.c: 125:             }
  6943   000E6A  EF40  F007         	goto	l166
  6944   000E6E                     l4086:
  6945                           
  6946                           ; BSR set to: 0
  6947                           ;change_password.c: 127:             {;change_password.c: 128:                 clcd_prin
      +                          t("                ", (0xC0 + (count1)));
  6948   000E6E  0E57               	movlw	low STR_7
  6949   000E70  6E03               	movwf	clcd_print@data^0,c
  6950   000E72  0E2F               	movlw	high STR_7
  6951   000E74  6E04               	movwf	(clcd_print@data+1)^0,c
  6952   000E76  503D               	movf	_count1^0,w,c
  6953   000E78  0FC0               	addlw	192
  6954   000E7A  6E05               	movwf	clcd_print@addr^0,c
  6955   000E7C  ECA6  F012         	call	_clcd_print	;wreg free
  6956   000E80                     l166:
  6957   000E80  0012               	return		;funcret
  6958   000E82                     __end_of_change_pass:
  6959                           	callstack 0
  6960                           
  6961 ;; *************** function _store_event *****************
  6962 ;; Defined at:
  6963 ;;		line 27 in file "store_event.c"
  6964 ;; Parameters:    Size  Location     Type
  6965 ;;		None
  6966 ;; Auto vars:     Size  Location     Type
  6967 ;;		None
  6968 ;; Return value:  Size  Location     Type
  6969 ;;                  1    wreg      void 
  6970 ;; Registers used:
  6971 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6972 ;; Tracked objects:
  6973 ;;		On entry : 0/0
  6974 ;;		On exit  : 0/0
  6975 ;;		Unchanged: 0/0
  6976 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6977 ;;      Params:         0       0       0       0       0       0       0
  6978 ;;      Locals:         0       0       0       0       0       0       0
  6979 ;;      Temps:          0       0       0       0       0       0       0
  6980 ;;      Totals:         0       0       0       0       0       0       0
  6981 ;;Total ram usage:        0 bytes
  6982 ;; Hardware stack levels used: 1
  6983 ;; Hardware stack levels required when called: 5
  6984 ;; This function calls:
  6985 ;;		___awdiv
  6986 ;;		___awmod
  6987 ;;		_read_ext_eeprom
  6988 ;;		_write_ext_eeprom
  6989 ;; This function is called by:
  6990 ;;		_main
  6991 ;;		_change_pass
  6992 ;;		_clear_log
  6993 ;;		_download_log
  6994 ;;		_set_time
  6995 ;; This function uses a non-reentrant model
  6996 ;;
  6997                           
  6998                           	psect	text26
  6999   001DB4                     __ptext26:
  7000                           	callstack 0
  7001   001DB4                     _store_event:
  7002                           	callstack 25
  7003   001DB4                     
  7004                           ;store_event.c: 30:     store[0] = time[0];
  7005   001DB4  C0A3  F060         	movff	_time,_store
  7006                           
  7007                           ;store_event.c: 31:     store[1] = time[1];
  7008   001DB8  C0A4  F061         	movff	_time+1,_store+1
  7009                           
  7010                           ;store_event.c: 32:     store[2] = time[3];
  7011   001DBC  C0A6  F062         	movff	_time+3,_store+2
  7012                           
  7013                           ;store_event.c: 33:     store[3] = time[4];
  7014   001DC0  C0A7  F063         	movff	_time+4,_store+3
  7015                           
  7016                           ;store_event.c: 34:     store[4] = time[6];
  7017   001DC4  C0A9  F064         	movff	_time+6,_store+4
  7018                           
  7019                           ;store_event.c: 35:     store[5] = time[7];
  7020   001DC8  C0AA  F065         	movff	_time+7,_store+5
  7021   001DCC                     
  7022                           ;store_event.c: 36:     store[6] = ev[ev_ind][0];
  7023   001DCC  5056               	movf	_ev_ind^0,w,c
  7024   001DCE  0D03               	mullw	3
  7025   001DD0  0EB1               	movlw	low _ev
  7026   001DD2  24F3               	addwf	243,w,c
  7027   001DD4  6ED9               	movwf	fsr2l,c
  7028   001DD6  0E00               	movlw	high _ev
  7029   001DD8  20F4               	addwfc	prodh,w,c
  7030   001DDA  6EDA               	movwf	fsr2h,c
  7031   001DDC  50DF               	movf	indf2,w,c
  7032   001DDE  0100               	movlb	0	; () banked
  7033   001DE0  6F66               	movwf	(_store+6)& (0+255),b
  7034                           
  7035                           ;store_event.c: 37:     store[7] = ev[ev_ind][1];
  7036   001DE2  5056               	movf	_ev_ind^0,w,c
  7037   001DE4  0D03               	mullw	3
  7038   001DE6  0EB2               	movlw	low (_ev+1)
  7039   001DE8  24F3               	addwf	243,w,c
  7040   001DEA  6ED9               	movwf	fsr2l,c
  7041   001DEC  0E00               	movlw	high (_ev+1)
  7042   001DEE  20F4               	addwfc	prodh,w,c
  7043   001DF0  6EDA               	movwf	fsr2h,c
  7044   001DF2  50DF               	movf	indf2,w,c
  7045   001DF4  6F67               	movwf	(_store+7)& (0+255),b
  7046   001DF6                     
  7047                           ; BSR set to: 0
  7048                           ;store_event.c: 38:     store[8] = (speed / 10) + '0';
  7049   001DF6  C059  F001         	movff	_speed,___awdiv@dividend
  7050   001DFA  6A02               	clrf	(___awdiv@dividend+1)^0,c
  7051   001DFC  0E00               	movlw	0
  7052   001DFE  6E04               	movwf	(___awdiv@divisor+1)^0,c
  7053   001E00  0E0A               	movlw	10
  7054   001E02  6E03               	movwf	___awdiv@divisor^0,c
  7055   001E04  EC98  F010         	call	___awdiv	;wreg free
  7056   001E08  5001               	movf	?___awdiv^0,w,c
  7057   001E0A  0F30               	addlw	48
  7058   001E0C  0100               	movlb	0	; () banked
  7059   001E0E  6F68               	movwf	(_store+8)& (0+255),b
  7060   001E10                     
  7061                           ; BSR set to: 0
  7062                           ;store_event.c: 39:     store[9] = (speed % 10) + '0';
  7063   001E10  C059  F001         	movff	_speed,___awmod@dividend
  7064   001E14  6A02               	clrf	(___awmod@dividend+1)^0,c
  7065   001E16  0E00               	movlw	0
  7066   001E18  6E04               	movwf	(___awmod@divisor+1)^0,c
  7067   001E1A  0E0A               	movlw	10
  7068   001E1C  6E03               	movwf	___awmod@divisor^0,c
  7069   001E1E  ECFA  F010         	call	___awmod	;wreg free
  7070   001E22  5001               	movf	?___awmod^0,w,c
  7071   001E24  0F30               	addlw	48
  7072   001E26  0100               	movlb	0	; () banked
  7073   001E28  6F69               	movwf	(_store+9)& (0+255),b
  7074   001E2A                     
  7075                           ; BSR set to: 0
  7076                           ;store_event.c: 42:     if (log == 10)
  7077   001E2A  0E0A               	movlw	10
  7078   001E2C  1841               	xorwf	_log^0,w,c
  7079   001E2E  1042               	iorwf	(_log+1)^0,w,c
  7080   001E30  A4D8               	btfss	status,2,c
  7081   001E32  EF1D  F00F         	goto	u2371
  7082   001E36  EF1F  F00F         	goto	u2370
  7083   001E3A                     u2371:
  7084   001E3A  EF59  F00F         	goto	l3342
  7085   001E3E                     u2370:
  7086   001E3E                     
  7087                           ; BSR set to: 0
  7088                           ;store_event.c: 43:     {;store_event.c: 44:         for (log = 0; log < 9; log++)
  7089   001E3E  0E00               	movlw	0
  7090   001E40  6E42               	movwf	(_log+1)^0,c
  7091   001E42  0E00               	movlw	0
  7092   001E44  6E41               	movwf	_log^0,c
  7093   001E46                     l3322:
  7094   001E46  BE42               	btfsc	(_log+1)^0,7,c
  7095   001E48  EF2F  F00F         	goto	u2381
  7096   001E4C  5042               	movf	(_log+1)^0,w,c
  7097   001E4E  E109               	bnz	u2380
  7098   001E50  0E09               	movlw	9
  7099   001E52  5C41               	subwf	_log^0,w,c
  7100   001E54  A0D8               	btfss	status,0,c
  7101   001E56  EF2F  F00F         	goto	u2381
  7102   001E5A  EF31  F00F         	goto	u2380
  7103   001E5E                     u2381:
  7104   001E5E  EF33  F00F         	goto	l3326
  7105   001E62                     u2380:
  7106   001E62  EF59  F00F         	goto	l3342
  7107   001E66                     l3326:
  7108                           
  7109                           ;store_event.c: 45:         {;store_event.c: 46:             for (n = 0; n < 10; n++)
  7110   001E66  0E00               	movlw	0
  7111   001E68  6E38               	movwf	(_n+1)^0,c
  7112   001E6A  0E00               	movlw	0
  7113   001E6C  6E37               	movwf	_n^0,c
  7114   001E6E                     l3332:
  7115                           
  7116                           ;store_event.c: 47:             {;store_event.c: 48:                 write_ext_eeprom((l
      +                          og * 10) + n, (read_ext_eeprom(((log + 1)*10) + n)));
  7117   001E6E  5041               	movf	_log^0,w,c
  7118   001E70  0D0A               	mullw	10
  7119   001E72  50F3               	movf	243,w,c
  7120   001E74  2437               	addwf	_n^0,w,c
  7121   001E76  0F0A               	addlw	10
  7122   001E78  EC42  F014         	call	_read_ext_eeprom
  7123   001E7C  6E04               	movwf	write_ext_eeprom@data^0,c
  7124   001E7E  5041               	movf	_log^0,w,c
  7125   001E80  0D0A               	mullw	10
  7126   001E82  50F3               	movf	243,w,c
  7127   001E84  2437               	addwf	_n^0,w,c
  7128   001E86  ECDA  F013         	call	_write_ext_eeprom
  7129   001E8A                     
  7130                           ;store_event.c: 49:             }
  7131   001E8A  4A37               	infsnz	_n^0,f,c
  7132   001E8C  2A38               	incf	(_n+1)^0,f,c
  7133   001E8E  BE38               	btfsc	(_n+1)^0,7,c
  7134   001E90  EF53  F00F         	goto	u2391
  7135   001E94  5038               	movf	(_n+1)^0,w,c
  7136   001E96  E109               	bnz	u2390
  7137   001E98  0E0A               	movlw	10
  7138   001E9A  5C37               	subwf	_n^0,w,c
  7139   001E9C  A0D8               	btfss	status,0,c
  7140   001E9E  EF53  F00F         	goto	u2391
  7141   001EA2  EF55  F00F         	goto	u2390
  7142   001EA6                     u2391:
  7143   001EA6  EF37  F00F         	goto	l3332
  7144   001EAA                     u2390:
  7145   001EAA                     
  7146                           ;store_event.c: 50:         }
  7147   001EAA  4A41               	infsnz	_log^0,f,c
  7148   001EAC  2A42               	incf	(_log+1)^0,f,c
  7149   001EAE  EF23  F00F         	goto	l3322
  7150   001EB2                     l3342:
  7151                           
  7152                           ;store_event.c: 53:     for (n = 0; n < 10; n++)
  7153   001EB2  0E00               	movlw	0
  7154   001EB4  6E38               	movwf	(_n+1)^0,c
  7155   001EB6  0E00               	movlw	0
  7156   001EB8  6E37               	movwf	_n^0,c
  7157   001EBA                     l3348:
  7158                           
  7159                           ;store_event.c: 54:     {;store_event.c: 55:         write_ext_eeprom(log * 10 + n, stor
      +                          e[n]);
  7160   001EBA  0E60               	movlw	low _store
  7161   001EBC  2437               	addwf	_n^0,w,c
  7162   001EBE  6ED9               	movwf	fsr2l,c
  7163   001EC0  0E00               	movlw	high _store
  7164   001EC2  2038               	addwfc	(_n+1)^0,w,c
  7165   001EC4  6EDA               	movwf	fsr2h,c
  7166   001EC6  50DF               	movf	indf2,w,c
  7167   001EC8  6E04               	movwf	write_ext_eeprom@data^0,c
  7168   001ECA  5041               	movf	_log^0,w,c
  7169   001ECC  0D0A               	mullw	10
  7170   001ECE  50F3               	movf	243,w,c
  7171   001ED0  2437               	addwf	_n^0,w,c
  7172   001ED2  ECDA  F013         	call	_write_ext_eeprom
  7173   001ED6                     
  7174                           ;store_event.c: 56:         write_ext_eeprom(250,log);
  7175   001ED6  C041  F004         	movff	_log,write_ext_eeprom@data
  7176   001EDA  0EFA               	movlw	250
  7177   001EDC  ECDA  F013         	call	_write_ext_eeprom
  7178   001EE0                     
  7179                           ;store_event.c: 57:     }
  7180   001EE0  4A37               	infsnz	_n^0,f,c
  7181   001EE2  2A38               	incf	(_n+1)^0,f,c
  7182   001EE4  BE38               	btfsc	(_n+1)^0,7,c
  7183   001EE6  EF7E  F00F         	goto	u2401
  7184   001EEA  5038               	movf	(_n+1)^0,w,c
  7185   001EEC  E109               	bnz	u2400
  7186   001EEE  0E0A               	movlw	10
  7187   001EF0  5C37               	subwf	_n^0,w,c
  7188   001EF2  A0D8               	btfss	status,0,c
  7189   001EF4  EF7E  F00F         	goto	u2401
  7190   001EF8  EF80  F00F         	goto	u2400
  7191   001EFC                     u2401:
  7192   001EFC  EF5D  F00F         	goto	l3348
  7193   001F00                     u2400:
  7194   001F00                     
  7195                           ;store_event.c: 59:     if(log < 10)
  7196   001F00  BE42               	btfsc	(_log+1)^0,7,c
  7197   001F02  EF8E  F00F         	goto	u2410
  7198   001F06  5042               	movf	(_log+1)^0,w,c
  7199   001F08  E107               	bnz	u2411
  7200   001F0A  0E0A               	movlw	10
  7201   001F0C  5C41               	subwf	_log^0,w,c
  7202   001F0E  B0D8               	btfsc	status,0,c
  7203   001F10  EF8C  F00F         	goto	u2411
  7204   001F14  EF8E  F00F         	goto	u2410
  7205   001F18                     u2411:
  7206   001F18  EF90  F00F         	goto	l447
  7207   001F1C                     u2410:
  7208   001F1C                     
  7209                           ;store_event.c: 60:     log++;
  7210   001F1C  4A41               	infsnz	_log^0,f,c
  7211   001F1E  2A42               	incf	(_log+1)^0,f,c
  7212   001F20                     l447:
  7213   001F20  0012               	return		;funcret
  7214   001F22                     __end_of_store_event:
  7215                           	callstack 0
  7216                           
  7217 ;; *************** function _write_ext_eeprom *****************
  7218 ;; Defined at:
  7219 ;;		line 12 in file "ext_eeprom.c"
  7220 ;; Parameters:    Size  Location     Type
  7221 ;;  address         1    wreg     unsigned char 
  7222 ;;  data            1    3[COMRAM] unsigned char 
  7223 ;; Auto vars:     Size  Location     Type
  7224 ;;  address         1    6[COMRAM] unsigned char 
  7225 ;;  i               2    4[COMRAM] int 
  7226 ;; Return value:  Size  Location     Type
  7227 ;;                  1    wreg      void 
  7228 ;; Registers used:
  7229 ;;		wreg, status,2, status,0, cstack
  7230 ;; Tracked objects:
  7231 ;;		On entry : 0/0
  7232 ;;		On exit  : 0/0
  7233 ;;		Unchanged: 0/0
  7234 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7235 ;;      Params:         1       0       0       0       0       0       0
  7236 ;;      Locals:         3       0       0       0       0       0       0
  7237 ;;      Temps:          0       0       0       0       0       0       0
  7238 ;;      Totals:         4       0       0       0       0       0       0
  7239 ;;Total ram usage:        4 bytes
  7240 ;; Hardware stack levels used: 1
  7241 ;; Hardware stack levels required when called: 3
  7242 ;; This function calls:
  7243 ;;		_i2c_start
  7244 ;;		_i2c_stop
  7245 ;;		_i2c_write
  7246 ;; This function is called by:
  7247 ;;		_change_pass
  7248 ;;		_clear_log
  7249 ;;		_store_event
  7250 ;; This function uses a non-reentrant model
  7251 ;;
  7252                           
  7253                           	psect	text27
  7254   0027B4                     __ptext27:
  7255                           	callstack 0
  7256   0027B4                     _write_ext_eeprom:
  7257                           	callstack 26
  7258                           
  7259                           ;incstack = 0
  7260                           ;write_ext_eeprom@address stored from wreg
  7261   0027B4  6E07               	movwf	write_ext_eeprom@address^0,c
  7262   0027B6                     
  7263                           ;ext_eeprom.c: 12: void write_ext_eeprom(unsigned char address, unsigned char data);ext_
      +                          eeprom.c: 13: {;ext_eeprom.c: 14:  i2c_start();
  7264   0027B6  ECF8  F014         	call	_i2c_start	;wreg free
  7265   0027BA                     
  7266                           ;ext_eeprom.c: 15:  i2c_write(0xA0);
  7267   0027BA  0EA0               	movlw	160
  7268   0027BC  ECE8  F014         	call	_i2c_write
  7269   0027C0                     
  7270                           ;ext_eeprom.c: 16:  i2c_write(address);
  7271   0027C0  5007               	movf	write_ext_eeprom@address^0,w,c
  7272   0027C2  ECE8  F014         	call	_i2c_write
  7273   0027C6                     
  7274                           ;ext_eeprom.c: 17:  i2c_write(data);
  7275   0027C6  5004               	movf	write_ext_eeprom@data^0,w,c
  7276   0027C8  ECE8  F014         	call	_i2c_write
  7277   0027CC                     
  7278                           ;ext_eeprom.c: 18:  i2c_stop();
  7279   0027CC  ECF4  F014         	call	_i2c_stop	;wreg free
  7280   0027D0                     
  7281                           ;ext_eeprom.c: 19:     for(int i = 3000; i-- ;);
  7282   0027D0  0E0B               	movlw	11
  7283   0027D2  6E06               	movwf	(write_ext_eeprom@i+1)^0,c
  7284   0027D4  0EB8               	movlw	184
  7285   0027D6  6E05               	movwf	write_ext_eeprom@i^0,c
  7286   0027D8                     l3052:
  7287   0027D8  0605               	decf	write_ext_eeprom@i^0,f,c
  7288   0027DA  A0D8               	btfss	status,0,c
  7289   0027DC  0606               	decf	(write_ext_eeprom@i+1)^0,f,c
  7290   0027DE  2805               	incf	write_ext_eeprom@i^0,w,c
  7291   0027E0  E106               	bnz	u2111
  7292   0027E2  2806               	incf	(write_ext_eeprom@i+1)^0,w,c
  7293   0027E4  A4D8               	btfss	status,2,c
  7294   0027E6  EFF7  F013         	goto	u2111
  7295   0027EA  EFF9  F013         	goto	u2110
  7296   0027EE                     u2111:
  7297   0027EE  EFEC  F013         	goto	l3052
  7298   0027F2                     u2110:
  7299   0027F2  0012               	return		;funcret
  7300   0027F4                     __end_of_write_ext_eeprom:
  7301                           	callstack 0
  7302                           
  7303 ;; *************** function _read_ext_eeprom *****************
  7304 ;; Defined at:
  7305 ;;		line 22 in file "ext_eeprom.c"
  7306 ;; Parameters:    Size  Location     Type
  7307 ;;  address         1    wreg     unsigned char 
  7308 ;; Auto vars:     Size  Location     Type
  7309 ;;  address         1    1[COMRAM] unsigned char 
  7310 ;;  data            1    2[COMRAM] unsigned char 
  7311 ;; Return value:  Size  Location     Type
  7312 ;;                  1    wreg      unsigned char 
  7313 ;; Registers used:
  7314 ;;		wreg, status,2, cstack
  7315 ;; Tracked objects:
  7316 ;;		On entry : 0/0
  7317 ;;		On exit  : 0/0
  7318 ;;		Unchanged: 0/0
  7319 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7320 ;;      Params:         0       0       0       0       0       0       0
  7321 ;;      Locals:         2       0       0       0       0       0       0
  7322 ;;      Temps:          0       0       0       0       0       0       0
  7323 ;;      Totals:         2       0       0       0       0       0       0
  7324 ;;Total ram usage:        2 bytes
  7325 ;; Hardware stack levels used: 1
  7326 ;; Hardware stack levels required when called: 4
  7327 ;; This function calls:
  7328 ;;		_i2c_read
  7329 ;;		_i2c_rep_start
  7330 ;;		_i2c_start
  7331 ;;		_i2c_stop
  7332 ;;		_i2c_write
  7333 ;; This function is called by:
  7334 ;;		_main
  7335 ;;		_download_log
  7336 ;;		_password
  7337 ;;		_store_event
  7338 ;;		_view_log
  7339 ;; This function uses a non-reentrant model
  7340 ;;
  7341                           
  7342                           	psect	text28
  7343   002884                     __ptext28:
  7344                           	callstack 0
  7345   002884                     _read_ext_eeprom:
  7346                           	callstack 25
  7347                           
  7348                           ;incstack = 0
  7349                           ;read_ext_eeprom@address stored from wreg
  7350   002884  6E02               	movwf	read_ext_eeprom@address^0,c
  7351   002886                     
  7352                           ;ext_eeprom.c: 22: unsigned char read_ext_eeprom(unsigned char address);ext_eeprom.c: 23
      +                          : {;ext_eeprom.c: 24:  unsigned char data;;ext_eeprom.c: 26:  i2c_start();
  7353   002886  ECF8  F014         	call	_i2c_start	;wreg free
  7354   00288A                     
  7355                           ;ext_eeprom.c: 27:  i2c_write(0xA0);
  7356   00288A  0EA0               	movlw	160
  7357   00288C  ECE8  F014         	call	_i2c_write
  7358   002890                     
  7359                           ;ext_eeprom.c: 28:  i2c_write(address);
  7360   002890  5002               	movf	read_ext_eeprom@address^0,w,c
  7361   002892  ECE8  F014         	call	_i2c_write
  7362   002896                     
  7363                           ;ext_eeprom.c: 29:  i2c_rep_start();
  7364   002896  ECFC  F014         	call	_i2c_rep_start	;wreg free
  7365   00289A                     
  7366                           ;ext_eeprom.c: 30:  i2c_write(0xA1);
  7367   00289A  0EA1               	movlw	161
  7368   00289C  ECE8  F014         	call	_i2c_write
  7369                           
  7370                           ;ext_eeprom.c: 31:  data = i2c_read();
  7371   0028A0  ECEE  F014         	call	_i2c_read	;wreg free
  7372   0028A4  6E03               	movwf	read_ext_eeprom@data^0,c
  7373   0028A6                     
  7374                           ;ext_eeprom.c: 32:  i2c_stop();
  7375   0028A6  ECF4  F014         	call	_i2c_stop	;wreg free
  7376                           
  7377                           ;ext_eeprom.c: 34:  return data;
  7378   0028AA  5003               	movf	read_ext_eeprom@data^0,w,c
  7379   0028AC  0012               	return		;funcret
  7380   0028AE                     __end_of_read_ext_eeprom:
  7381                           	callstack 0
  7382                           
  7383 ;; *************** function _i2c_write *****************
  7384 ;; Defined at:
  7385 ;;		line 62 in file "i2c.c"
  7386 ;; Parameters:    Size  Location     Type
  7387 ;;  data            1    wreg     unsigned char 
  7388 ;; Auto vars:     Size  Location     Type
  7389 ;;  data            1    0[COMRAM] unsigned char 
  7390 ;; Return value:  Size  Location     Type
  7391 ;;                  1    wreg      void 
  7392 ;; Registers used:
  7393 ;;		wreg, cstack
  7394 ;; Tracked objects:
  7395 ;;		On entry : 0/0
  7396 ;;		On exit  : 0/0
  7397 ;;		Unchanged: 0/0
  7398 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7399 ;;      Params:         0       0       0       0       0       0       0
  7400 ;;      Locals:         1       0       0       0       0       0       0
  7401 ;;      Temps:          0       0       0       0       0       0       0
  7402 ;;      Totals:         1       0       0       0       0       0       0
  7403 ;;Total ram usage:        1 bytes
  7404 ;; Hardware stack levels used: 1
  7405 ;; Hardware stack levels required when called: 2
  7406 ;; This function calls:
  7407 ;;		_i2c_idle
  7408 ;; This function is called by:
  7409 ;;		_write_ext_eeprom
  7410 ;;		_read_ext_eeprom
  7411 ;;		_write_ds1307
  7412 ;;		_read_ds1307
  7413 ;; This function uses a non-reentrant model
  7414 ;;
  7415                           
  7416                           	psect	text29
  7417   0029D0                     __ptext29:
  7418                           	callstack 0
  7419   0029D0                     _i2c_write:
  7420                           	callstack 26
  7421                           
  7422                           ;incstack = 0
  7423                           ;i2c_write@data stored from wreg
  7424   0029D0  6E01               	movwf	i2c_write@data^0,c
  7425   0029D2                     
  7426                           ;i2c.c: 62: void i2c_write(unsigned char data);i2c.c: 63: {;i2c.c: 64:  SSPBUF = data;
  7427   0029D2  C001  FFC9         	movff	i2c_write@data,4041	;volatile
  7428   0029D6                     
  7429                           ;i2c.c: 65:  i2c_idle();
  7430   0029D6  ECDF  F014         	call	_i2c_idle	;wreg free
  7431   0029DA  0012               	return		;funcret
  7432   0029DC                     __end_of_i2c_write:
  7433                           	callstack 0
  7434                           
  7435 ;; *************** function _i2c_stop *****************
  7436 ;; Defined at:
  7437 ;;		line 48 in file "i2c.c"
  7438 ;; Parameters:    Size  Location     Type
  7439 ;;		None
  7440 ;; Auto vars:     Size  Location     Type
  7441 ;;		None
  7442 ;; Return value:  Size  Location     Type
  7443 ;;                  1    wreg      void 
  7444 ;; Registers used:
  7445 ;;		cstack
  7446 ;; Tracked objects:
  7447 ;;		On entry : 0/0
  7448 ;;		On exit  : 0/0
  7449 ;;		Unchanged: 0/0
  7450 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7451 ;;      Params:         0       0       0       0       0       0       0
  7452 ;;      Locals:         0       0       0       0       0       0       0
  7453 ;;      Temps:          0       0       0       0       0       0       0
  7454 ;;      Totals:         0       0       0       0       0       0       0
  7455 ;;Total ram usage:        0 bytes
  7456 ;; Hardware stack levels used: 1
  7457 ;; Hardware stack levels required when called: 2
  7458 ;; This function calls:
  7459 ;;		_i2c_idle
  7460 ;; This function is called by:
  7461 ;;		_write_ext_eeprom
  7462 ;;		_read_ext_eeprom
  7463 ;;		_write_ds1307
  7464 ;;		_read_ds1307
  7465 ;; This function uses a non-reentrant model
  7466 ;;
  7467                           
  7468                           	psect	text30
  7469   0029E8                     __ptext30:
  7470                           	callstack 0
  7471   0029E8                     _i2c_stop:
  7472                           	callstack 26
  7473   0029E8                     
  7474                           ;i2c.c: 50:  PEN = 1;
  7475   0029E8  84C5               	bsf	4037,2,c	;volatile
  7476   0029EA                     
  7477                           ;i2c.c: 51:  i2c_idle();
  7478   0029EA  ECDF  F014         	call	_i2c_idle	;wreg free
  7479   0029EE  0012               	return		;funcret
  7480   0029F0                     __end_of_i2c_stop:
  7481                           	callstack 0
  7482                           
  7483 ;; *************** function _i2c_start *****************
  7484 ;; Defined at:
  7485 ;;		line 41 in file "i2c.c"
  7486 ;; Parameters:    Size  Location     Type
  7487 ;;		None
  7488 ;; Auto vars:     Size  Location     Type
  7489 ;;		None
  7490 ;; Return value:  Size  Location     Type
  7491 ;;                  1    wreg      void 
  7492 ;; Registers used:
  7493 ;;		cstack
  7494 ;; Tracked objects:
  7495 ;;		On entry : 0/0
  7496 ;;		On exit  : 0/0
  7497 ;;		Unchanged: 0/0
  7498 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7499 ;;      Params:         0       0       0       0       0       0       0
  7500 ;;      Locals:         0       0       0       0       0       0       0
  7501 ;;      Temps:          0       0       0       0       0       0       0
  7502 ;;      Totals:         0       0       0       0       0       0       0
  7503 ;;Total ram usage:        0 bytes
  7504 ;; Hardware stack levels used: 1
  7505 ;; Hardware stack levels required when called: 2
  7506 ;; This function calls:
  7507 ;;		_i2c_idle
  7508 ;; This function is called by:
  7509 ;;		_write_ext_eeprom
  7510 ;;		_read_ext_eeprom
  7511 ;;		_write_ds1307
  7512 ;;		_read_ds1307
  7513 ;; This function uses a non-reentrant model
  7514 ;;
  7515                           
  7516                           	psect	text31
  7517   0029F0                     __ptext31:
  7518                           	callstack 0
  7519   0029F0                     _i2c_start:
  7520                           	callstack 26
  7521   0029F0                     
  7522                           ;i2c.c: 43:  SEN = 1;
  7523   0029F0  80C5               	bsf	4037,0,c	;volatile
  7524   0029F2                     
  7525                           ;i2c.c: 44:  i2c_idle();
  7526   0029F2  ECDF  F014         	call	_i2c_idle	;wreg free
  7527   0029F6  0012               	return		;funcret
  7528   0029F8                     __end_of_i2c_start:
  7529                           	callstack 0
  7530                           
  7531 ;; *************** function _i2c_rep_start *****************
  7532 ;; Defined at:
  7533 ;;		line 55 in file "i2c.c"
  7534 ;; Parameters:    Size  Location     Type
  7535 ;;		None
  7536 ;; Auto vars:     Size  Location     Type
  7537 ;;		None
  7538 ;; Return value:  Size  Location     Type
  7539 ;;                  1    wreg      void 
  7540 ;; Registers used:
  7541 ;;		cstack
  7542 ;; Tracked objects:
  7543 ;;		On entry : 0/0
  7544 ;;		On exit  : 0/0
  7545 ;;		Unchanged: 0/0
  7546 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7547 ;;      Params:         0       0       0       0       0       0       0
  7548 ;;      Locals:         0       0       0       0       0       0       0
  7549 ;;      Temps:          0       0       0       0       0       0       0
  7550 ;;      Totals:         0       0       0       0       0       0       0
  7551 ;;Total ram usage:        0 bytes
  7552 ;; Hardware stack levels used: 1
  7553 ;; Hardware stack levels required when called: 2
  7554 ;; This function calls:
  7555 ;;		_i2c_idle
  7556 ;; This function is called by:
  7557 ;;		_read_ext_eeprom
  7558 ;;		_read_ds1307
  7559 ;; This function uses a non-reentrant model
  7560 ;;
  7561                           
  7562                           	psect	text32
  7563   0029F8                     __ptext32:
  7564                           	callstack 0
  7565   0029F8                     _i2c_rep_start:
  7566                           	callstack 26
  7567   0029F8                     
  7568                           ;i2c.c: 57:  RSEN = 1;
  7569   0029F8  82C5               	bsf	4037,1,c	;volatile
  7570   0029FA                     
  7571                           ;i2c.c: 58:  i2c_idle();
  7572   0029FA  ECDF  F014         	call	_i2c_idle	;wreg free
  7573   0029FE  0012               	return		;funcret
  7574   002A00                     __end_of_i2c_rep_start:
  7575                           	callstack 0
  7576                           
  7577 ;; *************** function _i2c_read *****************
  7578 ;; Defined at:
  7579 ;;		line 83 in file "i2c.c"
  7580 ;; Parameters:    Size  Location     Type
  7581 ;;		None
  7582 ;; Auto vars:     Size  Location     Type
  7583 ;;		None
  7584 ;; Return value:  Size  Location     Type
  7585 ;;                  1    wreg      unsigned char 
  7586 ;; Registers used:
  7587 ;;		wreg, status,2, cstack
  7588 ;; Tracked objects:
  7589 ;;		On entry : 0/0
  7590 ;;		On exit  : 0/0
  7591 ;;		Unchanged: 0/0
  7592 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7593 ;;      Params:         0       0       0       0       0       0       0
  7594 ;;      Locals:         0       0       0       0       0       0       0
  7595 ;;      Temps:          0       0       0       0       0       0       0
  7596 ;;      Totals:         0       0       0       0       0       0       0
  7597 ;;Total ram usage:        0 bytes
  7598 ;; Hardware stack levels used: 1
  7599 ;; Hardware stack levels required when called: 3
  7600 ;; This function calls:
  7601 ;;		_i2c_no_ack
  7602 ;;		_i2c_rx_mode
  7603 ;; This function is called by:
  7604 ;;		_read_ext_eeprom
  7605 ;;		_read_ds1307
  7606 ;; This function uses a non-reentrant model
  7607 ;;
  7608                           
  7609                           	psect	text33
  7610   0029DC                     __ptext33:
  7611                           	callstack 0
  7612   0029DC                     _i2c_read:
  7613                           	callstack 25
  7614   0029DC                     
  7615                           ;i2c.c: 85:  i2c_rx_mode();
  7616   0029DC  EC00  F015         	call	_i2c_rx_mode	;wreg free
  7617                           
  7618                           ;i2c.c: 86:  i2c_no_ack();
  7619   0029E0  EC04  F015         	call	_i2c_no_ack	;wreg free
  7620   0029E4                     
  7621                           ;i2c.c: 88:  return SSPBUF;
  7622   0029E4  50C9               	movf	201,w,c	;volatile
  7623   0029E6  0012               	return		;funcret
  7624   0029E8                     __end_of_i2c_read:
  7625                           	callstack 0
  7626                           
  7627 ;; *************** function _i2c_rx_mode *****************
  7628 ;; Defined at:
  7629 ;;		line 69 in file "i2c.c"
  7630 ;; Parameters:    Size  Location     Type
  7631 ;;		None
  7632 ;; Auto vars:     Size  Location     Type
  7633 ;;		None
  7634 ;; Return value:  Size  Location     Type
  7635 ;;                  1    wreg      void 
  7636 ;; Registers used:
  7637 ;;		cstack
  7638 ;; Tracked objects:
  7639 ;;		On entry : 0/0
  7640 ;;		On exit  : 0/0
  7641 ;;		Unchanged: 0/0
  7642 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7643 ;;      Params:         0       0       0       0       0       0       0
  7644 ;;      Locals:         0       0       0       0       0       0       0
  7645 ;;      Temps:          0       0       0       0       0       0       0
  7646 ;;      Totals:         0       0       0       0       0       0       0
  7647 ;;Total ram usage:        0 bytes
  7648 ;; Hardware stack levels used: 1
  7649 ;; Hardware stack levels required when called: 2
  7650 ;; This function calls:
  7651 ;;		_i2c_idle
  7652 ;; This function is called by:
  7653 ;;		_i2c_read
  7654 ;; This function uses a non-reentrant model
  7655 ;;
  7656                           
  7657                           	psect	text34
  7658   002A00                     __ptext34:
  7659                           	callstack 0
  7660   002A00                     _i2c_rx_mode:
  7661                           	callstack 25
  7662   002A00                     
  7663                           ;i2c.c: 71:  RCEN = 1;
  7664   002A00  86C5               	bsf	4037,3,c	;volatile
  7665   002A02                     
  7666                           ;i2c.c: 72:  i2c_idle();
  7667   002A02  ECDF  F014         	call	_i2c_idle	;wreg free
  7668   002A06  0012               	return		;funcret
  7669   002A08                     __end_of_i2c_rx_mode:
  7670                           	callstack 0
  7671                           
  7672 ;; *************** function _i2c_idle *****************
  7673 ;; Defined at:
  7674 ;;		line 24 in file "i2c.c"
  7675 ;; Parameters:    Size  Location     Type
  7676 ;;		None
  7677 ;; Auto vars:     Size  Location     Type
  7678 ;;		None
  7679 ;; Return value:  Size  Location     Type
  7680 ;;                  1    wreg      void 
  7681 ;; Registers used:
  7682 ;;		None
  7683 ;; Tracked objects:
  7684 ;;		On entry : 0/0
  7685 ;;		On exit  : 0/0
  7686 ;;		Unchanged: 0/0
  7687 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7688 ;;      Params:         0       0       0       0       0       0       0
  7689 ;;      Locals:         0       0       0       0       0       0       0
  7690 ;;      Temps:          0       0       0       0       0       0       0
  7691 ;;      Totals:         0       0       0       0       0       0       0
  7692 ;;Total ram usage:        0 bytes
  7693 ;; Hardware stack levels used: 1
  7694 ;; Hardware stack levels required when called: 1
  7695 ;; This function calls:
  7696 ;;		Nothing
  7697 ;; This function is called by:
  7698 ;;		_i2c_start
  7699 ;;		_i2c_stop
  7700 ;;		_i2c_rep_start
  7701 ;;		_i2c_write
  7702 ;;		_i2c_rx_mode
  7703 ;; This function uses a non-reentrant model
  7704 ;;
  7705                           
  7706                           	psect	text35
  7707   0029BE                     __ptext35:
  7708                           	callstack 0
  7709   0029BE                     _i2c_idle:
  7710                           	callstack 26
  7711   0029BE                     l709:
  7712   0029BE  A69E               	btfss	3998,3,c	;volatile
  7713   0029C0  EFE4  F014         	goto	u2071
  7714   0029C4  EFE6  F014         	goto	u2070
  7715   0029C8                     u2071:
  7716   0029C8  EFDF  F014         	goto	l709
  7717   0029CC                     u2070:
  7718   0029CC                     
  7719                           ;i2c.c: 29:  SSPIF = 0;
  7720   0029CC  969E               	bcf	3998,3,c	;volatile
  7721   0029CE  0012               	return		;funcret
  7722   0029D0                     __end_of_i2c_idle:
  7723                           	callstack 0
  7724                           
  7725 ;; *************** function _i2c_no_ack *****************
  7726 ;; Defined at:
  7727 ;;		line 76 in file "i2c.c"
  7728 ;; Parameters:    Size  Location     Type
  7729 ;;		None
  7730 ;; Auto vars:     Size  Location     Type
  7731 ;;		None
  7732 ;; Return value:  Size  Location     Type
  7733 ;;                  1    wreg      void 
  7734 ;; Registers used:
  7735 ;;		None
  7736 ;; Tracked objects:
  7737 ;;		On entry : 0/0
  7738 ;;		On exit  : 0/0
  7739 ;;		Unchanged: 0/0
  7740 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7741 ;;      Params:         0       0       0       0       0       0       0
  7742 ;;      Locals:         0       0       0       0       0       0       0
  7743 ;;      Temps:          0       0       0       0       0       0       0
  7744 ;;      Totals:         0       0       0       0       0       0       0
  7745 ;;Total ram usage:        0 bytes
  7746 ;; Hardware stack levels used: 1
  7747 ;; Hardware stack levels required when called: 1
  7748 ;; This function calls:
  7749 ;;		Nothing
  7750 ;; This function is called by:
  7751 ;;		_i2c_read
  7752 ;; This function uses a non-reentrant model
  7753 ;;
  7754                           
  7755                           	psect	text36
  7756   002A08                     __ptext36:
  7757                           	callstack 0
  7758   002A08                     _i2c_no_ack:
  7759                           	callstack 26
  7760   002A08                     
  7761                           ;i2c.c: 78:  ACKDT = 1;
  7762   002A08  8AC5               	bsf	4037,5,c	;volatile
  7763                           
  7764                           ;i2c.c: 79:  ACKEN = 1;
  7765   002A0A  88C5               	bsf	4037,4,c	;volatile
  7766   002A0C  0012               	return		;funcret
  7767   002A0E                     __end_of_i2c_no_ack:
  7768                           	callstack 0
  7769                           
  7770 ;; *************** function ___awmod *****************
  7771 ;; Defined at:
  7772 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\awmod.c"
  7773 ;; Parameters:    Size  Location     Type
  7774 ;;  dividend        2    0[COMRAM] int 
  7775 ;;  divisor         2    2[COMRAM] int 
  7776 ;; Auto vars:     Size  Location     Type
  7777 ;;  sign            1    5[COMRAM] unsigned char 
  7778 ;;  counter         1    4[COMRAM] unsigned char 
  7779 ;; Return value:  Size  Location     Type
  7780 ;;                  2    0[COMRAM] int 
  7781 ;; Registers used:
  7782 ;;		wreg, status,2, status,0
  7783 ;; Tracked objects:
  7784 ;;		On entry : 0/0
  7785 ;;		On exit  : 0/0
  7786 ;;		Unchanged: 0/0
  7787 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7788 ;;      Params:         4       0       0       0       0       0       0
  7789 ;;      Locals:         2       0       0       0       0       0       0
  7790 ;;      Temps:          0       0       0       0       0       0       0
  7791 ;;      Totals:         6       0       0       0       0       0       0
  7792 ;;Total ram usage:        6 bytes
  7793 ;; Hardware stack levels used: 1
  7794 ;; Hardware stack levels required when called: 1
  7795 ;; This function calls:
  7796 ;;		Nothing
  7797 ;; This function is called by:
  7798 ;;		_main
  7799 ;;		_password
  7800 ;;		_set_time
  7801 ;;		_store_event
  7802 ;; This function uses a non-reentrant model
  7803 ;;
  7804                           
  7805                           	psect	text37
  7806   0021F4                     __ptext37:
  7807                           	callstack 0
  7808   0021F4                     ___awmod:
  7809                           	callstack 28
  7810   0021F4  0E00               	movlw	0
  7811   0021F6  6E06               	movwf	___awmod@sign^0,c
  7812   0021F8  BE02               	btfsc	(___awmod@dividend+1)^0,7,c
  7813   0021FA  EF03  F011         	goto	u2310
  7814   0021FE  EF01  F011         	goto	u2311
  7815   002202                     u2311:
  7816   002202  EF09  F011         	goto	l3192
  7817   002206                     u2310:
  7818   002206  6C01               	negf	___awmod@dividend^0,c
  7819   002208  1E02               	comf	(___awmod@dividend+1)^0,f,c
  7820   00220A  B0D8               	btfsc	status,0,c
  7821   00220C  2A02               	incf	(___awmod@dividend+1)^0,f,c
  7822   00220E  0E01               	movlw	1
  7823   002210  6E06               	movwf	___awmod@sign^0,c
  7824   002212                     l3192:
  7825   002212  BE04               	btfsc	(___awmod@divisor+1)^0,7,c
  7826   002214  EF10  F011         	goto	u2320
  7827   002218  EF0E  F011         	goto	u2321
  7828   00221C                     u2321:
  7829   00221C  EF14  F011         	goto	l3196
  7830   002220                     u2320:
  7831   002220  6C03               	negf	___awmod@divisor^0,c
  7832   002222  1E04               	comf	(___awmod@divisor+1)^0,f,c
  7833   002224  B0D8               	btfsc	status,0,c
  7834   002226  2A04               	incf	(___awmod@divisor+1)^0,f,c
  7835   002228                     l3196:
  7836   002228  5003               	movf	___awmod@divisor^0,w,c
  7837   00222A  1004               	iorwf	(___awmod@divisor+1)^0,w,c
  7838   00222C  B4D8               	btfsc	status,2,c
  7839   00222E  EF1B  F011         	goto	u2331
  7840   002232  EF1D  F011         	goto	u2330
  7841   002236                     u2331:
  7842   002236  EF41  F011         	goto	l3212
  7843   00223A                     u2330:
  7844   00223A  0E01               	movlw	1
  7845   00223C  6E05               	movwf	___awmod@counter^0,c
  7846   00223E  EF25  F011         	goto	l3202
  7847   002242                     l3200:
  7848   002242  90D8               	bcf	status,0,c
  7849   002244  3603               	rlcf	___awmod@divisor^0,f,c
  7850   002246  3604               	rlcf	(___awmod@divisor+1)^0,f,c
  7851   002248  2A05               	incf	___awmod@counter^0,f,c
  7852   00224A                     l3202:
  7853   00224A  AE04               	btfss	(___awmod@divisor+1)^0,7,c
  7854   00224C  EF2A  F011         	goto	u2341
  7855   002250  EF2C  F011         	goto	u2340
  7856   002254                     u2341:
  7857   002254  EF21  F011         	goto	l3200
  7858   002258                     u2340:
  7859   002258                     l3204:
  7860   002258  5003               	movf	___awmod@divisor^0,w,c
  7861   00225A  5C01               	subwf	___awmod@dividend^0,w,c
  7862   00225C  5004               	movf	(___awmod@divisor+1)^0,w,c
  7863   00225E  5802               	subwfb	(___awmod@dividend+1)^0,w,c
  7864   002260  A0D8               	btfss	status,0,c
  7865   002262  EF35  F011         	goto	u2351
  7866   002266  EF37  F011         	goto	u2350
  7867   00226A                     u2351:
  7868   00226A  EF3B  F011         	goto	l3208
  7869   00226E                     u2350:
  7870   00226E  5003               	movf	___awmod@divisor^0,w,c
  7871   002270  5E01               	subwf	___awmod@dividend^0,f,c
  7872   002272  5004               	movf	(___awmod@divisor+1)^0,w,c
  7873   002274  5A02               	subwfb	(___awmod@dividend+1)^0,f,c
  7874   002276                     l3208:
  7875   002276  90D8               	bcf	status,0,c
  7876   002278  3204               	rrcf	(___awmod@divisor+1)^0,f,c
  7877   00227A  3203               	rrcf	___awmod@divisor^0,f,c
  7878   00227C  2E05               	decfsz	___awmod@counter^0,f,c
  7879   00227E  EF2C  F011         	goto	l3204
  7880   002282                     l3212:
  7881   002282  5006               	movf	___awmod@sign^0,w,c
  7882   002284  B4D8               	btfsc	status,2,c
  7883   002286  EF47  F011         	goto	u2361
  7884   00228A  EF49  F011         	goto	u2360
  7885   00228E                     u2361:
  7886   00228E  EF4D  F011         	goto	l3216
  7887   002292                     u2360:
  7888   002292  6C01               	negf	___awmod@dividend^0,c
  7889   002294  1E02               	comf	(___awmod@dividend+1)^0,f,c
  7890   002296  B0D8               	btfsc	status,0,c
  7891   002298  2A02               	incf	(___awmod@dividend+1)^0,f,c
  7892   00229A                     l3216:
  7893   00229A  C001  F001         	movff	___awmod@dividend,?___awmod
  7894   00229E  C002  F002         	movff	___awmod@dividend+1,?___awmod+1
  7895   0022A2  0012               	return		;funcret
  7896   0022A4                     __end_of___awmod:
  7897                           	callstack 0
  7898                           
  7899 ;; *************** function ___awdiv *****************
  7900 ;; Defined at:
  7901 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\awdiv.c"
  7902 ;; Parameters:    Size  Location     Type
  7903 ;;  dividend        2    0[COMRAM] int 
  7904 ;;  divisor         2    2[COMRAM] int 
  7905 ;; Auto vars:     Size  Location     Type
  7906 ;;  quotient        2    6[COMRAM] int 
  7907 ;;  sign            1    5[COMRAM] unsigned char 
  7908 ;;  counter         1    4[COMRAM] unsigned char 
  7909 ;; Return value:  Size  Location     Type
  7910 ;;                  2    0[COMRAM] int 
  7911 ;; Registers used:
  7912 ;;		wreg, status,2, status,0
  7913 ;; Tracked objects:
  7914 ;;		On entry : 0/0
  7915 ;;		On exit  : 0/0
  7916 ;;		Unchanged: 0/0
  7917 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7918 ;;      Params:         4       0       0       0       0       0       0
  7919 ;;      Locals:         4       0       0       0       0       0       0
  7920 ;;      Temps:          0       0       0       0       0       0       0
  7921 ;;      Totals:         8       0       0       0       0       0       0
  7922 ;;Total ram usage:        8 bytes
  7923 ;; Hardware stack levels used: 1
  7924 ;; Hardware stack levels required when called: 1
  7925 ;; This function calls:
  7926 ;;		Nothing
  7927 ;; This function is called by:
  7928 ;;		_main
  7929 ;;		_password
  7930 ;;		_set_time
  7931 ;;		_store_event
  7932 ;; This function uses a non-reentrant model
  7933 ;;
  7934                           
  7935                           	psect	text38
  7936   002130                     __ptext38:
  7937                           	callstack 0
  7938   002130                     ___awdiv:
  7939                           	callstack 28
  7940   002130  0E00               	movlw	0
  7941   002132  6E06               	movwf	___awdiv@sign^0,c
  7942   002134  BE04               	btfsc	(___awdiv@divisor+1)^0,7,c
  7943   002136  EFA1  F010         	goto	u2250
  7944   00213A  EF9F  F010         	goto	u2251
  7945   00213E                     u2251:
  7946   00213E  EFA7  F010         	goto	l3148
  7947   002142                     u2250:
  7948   002142  6C03               	negf	___awdiv@divisor^0,c
  7949   002144  1E04               	comf	(___awdiv@divisor+1)^0,f,c
  7950   002146  B0D8               	btfsc	status,0,c
  7951   002148  2A04               	incf	(___awdiv@divisor+1)^0,f,c
  7952   00214A  0E01               	movlw	1
  7953   00214C  6E06               	movwf	___awdiv@sign^0,c
  7954   00214E                     l3148:
  7955   00214E  BE02               	btfsc	(___awdiv@dividend+1)^0,7,c
  7956   002150  EFAE  F010         	goto	u2260
  7957   002154  EFAC  F010         	goto	u2261
  7958   002158                     u2261:
  7959   002158  EFB4  F010         	goto	l3154
  7960   00215C                     u2260:
  7961   00215C  6C01               	negf	___awdiv@dividend^0,c
  7962   00215E  1E02               	comf	(___awdiv@dividend+1)^0,f,c
  7963   002160  B0D8               	btfsc	status,0,c
  7964   002162  2A02               	incf	(___awdiv@dividend+1)^0,f,c
  7965   002164  0E01               	movlw	1
  7966   002166  1A06               	xorwf	___awdiv@sign^0,f,c
  7967   002168                     l3154:
  7968   002168  0E00               	movlw	0
  7969   00216A  6E08               	movwf	(___awdiv@quotient+1)^0,c
  7970   00216C  0E00               	movlw	0
  7971   00216E  6E07               	movwf	___awdiv@quotient^0,c
  7972   002170  5003               	movf	___awdiv@divisor^0,w,c
  7973   002172  1004               	iorwf	(___awdiv@divisor+1)^0,w,c
  7974   002174  B4D8               	btfsc	status,2,c
  7975   002176  EFBF  F010         	goto	u2271
  7976   00217A  EFC1  F010         	goto	u2270
  7977   00217E                     u2271:
  7978   00217E  EFE9  F010         	goto	l3176
  7979   002182                     u2270:
  7980   002182  0E01               	movlw	1
  7981   002184  6E05               	movwf	___awdiv@counter^0,c
  7982   002186  EFC9  F010         	goto	l3162
  7983   00218A                     l3160:
  7984   00218A  90D8               	bcf	status,0,c
  7985   00218C  3603               	rlcf	___awdiv@divisor^0,f,c
  7986   00218E  3604               	rlcf	(___awdiv@divisor+1)^0,f,c
  7987   002190  2A05               	incf	___awdiv@counter^0,f,c
  7988   002192                     l3162:
  7989   002192  AE04               	btfss	(___awdiv@divisor+1)^0,7,c
  7990   002194  EFCE  F010         	goto	u2281
  7991   002198  EFD0  F010         	goto	u2280
  7992   00219C                     u2281:
  7993   00219C  EFC5  F010         	goto	l3160
  7994   0021A0                     u2280:
  7995   0021A0                     l3164:
  7996   0021A0  90D8               	bcf	status,0,c
  7997   0021A2  3607               	rlcf	___awdiv@quotient^0,f,c
  7998   0021A4  3608               	rlcf	(___awdiv@quotient+1)^0,f,c
  7999   0021A6  5003               	movf	___awdiv@divisor^0,w,c
  8000   0021A8  5C01               	subwf	___awdiv@dividend^0,w,c
  8001   0021AA  5004               	movf	(___awdiv@divisor+1)^0,w,c
  8002   0021AC  5802               	subwfb	(___awdiv@dividend+1)^0,w,c
  8003   0021AE  A0D8               	btfss	status,0,c
  8004   0021B0  EFDC  F010         	goto	u2291
  8005   0021B4  EFDE  F010         	goto	u2290
  8006   0021B8                     u2291:
  8007   0021B8  EFE3  F010         	goto	l3172
  8008   0021BC                     u2290:
  8009   0021BC  5003               	movf	___awdiv@divisor^0,w,c
  8010   0021BE  5E01               	subwf	___awdiv@dividend^0,f,c
  8011   0021C0  5004               	movf	(___awdiv@divisor+1)^0,w,c
  8012   0021C2  5A02               	subwfb	(___awdiv@dividend+1)^0,f,c
  8013   0021C4  8007               	bsf	___awdiv@quotient^0,0,c
  8014   0021C6                     l3172:
  8015   0021C6  90D8               	bcf	status,0,c
  8016   0021C8  3204               	rrcf	(___awdiv@divisor+1)^0,f,c
  8017   0021CA  3203               	rrcf	___awdiv@divisor^0,f,c
  8018   0021CC  2E05               	decfsz	___awdiv@counter^0,f,c
  8019   0021CE  EFD0  F010         	goto	l3164
  8020   0021D2                     l3176:
  8021   0021D2  5006               	movf	___awdiv@sign^0,w,c
  8022   0021D4  B4D8               	btfsc	status,2,c
  8023   0021D6  EFEF  F010         	goto	u2301
  8024   0021DA  EFF1  F010         	goto	u2300
  8025   0021DE                     u2301:
  8026   0021DE  EFF5  F010         	goto	l3180
  8027   0021E2                     u2300:
  8028   0021E2  6C07               	negf	___awdiv@quotient^0,c
  8029   0021E4  1E08               	comf	(___awdiv@quotient+1)^0,f,c
  8030   0021E6  B0D8               	btfsc	status,0,c
  8031   0021E8  2A08               	incf	(___awdiv@quotient+1)^0,f,c
  8032   0021EA                     l3180:
  8033   0021EA  C007  F001         	movff	___awdiv@quotient,?___awdiv
  8034   0021EE  C008  F002         	movff	___awdiv@quotient+1,?___awdiv+1
  8035   0021F2  0012               	return		;funcret
  8036   0021F4                     __end_of___awdiv:
  8037                           	callstack 0
  8038                           
  8039 ;; *************** function _clcd_putch *****************
  8040 ;; Defined at:
  8041 ;;		line 69 in file "clcd.c"
  8042 ;; Parameters:    Size  Location     Type
  8043 ;;  data            1    wreg     const unsigned char 
  8044 ;;  addr            1    8[COMRAM] unsigned char 
  8045 ;; Auto vars:     Size  Location     Type
  8046 ;;  data            1    9[COMRAM] const unsigned char 
  8047 ;; Return value:  Size  Location     Type
  8048 ;;                  1    wreg      void 
  8049 ;; Registers used:
  8050 ;;		wreg, status,2, cstack
  8051 ;; Tracked objects:
  8052 ;;		On entry : 0/0
  8053 ;;		On exit  : 0/0
  8054 ;;		Unchanged: 0/0
  8055 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8056 ;;      Params:         1       0       0       0       0       0       0
  8057 ;;      Locals:         1       0       0       0       0       0       0
  8058 ;;      Temps:          0       0       0       0       0       0       0
  8059 ;;      Totals:         2       0       0       0       0       0       0
  8060 ;;Total ram usage:        2 bytes
  8061 ;; Hardware stack levels used: 1
  8062 ;; Hardware stack levels required when called: 2
  8063 ;; This function calls:
  8064 ;;		_clcd_write
  8065 ;; This function is called by:
  8066 ;;		_change_pass
  8067 ;;		_dashboard
  8068 ;;		_menu
  8069 ;;		_password
  8070 ;;		_set_time
  8071 ;;		_view_log
  8072 ;; This function uses a non-reentrant model
  8073 ;;
  8074                           
  8075                           	psect	text39
  8076   00296A                     __ptext39:
  8077                           	callstack 0
  8078   00296A                     _clcd_putch:
  8079                           	callstack 27
  8080                           
  8081                           ;incstack = 0
  8082                           ;clcd_putch@data stored from wreg
  8083   00296A  6E0A               	movwf	clcd_putch@data^0,c
  8084   00296C                     
  8085                           ;clcd.c: 69: void clcd_putch(const unsigned char data, unsigned char addr);clcd.c: 70: {
      +                          ;clcd.c: 71:  clcd_write(addr, 0);
  8086   00296C  0E00               	movlw	0
  8087   00296E  6E01               	movwf	clcd_write@control_bit^0,c
  8088   002970  5009               	movf	clcd_putch@addr^0,w,c
  8089   002972  ECFA  F013         	call	_clcd_write
  8090                           
  8091                           ;clcd.c: 72:  clcd_write(data, 1);
  8092   002976  0E01               	movlw	1
  8093   002978  6E01               	movwf	clcd_write@control_bit^0,c
  8094   00297A  500A               	movf	clcd_putch@data^0,w,c
  8095   00297C  ECFA  F013         	call	_clcd_write
  8096   002980  0012               	return		;funcret
  8097   002982                     __end_of_clcd_putch:
  8098                           	callstack 0
  8099                           
  8100 ;; *************** function _clcd_print *****************
  8101 ;; Defined at:
  8102 ;;		line 60 in file "clcd.c"
  8103 ;; Parameters:    Size  Location     Type
  8104 ;;  data            2    2[COMRAM] PTR const unsigned char 
  8105 ;;		 -> STR_34(17), STR_33(3), STR_32(3), STR_31(3), 
  8106 ;;		 -> STR_30(9), STR_29(17), STR_28(17), STR_27(13), 
  8107 ;;		 -> STR_26(13), STR_25(5), STR_24(9), STR_23(17), 
  8108 ;;		 -> STR_22(17), STR_21(17), STR_20(17), STR_19(17), 
  8109 ;;		 -> STR_18(17), STR_17(17), STR_16(17), STR_15(17), 
  8110 ;;		 -> menu_op(85), STR_12(17), STR_11(17), ev(39), 
  8111 ;;		 -> STR_10(17), STR_9(17), STR_8(17), STR_7(17), 
  8112 ;;		 -> STR_6(17), STR_5(17), STR_4(17), STR_3(17), 
  8113 ;;		 -> STR_2(17), STR_1(17), time(9), 
  8114 ;;  addr            1    4[COMRAM] unsigned char 
  8115 ;; Auto vars:     Size  Location     Type
  8116 ;;		None
  8117 ;; Return value:  Size  Location     Type
  8118 ;;                  1    wreg      void 
  8119 ;; Registers used:
  8120 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  8121 ;; Tracked objects:
  8122 ;;		On entry : 0/0
  8123 ;;		On exit  : 0/0
  8124 ;;		Unchanged: 0/0
  8125 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8126 ;;      Params:         3       0       0       0       0       0       0
  8127 ;;      Locals:         0       0       0       0       0       0       0
  8128 ;;      Temps:          0       0       0       0       0       0       0
  8129 ;;      Totals:         3       0       0       0       0       0       0
  8130 ;;Total ram usage:        3 bytes
  8131 ;; Hardware stack levels used: 1
  8132 ;; Hardware stack levels required when called: 2
  8133 ;; This function calls:
  8134 ;;		_clcd_write
  8135 ;; This function is called by:
  8136 ;;		_change_pass
  8137 ;;		_clear_log
  8138 ;;		_dashboard
  8139 ;;		_download_log
  8140 ;;		_menu
  8141 ;;		_password
  8142 ;;		_set_time
  8143 ;;		_view_log
  8144 ;; This function uses a non-reentrant model
  8145 ;;
  8146                           
  8147                           	psect	text40
  8148   00254C                     __ptext40:
  8149                           	callstack 0
  8150   00254C                     _clcd_print:
  8151                           	callstack 27
  8152   00254C                     
  8153                           ;clcd.c: 60: void clcd_print(const unsigned char *data, unsigned char addr);clcd.c: 61: 
      +                          {;clcd.c: 62:  clcd_write(addr, 0);
  8154   00254C  0E00               	movlw	0
  8155   00254E  6E01               	movwf	clcd_write@control_bit^0,c
  8156   002550  5005               	movf	clcd_print@addr^0,w,c
  8157   002552  ECFA  F013         	call	_clcd_write
  8158                           
  8159                           ;clcd.c: 63:  while (*data != '\0')
  8160   002556  EFC3  F012         	goto	l3394
  8161   00255A                     l3390:
  8162                           
  8163                           ;clcd.c: 64:  {;clcd.c: 65:   clcd_write(*data++, 1);
  8164   00255A  0E01               	movlw	1
  8165   00255C  6E01               	movwf	clcd_write@control_bit^0,c
  8166   00255E  C003  FFF6         	movff	clcd_print@data,tblptrl
  8167   002562  C004  FFF7         	movff	clcd_print@data+1,tblptrh
  8168   002566  6AF8               	clrf	tblptru,c
  8169   002568  0E05               	movlw	(high __ramtop+-1)
  8170   00256A  64F7               	cpfsgt	tblptrh,c
  8171   00256C  D003               	bra	u2477
  8172   00256E  0008               	tblrd		*
  8173   002570  50F5               	movf	tablat,w,c
  8174   002572  D005               	bra	u2470
  8175   002574                     u2477:
  8176   002574  CFF6 FFE1          	movff	tblptrl,fsr1l
  8177   002578  CFF7 FFE2          	movff	tblptrh,fsr1h
  8178   00257C  50E7               	movf	indf1,w,c
  8179   00257E                     u2470:
  8180   00257E  ECFA  F013         	call	_clcd_write
  8181   002582  4A03               	infsnz	clcd_print@data^0,f,c
  8182   002584  2A04               	incf	(clcd_print@data+1)^0,f,c
  8183   002586                     l3394:
  8184                           
  8185                           ;clcd.c: 63:  while (*data != '\0')
  8186   002586  C003  FFF6         	movff	clcd_print@data,tblptrl
  8187   00258A  C004  FFF7         	movff	clcd_print@data+1,tblptrh
  8188   00258E  6AF8               	clrf	tblptru,c
  8189   002590  0E05               	movlw	(high __ramtop+-1)
  8190   002592  64F7               	cpfsgt	tblptrh,c
  8191   002594  D003               	bra	u2487
  8192   002596  0008               	tblrd		*
  8193   002598  50F5               	movf	tablat,w,c
  8194   00259A  D005               	bra	u2480
  8195   00259C                     u2487:
  8196   00259C  CFF6 FFE1          	movff	tblptrl,fsr1l
  8197   0025A0  CFF7 FFE2          	movff	tblptrh,fsr1h
  8198   0025A4  50E7               	movf	indf1,w,c
  8199   0025A6                     u2480:
  8200   0025A6  0900               	iorlw	0
  8201   0025A8  A4D8               	btfss	status,2,c
  8202   0025AA  EFD9  F012         	goto	u2491
  8203   0025AE  EFDB  F012         	goto	u2490
  8204   0025B2                     u2491:
  8205   0025B2  EFAD  F012         	goto	l3390
  8206   0025B6                     u2490:
  8207   0025B6  0012               	return		;funcret
  8208   0025B8                     __end_of_clcd_print:
  8209                           	callstack 0
  8210                           
  8211 ;; *************** function _clcd_write *****************
  8212 ;; Defined at:
  8213 ;;		line 5 in file "clcd.c"
  8214 ;; Parameters:    Size  Location     Type
  8215 ;;  byte            1    wreg     unsigned char 
  8216 ;;  control_bit     1    0[COMRAM] unsigned char 
  8217 ;; Auto vars:     Size  Location     Type
  8218 ;;  byte            1    1[COMRAM] unsigned char 
  8219 ;; Return value:  Size  Location     Type
  8220 ;;                  1    wreg      void 
  8221 ;; Registers used:
  8222 ;;		wreg
  8223 ;; Tracked objects:
  8224 ;;		On entry : 0/0
  8225 ;;		On exit  : 0/0
  8226 ;;		Unchanged: 0/0
  8227 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8228 ;;      Params:         1       0       0       0       0       0       0
  8229 ;;      Locals:         1       0       0       0       0       0       0
  8230 ;;      Temps:          0       0       0       0       0       0       0
  8231 ;;      Totals:         2       0       0       0       0       0       0
  8232 ;;Total ram usage:        2 bytes
  8233 ;; Hardware stack levels used: 1
  8234 ;; Hardware stack levels required when called: 1
  8235 ;; This function calls:
  8236 ;;		Nothing
  8237 ;; This function is called by:
  8238 ;;		_change_pass
  8239 ;;		_clear_log
  8240 ;;		_dashboard
  8241 ;;		_download_log
  8242 ;;		_menu
  8243 ;;		_password
  8244 ;;		_set_time
  8245 ;;		_view_log
  8246 ;;		_init_clcd
  8247 ;;		_clcd_print
  8248 ;;		_clcd_putch
  8249 ;; This function uses a non-reentrant model
  8250 ;;
  8251                           
  8252                           	psect	text41
  8253   0027F4                     __ptext41:
  8254                           	callstack 0
  8255   0027F4                     _clcd_write:
  8256                           	callstack 28
  8257                           
  8258                           ;incstack = 0
  8259                           ;clcd_write@byte stored from wreg
  8260   0027F4  6E02               	movwf	clcd_write@byte^0,c
  8261   0027F6                     
  8262                           ;clcd.c: 5: void clcd_write(unsigned char byte, unsigned char control_bit);clcd.c: 6: {;
      +                          clcd.c: 8:  RC1 = control_bit;
  8263   0027F6  B001               	btfsc	clcd_write@control_bit^0,0,c
  8264   0027F8  EF00  F014         	goto	u2081
  8265   0027FC  EF03  F014         	goto	u2080
  8266   002800                     u2081:
  8267   002800  8282               	bsf	3970,1,c	;volatile
  8268   002802  EF04  F014         	goto	u2095
  8269   002806                     u2080:
  8270   002806  9282               	bcf	3970,1,c	;volatile
  8271   002808                     u2095:
  8272   002808                     
  8273                           ;clcd.c: 9:  PORTD = byte;
  8274   002808  C002  FF83         	movff	clcd_write@byte,3971	;volatile
  8275   00280C                     
  8276                           ;clcd.c: 12:  RC2 = 1;
  8277   00280C  8482               	bsf	3970,2,c	;volatile
  8278   00280E                     
  8279                           ;clcd.c: 13:  RC2 = 0;
  8280   00280E  9482               	bcf	3970,2,c	;volatile
  8281   002810                     
  8282                           ;clcd.c: 15:  TRISD7 = 0xFF;
  8283   002810  8E95               	bsf	3989,7,c	;volatile
  8284   002812                     
  8285                           ;clcd.c: 16:  RC0 = 1;
  8286   002812  8082               	bsf	3970,0,c	;volatile
  8287   002814                     
  8288                           ;clcd.c: 17:  RC1 = 0;
  8289   002814  9282               	bcf	3970,1,c	;volatile
  8290   002816                     l3034:
  8291                           
  8292                           ;clcd.c: 20:  {;clcd.c: 21:   RC2 = 1;
  8293   002816  8482               	bsf	3970,2,c	;volatile
  8294   002818                     
  8295                           ;clcd.c: 22:   RC2 = 0;
  8296   002818  9482               	bcf	3970,2,c	;volatile
  8297   00281A                     
  8298                           ;clcd.c: 23:  } while (RD7);
  8299   00281A  BE83               	btfsc	3971,7,c	;volatile
  8300   00281C  EF12  F014         	goto	u2101
  8301   002820  EF14  F014         	goto	u2100
  8302   002824                     u2101:
  8303   002824  EF0B  F014         	goto	l3034
  8304   002828                     u2100:
  8305   002828                     
  8306                           ;clcd.c: 25:  RC0 = 0;
  8307   002828  9082               	bcf	3970,0,c	;volatile
  8308                           
  8309                           ;clcd.c: 26:  TRISD7 = 0x00;
  8310   00282A  9E95               	bcf	3989,7,c	;volatile
  8311   00282C  0012               	return		;funcret
  8312   00282E                     __end_of_clcd_write:
  8313                           	callstack 0
  8314                           
  8315 ;; *************** function ___xxtofl *****************
  8316 ;; Defined at:
  8317 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\xxtofl.c"
  8318 ;; Parameters:    Size  Location     Type
  8319 ;;  sign            1    wreg     unsigned char 
  8320 ;;  val             4    0[COMRAM] long 
  8321 ;; Auto vars:     Size  Location     Type
  8322 ;;  sign            1    8[COMRAM] unsigned char 
  8323 ;;  arg             4   10[COMRAM] unsigned long 
  8324 ;;  exp             1    9[COMRAM] unsigned char 
  8325 ;; Return value:  Size  Location     Type
  8326 ;;                  4    0[COMRAM] unsigned char 
  8327 ;; Registers used:
  8328 ;;		wreg, status,2, status,0
  8329 ;; Tracked objects:
  8330 ;;		On entry : 0/0
  8331 ;;		On exit  : 0/0
  8332 ;;		Unchanged: 0/0
  8333 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8334 ;;      Params:         4       0       0       0       0       0       0
  8335 ;;      Locals:         6       0       0       0       0       0       0
  8336 ;;      Temps:          4       0       0       0       0       0       0
  8337 ;;      Totals:        14       0       0       0       0       0       0
  8338 ;;Total ram usage:       14 bytes
  8339 ;; Hardware stack levels used: 1
  8340 ;; Hardware stack levels required when called: 1
  8341 ;; This function calls:
  8342 ;;		Nothing
  8343 ;; This function is called by:
  8344 ;;		_main
  8345 ;; This function uses a non-reentrant model
  8346 ;;
  8347                           
  8348                           	psect	text42
  8349   001C00                     __ptext42:
  8350                           	callstack 0
  8351   001C00                     ___xxtofl:
  8352                           	callstack 29
  8353                           
  8354                           ;incstack = 0
  8355                           ;___xxtofl@sign stored from wreg
  8356   001C00  6E09               	movwf	___xxtofl@sign^0,c
  8357   001C02  5009               	movf	___xxtofl@sign^0,w,c
  8358   001C04  B4D8               	btfsc	status,2,c
  8359   001C06  EF07  F00E         	goto	u3811
  8360   001C0A  EF09  F00E         	goto	u3810
  8361   001C0E                     u3811:
  8362   001C0E  EF2B  F00E         	goto	l1474
  8363   001C12                     u3810:
  8364   001C12  BE04               	btfsc	(___xxtofl@val+3)^0,7,c
  8365   001C14  EF10  F00E         	goto	u3820
  8366   001C18  EF0E  F00E         	goto	u3821
  8367   001C1C                     u3821:
  8368   001C1C  EF2B  F00E         	goto	l1474
  8369   001C20                     u3820:
  8370   001C20  C001  F005         	movff	___xxtofl@val,??___xxtofl
  8371   001C24  C002  F006         	movff	___xxtofl@val+1,??___xxtofl+1
  8372   001C28  C003  F007         	movff	___xxtofl@val+2,??___xxtofl+2
  8373   001C2C  C004  F008         	movff	___xxtofl@val+3,??___xxtofl+3
  8374   001C30  1E05               	comf	??___xxtofl^0,f,c
  8375   001C32  1E06               	comf	(??___xxtofl+1)^0,f,c
  8376   001C34  1E07               	comf	(??___xxtofl+2)^0,f,c
  8377   001C36  1E08               	comf	(??___xxtofl+3)^0,f,c
  8378   001C38  2A05               	incf	??___xxtofl^0,f,c
  8379   001C3A  0E00               	movlw	0
  8380   001C3C  2206               	addwfc	(??___xxtofl+1)^0,f,c
  8381   001C3E  2207               	addwfc	(??___xxtofl+2)^0,f,c
  8382   001C40  2208               	addwfc	(??___xxtofl+3)^0,f,c
  8383   001C42  C005  F00B         	movff	??___xxtofl,___xxtofl@arg
  8384   001C46  C006  F00C         	movff	??___xxtofl+1,___xxtofl@arg+1
  8385   001C4A  C007  F00D         	movff	??___xxtofl+2,___xxtofl@arg+2
  8386   001C4E  C008  F00E         	movff	??___xxtofl+3,___xxtofl@arg+3
  8387   001C52  EF33  F00E         	goto	l4276
  8388   001C56                     l1474:
  8389   001C56  C001  F00B         	movff	___xxtofl@val,___xxtofl@arg
  8390   001C5A  C002  F00C         	movff	___xxtofl@val+1,___xxtofl@arg+1
  8391   001C5E  C003  F00D         	movff	___xxtofl@val+2,___xxtofl@arg+2
  8392   001C62  C004  F00E         	movff	___xxtofl@val+3,___xxtofl@arg+3
  8393   001C66                     l4276:
  8394   001C66  5001               	movf	___xxtofl@val^0,w,c
  8395   001C68  1002               	iorwf	(___xxtofl@val+1)^0,w,c
  8396   001C6A  1003               	iorwf	(___xxtofl@val+2)^0,w,c
  8397   001C6C  1004               	iorwf	(___xxtofl@val+3)^0,w,c
  8398   001C6E  A4D8               	btfss	status,2,c
  8399   001C70  EF3C  F00E         	goto	u3831
  8400   001C74  EF3E  F00E         	goto	u3830
  8401   001C78                     u3831:
  8402   001C78  EF48  F00E         	goto	l4282
  8403   001C7C                     u3830:
  8404   001C7C  0E00               	movlw	0
  8405   001C7E  6E01               	movwf	?___xxtofl^0,c
  8406   001C80  0E00               	movlw	0
  8407   001C82  6E02               	movwf	(?___xxtofl+1)^0,c
  8408   001C84  0E00               	movlw	0
  8409   001C86  6E03               	movwf	(?___xxtofl+2)^0,c
  8410   001C88  0E00               	movlw	0
  8411   001C8A  6E04               	movwf	(?___xxtofl+3)^0,c
  8412   001C8C  EFD9  F00E         	goto	l1477
  8413   001C90                     l4282:
  8414   001C90  0E96               	movlw	150
  8415   001C92  6E0A               	movwf	___xxtofl@exp^0,c
  8416   001C94  EF52  F00E         	goto	l4286
  8417   001C98                     l4284:
  8418   001C98  2A0A               	incf	___xxtofl@exp^0,f,c
  8419   001C9A  90D8               	bcf	status,0,c
  8420   001C9C  320E               	rrcf	(___xxtofl@arg+3)^0,f,c
  8421   001C9E  320D               	rrcf	(___xxtofl@arg+2)^0,f,c
  8422   001CA0  320C               	rrcf	(___xxtofl@arg+1)^0,f,c
  8423   001CA2  320B               	rrcf	___xxtofl@arg^0,f,c
  8424   001CA4                     l4286:
  8425   001CA4  0E00               	movlw	0
  8426   001CA6  140B               	andwf	___xxtofl@arg^0,w,c
  8427   001CA8  6E05               	movwf	??___xxtofl^0,c
  8428   001CAA  0E00               	movlw	0
  8429   001CAC  140C               	andwf	(___xxtofl@arg+1)^0,w,c
  8430   001CAE  6E06               	movwf	(??___xxtofl+1)^0,c
  8431   001CB0  0E00               	movlw	0
  8432   001CB2  140D               	andwf	(___xxtofl@arg+2)^0,w,c
  8433   001CB4  6E07               	movwf	(??___xxtofl+2)^0,c
  8434   001CB6  0EFE               	movlw	254
  8435   001CB8  140E               	andwf	(___xxtofl@arg+3)^0,w,c
  8436   001CBA  6E08               	movwf	(??___xxtofl+3)^0,c
  8437   001CBC  5005               	movf	??___xxtofl^0,w,c
  8438   001CBE  1006               	iorwf	(??___xxtofl+1)^0,w,c
  8439   001CC0  1007               	iorwf	(??___xxtofl+2)^0,w,c
  8440   001CC2  1008               	iorwf	(??___xxtofl+3)^0,w,c
  8441   001CC4  A4D8               	btfss	status,2,c
  8442   001CC6  EF67  F00E         	goto	u3841
  8443   001CCA  EF69  F00E         	goto	u3840
  8444   001CCE                     u3841:
  8445   001CCE  EF4C  F00E         	goto	l4284
  8446   001CD2                     u3840:
  8447   001CD2  EF77  F00E         	goto	l1481
  8448   001CD6                     l4288:
  8449   001CD6  2A0A               	incf	___xxtofl@exp^0,f,c
  8450   001CD8  0E01               	movlw	1
  8451   001CDA  260B               	addwf	___xxtofl@arg^0,f,c
  8452   001CDC  0E00               	movlw	0
  8453   001CDE  220C               	addwfc	(___xxtofl@arg+1)^0,f,c
  8454   001CE0  220D               	addwfc	(___xxtofl@arg+2)^0,f,c
  8455   001CE2  220E               	addwfc	(___xxtofl@arg+3)^0,f,c
  8456   001CE4  90D8               	bcf	status,0,c
  8457   001CE6  320E               	rrcf	(___xxtofl@arg+3)^0,f,c
  8458   001CE8  320D               	rrcf	(___xxtofl@arg+2)^0,f,c
  8459   001CEA  320C               	rrcf	(___xxtofl@arg+1)^0,f,c
  8460   001CEC  320B               	rrcf	___xxtofl@arg^0,f,c
  8461   001CEE                     l1481:
  8462   001CEE  0E00               	movlw	0
  8463   001CF0  140B               	andwf	___xxtofl@arg^0,w,c
  8464   001CF2  6E05               	movwf	??___xxtofl^0,c
  8465   001CF4  0E00               	movlw	0
  8466   001CF6  140C               	andwf	(___xxtofl@arg+1)^0,w,c
  8467   001CF8  6E06               	movwf	(??___xxtofl+1)^0,c
  8468   001CFA  0E00               	movlw	0
  8469   001CFC  140D               	andwf	(___xxtofl@arg+2)^0,w,c
  8470   001CFE  6E07               	movwf	(??___xxtofl+2)^0,c
  8471   001D00  0EFF               	movlw	255
  8472   001D02  140E               	andwf	(___xxtofl@arg+3)^0,w,c
  8473   001D04  6E08               	movwf	(??___xxtofl+3)^0,c
  8474   001D06  5005               	movf	??___xxtofl^0,w,c
  8475   001D08  1006               	iorwf	(??___xxtofl+1)^0,w,c
  8476   001D0A  1007               	iorwf	(??___xxtofl+2)^0,w,c
  8477   001D0C  1008               	iorwf	(??___xxtofl+3)^0,w,c
  8478   001D0E  A4D8               	btfss	status,2,c
  8479   001D10  EF8C  F00E         	goto	u3851
  8480   001D14  EF8E  F00E         	goto	u3850
  8481   001D18                     u3851:
  8482   001D18  EF6B  F00E         	goto	l4288
  8483   001D1C                     u3850:
  8484   001D1C  EF96  F00E         	goto	l4296
  8485   001D20                     l4294:
  8486   001D20  060A               	decf	___xxtofl@exp^0,f,c
  8487   001D22  90D8               	bcf	status,0,c
  8488   001D24  360B               	rlcf	___xxtofl@arg^0,f,c
  8489   001D26  360C               	rlcf	(___xxtofl@arg+1)^0,f,c
  8490   001D28  360D               	rlcf	(___xxtofl@arg+2)^0,f,c
  8491   001D2A  360E               	rlcf	(___xxtofl@arg+3)^0,f,c
  8492   001D2C                     l4296:
  8493   001D2C  BE0D               	btfsc	(___xxtofl@arg+2)^0,7,c
  8494   001D2E  EF9B  F00E         	goto	u3861
  8495   001D32  EF9D  F00E         	goto	u3860
  8496   001D36                     u3861:
  8497   001D36  EFA5  F00E         	goto	l1488
  8498   001D3A                     u3860:
  8499   001D3A  0E02               	movlw	2
  8500   001D3C  600A               	cpfslt	___xxtofl@exp^0,c
  8501   001D3E  EFA3  F00E         	goto	u3871
  8502   001D42  EFA5  F00E         	goto	u3870
  8503   001D46                     u3871:
  8504   001D46  EF90  F00E         	goto	l4294
  8505   001D4A                     u3870:
  8506   001D4A                     l1488:
  8507   001D4A  B00A               	btfsc	___xxtofl@exp^0,0,c
  8508   001D4C  EFAA  F00E         	goto	u3881
  8509   001D50  EFAC  F00E         	goto	u3880
  8510   001D54                     u3881:
  8511   001D54  EFAD  F00E         	goto	l4302
  8512   001D58                     u3880:
  8513   001D58  9E0D               	bcf	(___xxtofl@arg+2)^0,7,c
  8514   001D5A                     l4302:
  8515   001D5A  90D8               	bcf	status,0,c
  8516   001D5C  320A               	rrcf	___xxtofl@exp^0,f,c
  8517   001D5E  C00A  F005         	movff	___xxtofl@exp,??___xxtofl
  8518   001D62  6A06               	clrf	(??___xxtofl+1)^0,c
  8519   001D64  6A07               	clrf	(??___xxtofl+2)^0,c
  8520   001D66  6A08               	clrf	(??___xxtofl+3)^0,c
  8521   001D68  C005  F008         	movff	??___xxtofl,??___xxtofl+3
  8522   001D6C  6A07               	clrf	(??___xxtofl+2)^0,c
  8523   001D6E  6A06               	clrf	(??___xxtofl+1)^0,c
  8524   001D70  6A05               	clrf	??___xxtofl^0,c
  8525   001D72  5005               	movf	??___xxtofl^0,w,c
  8526   001D74  120B               	iorwf	___xxtofl@arg^0,f,c
  8527   001D76  5006               	movf	(??___xxtofl+1)^0,w,c
  8528   001D78  120C               	iorwf	(___xxtofl@arg+1)^0,f,c
  8529   001D7A  5007               	movf	(??___xxtofl+2)^0,w,c
  8530   001D7C  120D               	iorwf	(___xxtofl@arg+2)^0,f,c
  8531   001D7E  5008               	movf	(??___xxtofl+3)^0,w,c
  8532   001D80  120E               	iorwf	(___xxtofl@arg+3)^0,f,c
  8533   001D82  5009               	movf	___xxtofl@sign^0,w,c
  8534   001D84  B4D8               	btfsc	status,2,c
  8535   001D86  EFC7  F00E         	goto	u3891
  8536   001D8A  EFC9  F00E         	goto	u3890
  8537   001D8E                     u3891:
  8538   001D8E  EFD1  F00E         	goto	l4312
  8539   001D92                     u3890:
  8540   001D92  BE04               	btfsc	(___xxtofl@val+3)^0,7,c
  8541   001D94  EFD0  F00E         	goto	u3900
  8542   001D98  EFCE  F00E         	goto	u3901
  8543   001D9C                     u3901:
  8544   001D9C  EFD1  F00E         	goto	l4312
  8545   001DA0                     u3900:
  8546   001DA0  8E0E               	bsf	(___xxtofl@arg+3)^0,7,c
  8547   001DA2                     l4312:
  8548   001DA2  C00B  F001         	movff	___xxtofl@arg,?___xxtofl
  8549   001DA6  C00C  F002         	movff	___xxtofl@arg+1,?___xxtofl+1
  8550   001DAA  C00D  F003         	movff	___xxtofl@arg+2,?___xxtofl+2
  8551   001DAE  C00E  F004         	movff	___xxtofl@arg+3,?___xxtofl+3
  8552   001DB2                     l1477:
  8553   001DB2  0012               	return		;funcret
  8554   001DB4                     __end_of___xxtofl:
  8555                           	callstack 0
  8556                           
  8557 ;; *************** function ___fltol *****************
  8558 ;; Defined at:
  8559 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\fltol.c"
  8560 ;; Parameters:    Size  Location     Type
  8561 ;;  f1              4   39[COMRAM] unsigned char 
  8562 ;; Auto vars:     Size  Location     Type
  8563 ;;  exp1            1   48[COMRAM] unsigned char 
  8564 ;;  sign1           1   47[COMRAM] unsigned char 
  8565 ;; Return value:  Size  Location     Type
  8566 ;;                  4   39[COMRAM] long 
  8567 ;; Registers used:
  8568 ;;		wreg, status,2, status,0
  8569 ;; Tracked objects:
  8570 ;;		On entry : 0/0
  8571 ;;		On exit  : 0/0
  8572 ;;		Unchanged: 0/0
  8573 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8574 ;;      Params:         4       0       0       0       0       0       0
  8575 ;;      Locals:         2       0       0       0       0       0       0
  8576 ;;      Temps:          4       0       0       0       0       0       0
  8577 ;;      Totals:        10       0       0       0       0       0       0
  8578 ;;Total ram usage:       10 bytes
  8579 ;; Hardware stack levels used: 1
  8580 ;; Hardware stack levels required when called: 1
  8581 ;; This function calls:
  8582 ;;		Nothing
  8583 ;; This function is called by:
  8584 ;;		_main
  8585 ;; This function uses a non-reentrant model
  8586 ;;
  8587                           
  8588                           	psect	text43
  8589   00202A                     __ptext43:
  8590                           	callstack 0
  8591   00202A                     ___fltol:
  8592                           	callstack 29
  8593   00202A  342A               	rlcf	(___fltol@f1+2)^0,w,c
  8594   00202C  342B               	rlcf	(___fltol@f1+3)^0,w,c
  8595   00202E  6E31               	movwf	___fltol@exp1^0,c
  8596   002030  5031               	movf	___fltol@exp1^0,w,c
  8597   002032  A4D8               	btfss	status,2,c
  8598   002034  EF1E  F010         	goto	u3741
  8599   002038  EF20  F010         	goto	u3740
  8600   00203C                     u3741:
  8601   00203C  EF2A  F010         	goto	l4232
  8602   002040                     u3740:
  8603   002040                     l4228:
  8604   002040  0E00               	movlw	0
  8605   002042  6E28               	movwf	?___fltol^0,c
  8606   002044  0E00               	movlw	0
  8607   002046  6E29               	movwf	(?___fltol+1)^0,c
  8608   002048  0E00               	movlw	0
  8609   00204A  6E2A               	movwf	(?___fltol+2)^0,c
  8610   00204C  0E00               	movlw	0
  8611   00204E  6E2B               	movwf	(?___fltol+3)^0,c
  8612   002050  EF97  F010         	goto	l1116
  8613   002054                     l4232:
  8614   002054  C028  F02C         	movff	___fltol@f1,??___fltol
  8615   002058  C029  F02D         	movff	___fltol@f1+1,??___fltol+1
  8616   00205C  C02A  F02E         	movff	___fltol@f1+2,??___fltol+2
  8617   002060  C02B  F02F         	movff	___fltol@f1+3,??___fltol+3
  8618   002064  0E20               	movlw	32
  8619   002066  EF3A  F010         	goto	u3750
  8620   00206A                     u3755:
  8621   00206A  90D8               	bcf	status,0,c
  8622   00206C  322F               	rrcf	(??___fltol+3)^0,f,c
  8623   00206E  322E               	rrcf	(??___fltol+2)^0,f,c
  8624   002070  322D               	rrcf	(??___fltol+1)^0,f,c
  8625   002072  322C               	rrcf	??___fltol^0,f,c
  8626   002074                     u3750:
  8627   002074  2EE8               	decfsz	wreg,f,c
  8628   002076  EF35  F010         	goto	u3755
  8629   00207A  502C               	movf	??___fltol^0,w,c
  8630   00207C  6E30               	movwf	___fltol@sign1^0,c
  8631   00207E  8E2A               	bsf	(___fltol@f1+2)^0,7,c
  8632   002080  0EFF               	movlw	255
  8633   002082  1628               	andwf	___fltol@f1^0,f,c
  8634   002084  0EFF               	movlw	255
  8635   002086  1629               	andwf	(___fltol@f1+1)^0,f,c
  8636   002088  0EFF               	movlw	255
  8637   00208A  162A               	andwf	(___fltol@f1+2)^0,f,c
  8638   00208C  0E00               	movlw	0
  8639   00208E  162B               	andwf	(___fltol@f1+3)^0,f,c
  8640   002090  0E96               	movlw	150
  8641   002092  5E31               	subwf	___fltol@exp1^0,f,c
  8642   002094  BE31               	btfsc	___fltol@exp1^0,7,c
  8643   002096  EF51  F010         	goto	u3760
  8644   00209A  EF4F  F010         	goto	u3761
  8645   00209E                     u3761:
  8646   00209E  EF67  F010         	goto	l4252
  8647   0020A2                     u3760:
  8648   0020A2  5031               	movf	___fltol@exp1^0,w,c
  8649   0020A4  0A80               	xorlw	128
  8650   0020A6  0F97               	addlw	151
  8651   0020A8  B0D8               	btfsc	status,0,c
  8652   0020AA  EF59  F010         	goto	u3771
  8653   0020AE  EF5B  F010         	goto	u3770
  8654   0020B2                     u3771:
  8655   0020B2  EF5D  F010         	goto	l4248
  8656   0020B6                     u3770:
  8657   0020B6  EF20  F010         	goto	l4228
  8658   0020BA                     l4248:
  8659   0020BA  90D8               	bcf	status,0,c
  8660   0020BC  322B               	rrcf	(___fltol@f1+3)^0,f,c
  8661   0020BE  322A               	rrcf	(___fltol@f1+2)^0,f,c
  8662   0020C0  3229               	rrcf	(___fltol@f1+1)^0,f,c
  8663   0020C2  3228               	rrcf	___fltol@f1^0,f,c
  8664   0020C4  3E31               	incfsz	___fltol@exp1^0,f,c
  8665   0020C6  EF5D  F010         	goto	l4248
  8666   0020CA  EF7F  F010         	goto	l4262
  8667   0020CE                     l4252:
  8668   0020CE  0E1F               	movlw	31
  8669   0020D0  6431               	cpfsgt	___fltol@exp1^0,c
  8670   0020D2  EF6D  F010         	goto	u3781
  8671   0020D6  EF6F  F010         	goto	u3780
  8672   0020DA                     u3781:
  8673   0020DA  EF77  F010         	goto	l4260
  8674   0020DE                     u3780:
  8675   0020DE  EF20  F010         	goto	l4228
  8676   0020E2                     l4258:
  8677   0020E2  90D8               	bcf	status,0,c
  8678   0020E4  3628               	rlcf	___fltol@f1^0,f,c
  8679   0020E6  3629               	rlcf	(___fltol@f1+1)^0,f,c
  8680   0020E8  362A               	rlcf	(___fltol@f1+2)^0,f,c
  8681   0020EA  362B               	rlcf	(___fltol@f1+3)^0,f,c
  8682   0020EC  0631               	decf	___fltol@exp1^0,f,c
  8683   0020EE                     l4260:
  8684   0020EE  5031               	movf	___fltol@exp1^0,w,c
  8685   0020F0  A4D8               	btfss	status,2,c
  8686   0020F2  EF7D  F010         	goto	u3791
  8687   0020F6  EF7F  F010         	goto	u3790
  8688   0020FA                     u3791:
  8689   0020FA  EF71  F010         	goto	l4258
  8690   0020FE                     u3790:
  8691   0020FE                     l4262:
  8692   0020FE  5030               	movf	___fltol@sign1^0,w,c
  8693   002100  B4D8               	btfsc	status,2,c
  8694   002102  EF85  F010         	goto	u3801
  8695   002106  EF87  F010         	goto	u3800
  8696   00210A                     u3801:
  8697   00210A  EF8F  F010         	goto	l4266
  8698   00210E                     u3800:
  8699   00210E  1E2B               	comf	(___fltol@f1+3)^0,f,c
  8700   002110  1E2A               	comf	(___fltol@f1+2)^0,f,c
  8701   002112  1E29               	comf	(___fltol@f1+1)^0,f,c
  8702   002114  6C28               	negf	___fltol@f1^0,c
  8703   002116  0E00               	movlw	0
  8704   002118  2229               	addwfc	(___fltol@f1+1)^0,f,c
  8705   00211A  222A               	addwfc	(___fltol@f1+2)^0,f,c
  8706   00211C  222B               	addwfc	(___fltol@f1+3)^0,f,c
  8707   00211E                     l4266:
  8708   00211E  C028  F028         	movff	___fltol@f1,?___fltol
  8709   002122  C029  F029         	movff	___fltol@f1+1,?___fltol+1
  8710   002126  C02A  F02A         	movff	___fltol@f1+2,?___fltol+2
  8711   00212A  C02B  F02B         	movff	___fltol@f1+3,?___fltol+3
  8712   00212E                     l1116:
  8713   00212E  0012               	return		;funcret
  8714   002130                     __end_of___fltol:
  8715                           	callstack 0
  8716                           
  8717 ;; *************** function ___fldiv *****************
  8718 ;; Defined at:
  8719 ;;		line 11 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\sprcdiv.c"
  8720 ;; Parameters:    Size  Location     Type
  8721 ;;  b               4   14[COMRAM] long 
  8722 ;;  a               4   18[COMRAM] long 
  8723 ;; Auto vars:     Size  Location     Type
  8724 ;;  grs             4   33[COMRAM] unsigned long 
  8725 ;;  rem             4   26[COMRAM] unsigned long 
  8726 ;;  new_exp         2   31[COMRAM] short 
  8727 ;;  aexp            1   38[COMRAM] unsigned char 
  8728 ;;  bexp            1   37[COMRAM] unsigned char 
  8729 ;;  sign            1   30[COMRAM] unsigned char 
  8730 ;; Return value:  Size  Location     Type
  8731 ;;                  4   14[COMRAM] unsigned char 
  8732 ;; Registers used:
  8733 ;;		wreg, status,2, status,0
  8734 ;; Tracked objects:
  8735 ;;		On entry : 0/0
  8736 ;;		On exit  : 0/0
  8737 ;;		Unchanged: 0/0
  8738 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8739 ;;      Params:         8       0       0       0       0       0       0
  8740 ;;      Locals:        13       0       0       0       0       0       0
  8741 ;;      Temps:          4       0       0       0       0       0       0
  8742 ;;      Totals:        25       0       0       0       0       0       0
  8743 ;;Total ram usage:       25 bytes
  8744 ;; Hardware stack levels used: 1
  8745 ;; Hardware stack levels required when called: 1
  8746 ;; This function calls:
  8747 ;;		Nothing
  8748 ;; This function is called by:
  8749 ;;		_main
  8750 ;; This function uses a non-reentrant model
  8751 ;;
  8752                           
  8753                           	psect	text44
  8754   000E82                     __ptext44:
  8755                           	callstack 0
  8756   000E82                     ___fldiv:
  8757                           	callstack 29
  8758   000E82  5012               	movf	(___fldiv@b+3)^0,w,c
  8759   000E84  0B80               	andlw	128
  8760   000E86  6E1F               	movwf	___fldiv@sign^0,c
  8761   000E88  5012               	movf	(___fldiv@b+3)^0,w,c
  8762   000E8A  2412               	addwf	(___fldiv@b+3)^0,w,c
  8763   000E8C  6E26               	movwf	___fldiv@bexp^0,c
  8764   000E8E  AE11               	btfss	(___fldiv@b+2)^0,7,c
  8765   000E90  EF4C  F007         	goto	u3511
  8766   000E94  EF4E  F007         	goto	u3510
  8767   000E98                     u3511:
  8768   000E98  EF4F  F007         	goto	l4094
  8769   000E9C                     u3510:
  8770   000E9C  8026               	bsf	___fldiv@bexp^0,0,c
  8771   000E9E                     l4094:
  8772   000E9E  5026               	movf	___fldiv@bexp^0,w,c
  8773   000EA0  B4D8               	btfsc	status,2,c
  8774   000EA2  EF55  F007         	goto	u3521
  8775   000EA6  EF57  F007         	goto	u3520
  8776   000EAA                     u3521:
  8777   000EAA  EF6C  F007         	goto	l4104
  8778   000EAE                     u3520:
  8779   000EAE  2826               	incf	___fldiv@bexp^0,w,c
  8780   000EB0  A4D8               	btfss	status,2,c
  8781   000EB2  EF5D  F007         	goto	u3531
  8782   000EB6  EF5F  F007         	goto	u3530
  8783   000EBA                     u3531:
  8784   000EBA  EF67  F007         	goto	l4100
  8785   000EBE                     u3530:
  8786   000EBE  0E00               	movlw	0
  8787   000EC0  6E0F               	movwf	___fldiv@b^0,c
  8788   000EC2  0E00               	movlw	0
  8789   000EC4  6E10               	movwf	(___fldiv@b+1)^0,c
  8790   000EC6  0E00               	movlw	0
  8791   000EC8  6E11               	movwf	(___fldiv@b+2)^0,c
  8792   000ECA  0E00               	movlw	0
  8793   000ECC  6E12               	movwf	(___fldiv@b+3)^0,c
  8794   000ECE                     l4100:
  8795   000ECE  8E11               	bsf	(___fldiv@b+2)^0,7,c
  8796   000ED0  0E00               	movlw	0
  8797   000ED2  6E12               	movwf	(___fldiv@b+3)^0,c
  8798   000ED4  EF74  F007         	goto	l4106
  8799   000ED8                     l4104:
  8800   000ED8  0E00               	movlw	0
  8801   000EDA  6E0F               	movwf	___fldiv@b^0,c
  8802   000EDC  0E00               	movlw	0
  8803   000EDE  6E10               	movwf	(___fldiv@b+1)^0,c
  8804   000EE0  0E00               	movlw	0
  8805   000EE2  6E11               	movwf	(___fldiv@b+2)^0,c
  8806   000EE4  0E00               	movlw	0
  8807   000EE6  6E12               	movwf	(___fldiv@b+3)^0,c
  8808   000EE8                     l4106:
  8809   000EE8  5016               	movf	(___fldiv@a+3)^0,w,c
  8810   000EEA  0B80               	andlw	128
  8811   000EEC  1A1F               	xorwf	___fldiv@sign^0,f,c
  8812   000EEE  5016               	movf	(___fldiv@a+3)^0,w,c
  8813   000EF0  2416               	addwf	(___fldiv@a+3)^0,w,c
  8814   000EF2  6E27               	movwf	___fldiv@aexp^0,c
  8815   000EF4  AE15               	btfss	(___fldiv@a+2)^0,7,c
  8816   000EF6  EF7F  F007         	goto	u3541
  8817   000EFA  EF81  F007         	goto	u3540
  8818   000EFE                     u3541:
  8819   000EFE  EF82  F007         	goto	l4114
  8820   000F02                     u3540:
  8821   000F02  8027               	bsf	___fldiv@aexp^0,0,c
  8822   000F04                     l4114:
  8823   000F04  5027               	movf	___fldiv@aexp^0,w,c
  8824   000F06  B4D8               	btfsc	status,2,c
  8825   000F08  EF88  F007         	goto	u3551
  8826   000F0C  EF8A  F007         	goto	u3550
  8827   000F10                     u3551:
  8828   000F10  EF9F  F007         	goto	l4124
  8829   000F14                     u3550:
  8830   000F14  2827               	incf	___fldiv@aexp^0,w,c
  8831   000F16  A4D8               	btfss	status,2,c
  8832   000F18  EF90  F007         	goto	u3561
  8833   000F1C  EF92  F007         	goto	u3560
  8834   000F20                     u3561:
  8835   000F20  EF9A  F007         	goto	l4120
  8836   000F24                     u3560:
  8837   000F24  0E00               	movlw	0
  8838   000F26  6E13               	movwf	___fldiv@a^0,c
  8839   000F28  0E00               	movlw	0
  8840   000F2A  6E14               	movwf	(___fldiv@a+1)^0,c
  8841   000F2C  0E00               	movlw	0
  8842   000F2E  6E15               	movwf	(___fldiv@a+2)^0,c
  8843   000F30  0E00               	movlw	0
  8844   000F32  6E16               	movwf	(___fldiv@a+3)^0,c
  8845   000F34                     l4120:
  8846   000F34  8E15               	bsf	(___fldiv@a+2)^0,7,c
  8847   000F36  0E00               	movlw	0
  8848   000F38  6E16               	movwf	(___fldiv@a+3)^0,c
  8849   000F3A  EFA7  F007         	goto	l4126
  8850   000F3E                     l4124:
  8851   000F3E  0E00               	movlw	0
  8852   000F40  6E13               	movwf	___fldiv@a^0,c
  8853   000F42  0E00               	movlw	0
  8854   000F44  6E14               	movwf	(___fldiv@a+1)^0,c
  8855   000F46  0E00               	movlw	0
  8856   000F48  6E15               	movwf	(___fldiv@a+2)^0,c
  8857   000F4A  0E00               	movlw	0
  8858   000F4C  6E16               	movwf	(___fldiv@a+3)^0,c
  8859   000F4E                     l4126:
  8860   000F4E  5013               	movf	___fldiv@a^0,w,c
  8861   000F50  1014               	iorwf	(___fldiv@a+1)^0,w,c
  8862   000F52  1015               	iorwf	(___fldiv@a+2)^0,w,c
  8863   000F54  1016               	iorwf	(___fldiv@a+3)^0,w,c
  8864   000F56  A4D8               	btfss	status,2,c
  8865   000F58  EFB0  F007         	goto	u3571
  8866   000F5C  EFB2  F007         	goto	u3570
  8867   000F60                     u3571:
  8868   000F60  EFCA  F007         	goto	l4138
  8869   000F64                     u3570:
  8870   000F64  0E00               	movlw	0
  8871   000F66  6E0F               	movwf	___fldiv@b^0,c
  8872   000F68  0E00               	movlw	0
  8873   000F6A  6E10               	movwf	(___fldiv@b+1)^0,c
  8874   000F6C  0E00               	movlw	0
  8875   000F6E  6E11               	movwf	(___fldiv@b+2)^0,c
  8876   000F70  0E00               	movlw	0
  8877   000F72  6E12               	movwf	(___fldiv@b+3)^0,c
  8878   000F74  0E80               	movlw	128
  8879   000F76  1211               	iorwf	(___fldiv@b+2)^0,f,c
  8880   000F78  0E7F               	movlw	127
  8881   000F7A  1212               	iorwf	(___fldiv@b+3)^0,f,c
  8882   000F7C                     l4132:
  8883   000F7C  501F               	movf	___fldiv@sign^0,w,c
  8884   000F7E  1212               	iorwf	(___fldiv@b+3)^0,f,c
  8885   000F80  C00F  F00F         	movff	___fldiv@b,?___fldiv
  8886   000F84  C010  F010         	movff	___fldiv@b+1,?___fldiv+1
  8887   000F88  C011  F011         	movff	___fldiv@b+2,?___fldiv+2
  8888   000F8C  C012  F012         	movff	___fldiv@b+3,?___fldiv+3
  8889   000F90  EF0D  F009         	goto	l1401
  8890   000F94                     l4138:
  8891   000F94  5026               	movf	___fldiv@bexp^0,w,c
  8892   000F96  A4D8               	btfss	status,2,c
  8893   000F98  EFD0  F007         	goto	u3581
  8894   000F9C  EFD2  F007         	goto	u3580
  8895   000FA0                     u3581:
  8896   000FA0  EFDC  F007         	goto	l4146
  8897   000FA4                     u3580:
  8898   000FA4  0E00               	movlw	0
  8899   000FA6  6E0F               	movwf	?___fldiv^0,c
  8900   000FA8  0E00               	movlw	0
  8901   000FAA  6E10               	movwf	(?___fldiv+1)^0,c
  8902   000FAC  0E00               	movlw	0
  8903   000FAE  6E11               	movwf	(?___fldiv+2)^0,c
  8904   000FB0  0E00               	movlw	0
  8905   000FB2  6E12               	movwf	(?___fldiv+3)^0,c
  8906   000FB4  EF0D  F009         	goto	l1401
  8907   000FB8                     l4146:
  8908   000FB8  5027               	movf	___fldiv@aexp^0,w,c
  8909   000FBA  C026  F017         	movff	___fldiv@bexp,??___fldiv
  8910   000FBE  6A18               	clrf	(??___fldiv+1)^0,c
  8911   000FC0  5E17               	subwf	??___fldiv^0,f,c
  8912   000FC2  0E00               	movlw	0
  8913   000FC4  5A18               	subwfb	(??___fldiv+1)^0,f,c
  8914   000FC6  0E7F               	movlw	127
  8915   000FC8  2417               	addwf	??___fldiv^0,w,c
  8916   000FCA  6E20               	movwf	___fldiv@new_exp^0,c
  8917   000FCC  0E00               	movlw	0
  8918   000FCE  2018               	addwfc	(??___fldiv+1)^0,w,c
  8919   000FD0  6E21               	movwf	(___fldiv@new_exp+1)^0,c
  8920   000FD2  C00F  F01B         	movff	___fldiv@b,___fldiv@rem
  8921   000FD6  C010  F01C         	movff	___fldiv@b+1,___fldiv@rem+1
  8922   000FDA  C011  F01D         	movff	___fldiv@b+2,___fldiv@rem+2
  8923   000FDE  C012  F01E         	movff	___fldiv@b+3,___fldiv@rem+3
  8924   000FE2  0E00               	movlw	0
  8925   000FE4  6E0F               	movwf	___fldiv@b^0,c
  8926   000FE6  0E00               	movlw	0
  8927   000FE8  6E10               	movwf	(___fldiv@b+1)^0,c
  8928   000FEA  0E00               	movlw	0
  8929   000FEC  6E11               	movwf	(___fldiv@b+2)^0,c
  8930   000FEE  0E00               	movlw	0
  8931   000FF0  6E12               	movwf	(___fldiv@b+3)^0,c
  8932   000FF2  0E00               	movlw	0
  8933   000FF4  6E22               	movwf	___fldiv@grs^0,c
  8934   000FF6  0E00               	movlw	0
  8935   000FF8  6E23               	movwf	(___fldiv@grs+1)^0,c
  8936   000FFA  0E00               	movlw	0
  8937   000FFC  6E24               	movwf	(___fldiv@grs+2)^0,c
  8938   000FFE  0E00               	movlw	0
  8939   001000  6E25               	movwf	(___fldiv@grs+3)^0,c
  8940   001002  0E00               	movlw	0
  8941   001004  6E27               	movwf	___fldiv@aexp^0,c
  8942   001006  EF3D  F008         	goto	l1403
  8943   00100A                     l4156:
  8944   00100A  5027               	movf	___fldiv@aexp^0,w,c
  8945   00100C  B4D8               	btfsc	status,2,c
  8946   00100E  EF0B  F008         	goto	u3591
  8947   001012  EF0D  F008         	goto	u3590
  8948   001016                     u3591:
  8949   001016  EF24  F008         	goto	l4164
  8950   00101A                     u3590:
  8951   00101A  90D8               	bcf	status,0,c
  8952   00101C  361B               	rlcf	___fldiv@rem^0,f,c
  8953   00101E  361C               	rlcf	(___fldiv@rem+1)^0,f,c
  8954   001020  361D               	rlcf	(___fldiv@rem+2)^0,f,c
  8955   001022  361E               	rlcf	(___fldiv@rem+3)^0,f,c
  8956   001024  90D8               	bcf	status,0,c
  8957   001026  360F               	rlcf	___fldiv@b^0,f,c
  8958   001028  3610               	rlcf	(___fldiv@b+1)^0,f,c
  8959   00102A  3611               	rlcf	(___fldiv@b+2)^0,f,c
  8960   00102C  3612               	rlcf	(___fldiv@b+3)^0,f,c
  8961   00102E  AE25               	btfss	(___fldiv@grs+3)^0,7,c
  8962   001030  EF1C  F008         	goto	u3601
  8963   001034  EF1E  F008         	goto	u3600
  8964   001038                     u3601:
  8965   001038  EF1F  F008         	goto	l1406
  8966   00103C                     u3600:
  8967   00103C  800F               	bsf	___fldiv@b^0,0,c
  8968   00103E                     l1406:
  8969   00103E  90D8               	bcf	status,0,c
  8970   001040  3622               	rlcf	___fldiv@grs^0,f,c
  8971   001042  3623               	rlcf	(___fldiv@grs+1)^0,f,c
  8972   001044  3624               	rlcf	(___fldiv@grs+2)^0,f,c
  8973   001046  3625               	rlcf	(___fldiv@grs+3)^0,f,c
  8974   001048                     l4164:
  8975   001048  5013               	movf	___fldiv@a^0,w,c
  8976   00104A  5C1B               	subwf	___fldiv@rem^0,w,c
  8977   00104C  5014               	movf	(___fldiv@a+1)^0,w,c
  8978   00104E  581C               	subwfb	(___fldiv@rem+1)^0,w,c
  8979   001050  5015               	movf	(___fldiv@a+2)^0,w,c
  8980   001052  581D               	subwfb	(___fldiv@rem+2)^0,w,c
  8981   001054  5016               	movf	(___fldiv@a+3)^0,w,c
  8982   001056  581E               	subwfb	(___fldiv@rem+3)^0,w,c
  8983   001058  A0D8               	btfss	status,0,c
  8984   00105A  EF31  F008         	goto	u3611
  8985   00105E  EF33  F008         	goto	u3610
  8986   001062                     u3611:
  8987   001062  EF3C  F008         	goto	l4170
  8988   001066                     u3610:
  8989   001066  8C25               	bsf	(___fldiv@grs+3)^0,6,c
  8990   001068  5013               	movf	___fldiv@a^0,w,c
  8991   00106A  5E1B               	subwf	___fldiv@rem^0,f,c
  8992   00106C  5014               	movf	(___fldiv@a+1)^0,w,c
  8993   00106E  5A1C               	subwfb	(___fldiv@rem+1)^0,f,c
  8994   001070  5015               	movf	(___fldiv@a+2)^0,w,c
  8995   001072  5A1D               	subwfb	(___fldiv@rem+2)^0,f,c
  8996   001074  5016               	movf	(___fldiv@a+3)^0,w,c
  8997   001076  5A1E               	subwfb	(___fldiv@rem+3)^0,f,c
  8998   001078                     l4170:
  8999   001078  2A27               	incf	___fldiv@aexp^0,f,c
  9000   00107A                     l1403:
  9001   00107A  0E19               	movlw	25
  9002   00107C  6427               	cpfsgt	___fldiv@aexp^0,c
  9003   00107E  EF43  F008         	goto	u3621
  9004   001082  EF45  F008         	goto	u3620
  9005   001086                     u3621:
  9006   001086  EF05  F008         	goto	l4156
  9007   00108A                     u3620:
  9008   00108A  501B               	movf	___fldiv@rem^0,w,c
  9009   00108C  101C               	iorwf	(___fldiv@rem+1)^0,w,c
  9010   00108E  101D               	iorwf	(___fldiv@rem+2)^0,w,c
  9011   001090  101E               	iorwf	(___fldiv@rem+3)^0,w,c
  9012   001092  B4D8               	btfsc	status,2,c
  9013   001094  EF4E  F008         	goto	u3631
  9014   001098  EF50  F008         	goto	u3630
  9015   00109C                     u3631:
  9016   00109C  EF68  F008         	goto	l4182
  9017   0010A0                     u3630:
  9018   0010A0  8022               	bsf	___fldiv@grs^0,0,c
  9019   0010A2  EF68  F008         	goto	l4182
  9020   0010A6                     l4176:
  9021   0010A6  90D8               	bcf	status,0,c
  9022   0010A8  360F               	rlcf	___fldiv@b^0,f,c
  9023   0010AA  3610               	rlcf	(___fldiv@b+1)^0,f,c
  9024   0010AC  3611               	rlcf	(___fldiv@b+2)^0,f,c
  9025   0010AE  3612               	rlcf	(___fldiv@b+3)^0,f,c
  9026   0010B0  AE25               	btfss	(___fldiv@grs+3)^0,7,c
  9027   0010B2  EF5D  F008         	goto	u3641
  9028   0010B6  EF5F  F008         	goto	u3640
  9029   0010BA                     u3641:
  9030   0010BA  EF60  F008         	goto	l1412
  9031   0010BE                     u3640:
  9032   0010BE  800F               	bsf	___fldiv@b^0,0,c
  9033   0010C0                     l1412:
  9034   0010C0  90D8               	bcf	status,0,c
  9035   0010C2  3622               	rlcf	___fldiv@grs^0,f,c
  9036   0010C4  3623               	rlcf	(___fldiv@grs+1)^0,f,c
  9037   0010C6  3624               	rlcf	(___fldiv@grs+2)^0,f,c
  9038   0010C8  3625               	rlcf	(___fldiv@grs+3)^0,f,c
  9039   0010CA  0620               	decf	___fldiv@new_exp^0,f,c
  9040   0010CC  A0D8               	btfss	status,0,c
  9041   0010CE  0621               	decf	(___fldiv@new_exp+1)^0,f,c
  9042   0010D0                     l4182:
  9043   0010D0  AE11               	btfss	(___fldiv@b+2)^0,7,c
  9044   0010D2  EF6D  F008         	goto	u3651
  9045   0010D6  EF6F  F008         	goto	u3650
  9046   0010DA                     u3651:
  9047   0010DA  EF53  F008         	goto	l4176
  9048   0010DE                     u3650:
  9049   0010DE  0E00               	movlw	0
  9050   0010E0  6E27               	movwf	___fldiv@aexp^0,c
  9051   0010E2  AE25               	btfss	(___fldiv@grs+3)^0,7,c
  9052   0010E4  EF76  F008         	goto	u3661
  9053   0010E8  EF78  F008         	goto	u3660
  9054   0010EC                     u3661:
  9055   0010EC  EF9C  F008         	goto	l1414
  9056   0010F0                     u3660:
  9057   0010F0  0EFF               	movlw	255
  9058   0010F2  1422               	andwf	___fldiv@grs^0,w,c
  9059   0010F4  6E17               	movwf	??___fldiv^0,c
  9060   0010F6  0EFF               	movlw	255
  9061   0010F8  1423               	andwf	(___fldiv@grs+1)^0,w,c
  9062   0010FA  6E18               	movwf	(??___fldiv+1)^0,c
  9063   0010FC  0EFF               	movlw	255
  9064   0010FE  1424               	andwf	(___fldiv@grs+2)^0,w,c
  9065   001100  6E19               	movwf	(??___fldiv+2)^0,c
  9066   001102  0E7F               	movlw	127
  9067   001104  1425               	andwf	(___fldiv@grs+3)^0,w,c
  9068   001106  6E1A               	movwf	(??___fldiv+3)^0,c
  9069   001108  5017               	movf	??___fldiv^0,w,c
  9070   00110A  1018               	iorwf	(??___fldiv+1)^0,w,c
  9071   00110C  1019               	iorwf	(??___fldiv+2)^0,w,c
  9072   00110E  101A               	iorwf	(??___fldiv+3)^0,w,c
  9073   001110  B4D8               	btfsc	status,2,c
  9074   001112  EF8D  F008         	goto	u3671
  9075   001116  EF8F  F008         	goto	u3670
  9076   00111A                     u3671:
  9077   00111A  EF93  F008         	goto	l1415
  9078   00111E                     u3670:
  9079   00111E                     l4190:
  9080   00111E  0E01               	movlw	1
  9081   001120  6E27               	movwf	___fldiv@aexp^0,c
  9082   001122  EF9C  F008         	goto	l1414
  9083   001126                     l1415:
  9084   001126  A00F               	btfss	___fldiv@b^0,0,c
  9085   001128  EF98  F008         	goto	u3681
  9086   00112C  EF9A  F008         	goto	u3680
  9087   001130                     u3681:
  9088   001130  EF9C  F008         	goto	l1414
  9089   001134                     u3680:
  9090   001134  EF8F  F008         	goto	l4190
  9091   001138                     l1414:
  9092   001138  5027               	movf	___fldiv@aexp^0,w,c
  9093   00113A  B4D8               	btfsc	status,2,c
  9094   00113C  EFA2  F008         	goto	u3691
  9095   001140  EFA4  F008         	goto	u3690
  9096   001144                     u3691:
  9097   001144  EFC8  F008         	goto	l4202
  9098   001148                     u3690:
  9099   001148  0E01               	movlw	1
  9100   00114A  260F               	addwf	___fldiv@b^0,f,c
  9101   00114C  0E00               	movlw	0
  9102   00114E  2210               	addwfc	(___fldiv@b+1)^0,f,c
  9103   001150  2211               	addwfc	(___fldiv@b+2)^0,f,c
  9104   001152  2212               	addwfc	(___fldiv@b+3)^0,f,c
  9105   001154  A012               	btfss	(___fldiv@b+3)^0,0,c
  9106   001156  EFAF  F008         	goto	u3701
  9107   00115A  EFB1  F008         	goto	u3700
  9108   00115E                     u3701:
  9109   00115E  EFC8  F008         	goto	l4202
  9110   001162                     u3700:
  9111   001162  C00F  F017         	movff	___fldiv@b,??___fldiv
  9112   001166  C010  F018         	movff	___fldiv@b+1,??___fldiv+1
  9113   00116A  C011  F019         	movff	___fldiv@b+2,??___fldiv+2
  9114   00116E  C012  F01A         	movff	___fldiv@b+3,??___fldiv+3
  9115   001172  341A               	rlcf	(??___fldiv+3)^0,w,c
  9116   001174  321A               	rrcf	(??___fldiv+3)^0,f,c
  9117   001176  3219               	rrcf	(??___fldiv+2)^0,f,c
  9118   001178  3218               	rrcf	(??___fldiv+1)^0,f,c
  9119   00117A  3217               	rrcf	??___fldiv^0,f,c
  9120   00117C  C017  F00F         	movff	??___fldiv,___fldiv@b
  9121   001180  C018  F010         	movff	??___fldiv+1,___fldiv@b+1
  9122   001184  C019  F011         	movff	??___fldiv+2,___fldiv@b+2
  9123   001188  C01A  F012         	movff	??___fldiv+3,___fldiv@b+3
  9124   00118C  4A20               	infsnz	___fldiv@new_exp^0,f,c
  9125   00118E  2A21               	incf	(___fldiv@new_exp+1)^0,f,c
  9126   001190                     l4202:
  9127   001190  BE21               	btfsc	(___fldiv@new_exp+1)^0,7,c
  9128   001192  EFD3  F008         	goto	u3711
  9129   001196  5021               	movf	(___fldiv@new_exp+1)^0,w,c
  9130   001198  E108               	bnz	u3710
  9131   00119A  2820               	incf	___fldiv@new_exp^0,w,c
  9132   00119C  A0D8               	btfss	status,0,c
  9133   00119E  EFD3  F008         	goto	u3711
  9134   0011A2  EFD5  F008         	goto	u3710
  9135   0011A6                     u3711:
  9136   0011A6  EFE0  F008         	goto	l4206
  9137   0011AA                     u3710:
  9138   0011AA  0E00               	movlw	0
  9139   0011AC  6E21               	movwf	(___fldiv@new_exp+1)^0,c
  9140   0011AE  6820               	setf	___fldiv@new_exp^0,c
  9141   0011B0  0E00               	movlw	0
  9142   0011B2  6E0F               	movwf	___fldiv@b^0,c
  9143   0011B4  0E00               	movlw	0
  9144   0011B6  6E10               	movwf	(___fldiv@b+1)^0,c
  9145   0011B8  0E00               	movlw	0
  9146   0011BA  6E11               	movwf	(___fldiv@b+2)^0,c
  9147   0011BC  0E00               	movlw	0
  9148   0011BE  6E12               	movwf	(___fldiv@b+3)^0,c
  9149   0011C0                     l4206:
  9150   0011C0  BE21               	btfsc	(___fldiv@new_exp+1)^0,7,c
  9151   0011C2  EFED  F008         	goto	u3720
  9152   0011C6  5021               	movf	(___fldiv@new_exp+1)^0,w,c
  9153   0011C8  E106               	bnz	u3721
  9154   0011CA  0420               	decf	___fldiv@new_exp^0,w,c
  9155   0011CC  B0D8               	btfsc	status,0,c
  9156   0011CE  EFEB  F008         	goto	u3721
  9157   0011D2  EFED  F008         	goto	u3720
  9158   0011D6                     u3721:
  9159   0011D6  EFFB  F008         	goto	l4210
  9160   0011DA                     u3720:
  9161   0011DA  0E00               	movlw	0
  9162   0011DC  6E21               	movwf	(___fldiv@new_exp+1)^0,c
  9163   0011DE  0E00               	movlw	0
  9164   0011E0  6E20               	movwf	___fldiv@new_exp^0,c
  9165   0011E2  0E00               	movlw	0
  9166   0011E4  6E0F               	movwf	___fldiv@b^0,c
  9167   0011E6  0E00               	movlw	0
  9168   0011E8  6E10               	movwf	(___fldiv@b+1)^0,c
  9169   0011EA  0E00               	movlw	0
  9170   0011EC  6E11               	movwf	(___fldiv@b+2)^0,c
  9171   0011EE  0E00               	movlw	0
  9172   0011F0  6E12               	movwf	(___fldiv@b+3)^0,c
  9173   0011F2  0E00               	movlw	0
  9174   0011F4  6E1F               	movwf	___fldiv@sign^0,c
  9175   0011F6                     l4210:
  9176   0011F6  C020  F026         	movff	___fldiv@new_exp,___fldiv@bexp
  9177   0011FA  A026               	btfss	___fldiv@bexp^0,0,c
  9178   0011FC  EF02  F009         	goto	u3731
  9179   001200  EF04  F009         	goto	u3730
  9180   001204                     u3731:
  9181   001204  EF07  F009         	goto	l4216
  9182   001208                     u3730:
  9183   001208  8E11               	bsf	(___fldiv@b+2)^0,7,c
  9184   00120A  EF08  F009         	goto	l4218
  9185   00120E                     l4216:
  9186   00120E  9E11               	bcf	(___fldiv@b+2)^0,7,c
  9187   001210                     l4218:
  9188   001210  90D8               	bcf	status,0,c
  9189   001212  3026               	rrcf	___fldiv@bexp^0,w,c
  9190   001214  6E12               	movwf	(___fldiv@b+3)^0,c
  9191   001216  EFBE  F007         	goto	l4132
  9192   00121A                     l1401:
  9193   00121A  0012               	return		;funcret
  9194   00121C                     __end_of___fldiv:
  9195                           	callstack 0
  9196                           
  9197 ;; *************** function _isr *****************
  9198 ;; Defined at:
  9199 ;;		line 5 in file "isr.c"
  9200 ;; Parameters:    Size  Location     Type
  9201 ;;		None
  9202 ;; Auto vars:     Size  Location     Type
  9203 ;;		None
  9204 ;; Return value:  Size  Location     Type
  9205 ;;                  1    wreg      void 
  9206 ;; Registers used:
  9207 ;;		wreg, status,2, status,0
  9208 ;; Tracked objects:
  9209 ;;		On entry : 0/0
  9210 ;;		On exit  : 0/0
  9211 ;;		Unchanged: 0/0
  9212 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9213 ;;      Params:         0       0       0       0       0       0       0
  9214 ;;      Locals:         0       0       0       0       0       0       0
  9215 ;;      Temps:          0       0       0       0       0       0       0
  9216 ;;      Totals:         0       0       0       0       0       0       0
  9217 ;;Total ram usage:        0 bytes
  9218 ;; Hardware stack levels used: 1
  9219 ;; This function calls:
  9220 ;;		Nothing
  9221 ;; This function is called by:
  9222 ;;		Interrupt level 2
  9223 ;; This function uses a non-reentrant model
  9224 ;;
  9225                           
  9226                           	psect	intcode
  9227   000008                     __pintcode:
  9228                           	callstack 0
  9229   000008                     _isr:
  9230                           	callstack 24
  9231                           
  9232                           ;incstack = 0
  9233   000008  825E               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  9234   00000A  ED3C  F013         	call	int_func,f	;refresh shadow registers
  9235                           
  9236                           	psect	intcode_body
  9237   002678                     __pintcode_body:
  9238                           	callstack 24
  9239   002678                     int_func:
  9240                           	callstack 24
  9241   002678  0006               	pop		; remove dummy address from shadow register refresh
  9242   00267A                     
  9243                           ;isr.c: 7:  static unsigned short count;;isr.c: 9:  if (TMR0IF)
  9244   00267A  A4F2               	btfss	4082,2,c	;volatile
  9245   00267C  EF42  F013         	goto	i2u408_41
  9246   002680  EF44  F013         	goto	i2u408_40
  9247   002684                     i2u408_41:
  9248   002684  EF66  F013         	goto	i2l4410
  9249   002688                     i2u408_40:
  9250   002688                     
  9251                           ;isr.c: 10:  {;isr.c: 11:   TMR0 = TMR0 + 8;
  9252   002688  0E08               	movlw	8
  9253   00268A  24D6               	addwf	214,w,c	;volatile
  9254   00268C  6ED6               	movwf	214,c	;volatile
  9255   00268E  0E00               	movlw	0
  9256   002690  20D7               	addwfc	215,w,c	;volatile
  9257   002692  6ED7               	movwf	215,c	;volatile
  9258                           
  9259                           ;isr.c: 13:   if (count++ == 20000)
  9260   002694  0100               	movlb	0	; () banked
  9261   002696  4B85               	infsnz	isr@count& (0+255),f,b
  9262   002698  2B86               	incf	(isr@count+1)& (0+255),f,b
  9263   00269A  0E21               	movlw	33
  9264   00269C  1985               	xorwf	isr@count& (0+255),w,b
  9265   00269E  E107               	bnz	i2u409_41
  9266   0026A0  0E4E               	movlw	78
  9267   0026A2  1986               	xorwf	(isr@count+1)& (0+255),w,b
  9268   0026A4  A4D8               	btfss	status,2,c
  9269   0026A6  EF57  F013         	goto	i2u409_41
  9270   0026AA  EF59  F013         	goto	i2u409_40
  9271   0026AE                     i2u409_41:
  9272   0026AE  EF66  F013         	goto	i2l4410
  9273   0026B2                     i2u409_40:
  9274   0026B2                     
  9275                           ; BSR set to: 0
  9276                           ;isr.c: 14:   {;isr.c: 15:    count = 0;
  9277   0026B2  0E00               	movlw	0
  9278   0026B4  6F86               	movwf	(isr@count+1)& (0+255),b
  9279   0026B6  0E00               	movlw	0
  9280   0026B8  6F85               	movwf	isr@count& (0+255),b
  9281                           
  9282                           ;isr.c: 16:             if(sec>0)
  9283   0026BA  505D               	movf	_sec^0,w,c
  9284   0026BC  B4D8               	btfsc	status,2,c
  9285   0026BE  EF63  F013         	goto	i2u410_41
  9286   0026C2  EF65  F013         	goto	i2u410_40
  9287   0026C6                     i2u410_41:
  9288   0026C6  EF66  F013         	goto	i2l4410
  9289   0026CA                     i2u410_40:
  9290   0026CA                     
  9291                           ; BSR set to: 0
  9292                           ;isr.c: 17:    sec--;
  9293   0026CA  065D               	decf	_sec^0,f,c
  9294   0026CC                     i2l4410:
  9295                           
  9296                           ;isr.c: 20:       TMR0IF = 0;
  9297   0026CC  94F2               	bcf	4082,2,c	;volatile
  9298   0026CE  925E               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  9299   0026D0  0011               	retfie		f
  9300   0026D2                     __end_of_isr:
  9301                           	callstack 0
  9302                           
  9303                           	psect	rparam
  9304   000000                     
  9305                           	psect	temp
  9306   00005E                     btemp:
  9307                           	callstack 0
  9308   00005E                     	ds	1
  9309   000000                     int$flags	set	btemp
  9310   000000                     wtemp8	set	btemp+1
  9311   000000                     ttemp5	set	btemp+1
  9312   000000                     ttemp6	set	btemp+4
  9313   000000                     ttemp7	set	btemp+8
  9314                           
  9315                           	psect	idloc
  9316                           
  9317                           ;Config register IDLOC0 @ 0x200000
  9318                           ;	unspecified, using default values
  9319   200000                     	org	2097152
  9320   200000  FF                 	db	255
  9321                           
  9322                           ;Config register IDLOC1 @ 0x200001
  9323                           ;	unspecified, using default values
  9324   200001                     	org	2097153
  9325   200001  FF                 	db	255
  9326                           
  9327                           ;Config register IDLOC2 @ 0x200002
  9328                           ;	unspecified, using default values
  9329   200002                     	org	2097154
  9330   200002  FF                 	db	255
  9331                           
  9332                           ;Config register IDLOC3 @ 0x200003
  9333                           ;	unspecified, using default values
  9334   200003                     	org	2097155
  9335   200003  FF                 	db	255
  9336                           
  9337                           ;Config register IDLOC4 @ 0x200004
  9338                           ;	unspecified, using default values
  9339   200004                     	org	2097156
  9340   200004  FF                 	db	255
  9341                           
  9342                           ;Config register IDLOC5 @ 0x200005
  9343                           ;	unspecified, using default values
  9344   200005                     	org	2097157
  9345   200005  FF                 	db	255
  9346                           
  9347                           ;Config register IDLOC6 @ 0x200006
  9348                           ;	unspecified, using default values
  9349   200006                     	org	2097158
  9350   200006  FF                 	db	255
  9351                           
  9352                           ;Config register IDLOC7 @ 0x200007
  9353                           ;	unspecified, using default values
  9354   200007                     	org	2097159
  9355   200007  FF                 	db	255
  9356                           
  9357                           	psect	config
  9358                           
  9359                           ; Padding undefined space
  9360   300000                     	org	3145728
  9361   300000  FF                 	db	255
  9362                           
  9363                           ;Config register CONFIG1H @ 0x300001
  9364                           ;	unspecified, using default values
  9365                           ;	Oscillator Selection bits
  9366                           ;	OSC = 0x7, unprogrammed default
  9367                           ;	Fail-Safe Clock Monitor Enable bit
  9368                           ;	FCMEN = 0x0, unprogrammed default
  9369                           ;	Internal/External Oscillator Switchover bit
  9370                           ;	IESO = 0x0, unprogrammed default
  9371   300001                     	org	3145729
  9372   300001  07                 	db	7
  9373                           
  9374                           ;Config register CONFIG2L @ 0x300002
  9375                           ;	unspecified, using default values
  9376                           ;	Power-up Timer Enable bit
  9377                           ;	PWRT = 0x1, unprogrammed default
  9378                           ;	Brown-out Reset Enable bits
  9379                           ;	BOREN = 0x3, unprogrammed default
  9380                           ;	Brown-out Reset Voltage bits
  9381                           ;	BORV = 0x3, unprogrammed default
  9382   300002                     	org	3145730
  9383   300002  1F                 	db	31
  9384                           
  9385                           ;Config register CONFIG2H @ 0x300003
  9386                           ;	unspecified, using default values
  9387                           ;	Watchdog Timer Enable bit
  9388                           ;	WDT = 0x1, unprogrammed default
  9389                           ;	Watchdog Timer Postscale Select bits
  9390                           ;	WDTPS = 0xF, unprogrammed default
  9391   300003                     	org	3145731
  9392   300003  1F                 	db	31
  9393                           
  9394                           ; Padding undefined space
  9395   300004                     	org	3145732
  9396   300004  FF                 	db	255
  9397                           
  9398                           ;Config register CONFIG3H @ 0x300005
  9399                           ;	unspecified, using default values
  9400                           ;	PORTB A/D Enable bit
  9401                           ;	PBADEN = 0x1, unprogrammed default
  9402                           ;	Low-Power Timer 1 Oscillator Enable bit
  9403                           ;	LPT1OSC = 0x0, unprogrammed default
  9404                           ;	MCLR Pin Enable bit
  9405                           ;	MCLRE = 0x1, unprogrammed default
  9406   300005                     	org	3145733
  9407   300005  82                 	db	130
  9408                           
  9409                           ;Config register CONFIG4L @ 0x300006
  9410                           ;	unspecified, using default values
  9411                           ;	Stack Full/Underflow Reset Enable bit
  9412                           ;	STVREN = 0x1, unprogrammed default
  9413                           ;	Single-Supply ICSP Enable bit
  9414                           ;	LVP = 0x1, unprogrammed default
  9415                           ;	Boot Block Size Select bit
  9416                           ;	BBSIZ = 0x0, unprogrammed default
  9417                           ;	Extended Instruction Set Enable bit
  9418                           ;	XINST = 0x0, unprogrammed default
  9419                           ;	Background Debugger Enable bit
  9420                           ;	DEBUG = 0x1, unprogrammed default
  9421   300006                     	org	3145734
  9422   300006  85                 	db	133
  9423                           
  9424                           ; Padding undefined space
  9425   300007                     	org	3145735
  9426   300007  FF                 	db	255
  9427                           
  9428                           ;Config register CONFIG5L @ 0x300008
  9429                           ;	unspecified, using default values
  9430                           ;	Code Protection bit
  9431                           ;	CP0 = 0x1, unprogrammed default
  9432                           ;	Code Protection bit
  9433                           ;	CP1 = 0x1, unprogrammed default
  9434                           ;	Code Protection bit
  9435                           ;	CP2 = 0x1, unprogrammed default
  9436                           ;	Code Protection bit
  9437                           ;	CP3 = 0x1, unprogrammed default
  9438   300008                     	org	3145736
  9439   300008  0F                 	db	15
  9440                           
  9441                           ;Config register CONFIG5H @ 0x300009
  9442                           ;	unspecified, using default values
  9443                           ;	Boot Block Code Protection bit
  9444                           ;	CPB = 0x1, unprogrammed default
  9445                           ;	Data EEPROM Code Protection bit
  9446                           ;	CPD = 0x1, unprogrammed default
  9447   300009                     	org	3145737
  9448   300009  C0                 	db	192
  9449                           
  9450                           ;Config register CONFIG6L @ 0x30000A
  9451                           ;	unspecified, using default values
  9452                           ;	Write Protection bit
  9453                           ;	WRT0 = 0x1, unprogrammed default
  9454                           ;	Write Protection bit
  9455                           ;	WRT1 = 0x1, unprogrammed default
  9456                           ;	Write Protection bit
  9457                           ;	WRT2 = 0x1, unprogrammed default
  9458                           ;	Write Protection bit
  9459                           ;	WRT3 = 0x1, unprogrammed default
  9460   30000A                     	org	3145738
  9461   30000A  0F                 	db	15
  9462                           
  9463                           ;Config register CONFIG6H @ 0x30000B
  9464                           ;	unspecified, using default values
  9465                           ;	Configuration Register Write Protection bit
  9466                           ;	WRTC = 0x1, unprogrammed default
  9467                           ;	Boot Block Write Protection bit
  9468                           ;	WRTB = 0x1, unprogrammed default
  9469                           ;	Data EEPROM Write Protection bit
  9470                           ;	WRTD = 0x1, unprogrammed default
  9471   30000B                     	org	3145739
  9472   30000B  E0                 	db	224
  9473                           
  9474                           ;Config register CONFIG7L @ 0x30000C
  9475                           ;	unspecified, using default values
  9476                           ;	Table Read Protection bit
  9477                           ;	EBTR0 = 0x1, unprogrammed default
  9478                           ;	Table Read Protection bit
  9479                           ;	EBTR1 = 0x1, unprogrammed default
  9480                           ;	Table Read Protection bit
  9481                           ;	EBTR2 = 0x1, unprogrammed default
  9482                           ;	Table Read Protection bit
  9483                           ;	EBTR3 = 0x1, unprogrammed default
  9484   30000C                     	org	3145740
  9485   30000C  0F                 	db	15
  9486                           
  9487                           ;Config register CONFIG7H @ 0x30000D
  9488                           ;	unspecified, using default values
  9489                           ;	Boot Block Table Read Protection bit
  9490                           ;	EBTRB = 0x1, unprogrammed default
  9491   30000D                     	org	3145741
  9492   30000D  40                 	db	64
  9493                           tosu	equ	0xFFF
  9494                           tosh	equ	0xFFE
  9495                           tosl	equ	0xFFD
  9496                           stkptr	equ	0xFFC
  9497                           pclatu	equ	0xFFB
  9498                           pclath	equ	0xFFA
  9499                           pcl	equ	0xFF9
  9500                           tblptru	equ	0xFF8
  9501                           tblptrh	equ	0xFF7
  9502                           tblptrl	equ	0xFF6
  9503                           tablat	equ	0xFF5
  9504                           prodh	equ	0xFF4
  9505                           prodl	equ	0xFF3
  9506                           indf0	equ	0xFEF
  9507                           postinc0	equ	0xFEE
  9508                           postdec0	equ	0xFED
  9509                           preinc0	equ	0xFEC
  9510                           plusw0	equ	0xFEB
  9511                           fsr0h	equ	0xFEA
  9512                           fsr0l	equ	0xFE9
  9513                           wreg	equ	0xFE8
  9514                           indf1	equ	0xFE7
  9515                           postinc1	equ	0xFE6
  9516                           postdec1	equ	0xFE5
  9517                           preinc1	equ	0xFE4
  9518                           plusw1	equ	0xFE3
  9519                           fsr1h	equ	0xFE2
  9520                           fsr1l	equ	0xFE1
  9521                           bsr	equ	0xFE0
  9522                           indf2	equ	0xFDF
  9523                           postinc2	equ	0xFDE
  9524                           postdec2	equ	0xFDD
  9525                           preinc2	equ	0xFDC
  9526                           plusw2	equ	0xFDB
  9527                           fsr2h	equ	0xFDA
  9528                           fsr2l	equ	0xFD9
  9529                           status	equ	0xFD8

Data Sizes:
    Strings     428
    Constant    0
    Data        133
    BSS         365
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     50      93
    BANK0           160      0     120
    BANK1           256      0     250
    BANK2           256      0      85
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    puts@s	PTR const unsigned char  size(2) Largest target is 140
		 -> STR_14(CODE[3]), d_log(BANK1[140]), STR_13(CODE[22]), 

    clcd_print@data	PTR const unsigned char  size(2) Largest target is 85
		 -> STR_34(CODE[17]), STR_33(CODE[3]), STR_32(CODE[3]), STR_31(CODE[3]), 
		 -> STR_30(CODE[9]), STR_29(CODE[17]), STR_28(CODE[17]), STR_27(CODE[13]), 
		 -> STR_26(CODE[13]), STR_25(CODE[5]), STR_24(CODE[9]), STR_23(CODE[17]), 
		 -> STR_22(CODE[17]), STR_21(CODE[17]), STR_20(CODE[17]), STR_19(CODE[17]), 
		 -> STR_18(CODE[17]), STR_17(CODE[17]), STR_16(CODE[17]), STR_15(CODE[17]), 
		 -> menu_op(BANK2[85]), STR_12(CODE[17]), STR_11(CODE[17]), ev(BANK0[39]), 
		 -> STR_10(CODE[17]), STR_9(CODE[17]), STR_8(CODE[17]), STR_7(CODE[17]), 
		 -> STR_6(CODE[17]), STR_5(CODE[17]), STR_4(CODE[17]), STR_3(CODE[17]), 
		 -> STR_2(CODE[17]), STR_1(CODE[17]), time(BANK0[9]), 


Critical Paths under _main in COMRAM

    _main->___fltol
    _view_log->_clcd_putch
    _set_time->_clcd_putch
    _password->_clcd_putch
    _menu->_clcd_putch
    _inti_config->_init_ds1307
    _init_ds1307->_read_ds1307
    _init_ds1307->_write_ds1307
    _write_ds1307->_i2c_write
    _init_clcd->_clcd_write
    _get_time->_read_ds1307
    _read_ds1307->_i2c_write
    _puts->_putch
    _dashboard->_clcd_putch
    _change_pass->_clcd_putch
    _store_event->___awdiv
    _write_ext_eeprom->_read_ext_eeprom
    _read_ext_eeprom->_i2c_write
    _clcd_putch->___awdiv
    _clcd_print->_clcd_write
    ___fltol->___fldiv
    ___fldiv->___xxtofl

Critical Paths under _isr in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _isr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _isr in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0  168204
                                             49 COMRAM     1     1      0
                            ___awdiv
                            ___awmod
                            ___fldiv
                            ___fltol
                           ___xxtofl
                        _change_pass
                          _clear_log
                          _dashboard
                       _download_log
                           _get_time
                        _inti_config
                               _menu
                           _password
                           _read_adc
                    _read_ext_eeprom
                      _read_switches
                           _set_time
                        _store_event
                           _view_log
 ---------------------------------------------------------------------------------
 (1) _view_log                                             4     4      0   17150
                                             10 COMRAM     4     4      0
                             ___wmul
                         _clcd_print
                         _clcd_putch
                         _clcd_write
                    _read_ext_eeprom
                      _read_switches
 ---------------------------------------------------------------------------------
 (2) _read_switches                                        1     1      0      44
                                              0 COMRAM     1     1      0
                           _scan_key
 ---------------------------------------------------------------------------------
 (3) _scan_key                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4    1931
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (1) _set_time                                             6     6      0   28066
                                             10 COMRAM     6     6      0
                            ___awdiv
                            ___awmod
                         _clcd_print
                         _clcd_putch
                         _clcd_write
                        _store_event
                       _write_ds1307
 ---------------------------------------------------------------------------------
 (1) _read_adc                                             7     5      2      45
                                              0 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 (1) _password                                             3     3      0   20938
                                             10 COMRAM     3     3      0
                            ___awdiv
                            ___awmod
                         _clcd_print
                         _clcd_putch
                         _clcd_write
                    _read_ext_eeprom
 ---------------------------------------------------------------------------------
 (1) _menu                                                 1     1      0   15107
                                             10 COMRAM     1     1      0
                         _clcd_print
                         _clcd_putch
                         _clcd_write
 ---------------------------------------------------------------------------------
 (1) _inti_config                                          0     0      0    2526
                           _init_adc
                          _init_clcd
                        _init_ds1307
                           _init_i2c
                 _init_matrix_keypad
                        _init_timer0
                          _init_uart
 ---------------------------------------------------------------------------------
 (2) _init_uart                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _init_timer0                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _init_matrix_keypad                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _init_i2c                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _init_ds1307                                          1     1      0     734
                                              3 COMRAM     1     1      0
                        _read_ds1307
                       _write_ds1307
 ---------------------------------------------------------------------------------
 (2) _write_ds1307                                         2     1      1     598
                                              1 COMRAM     2     1      1
                          _i2c_start
                           _i2c_stop
                          _i2c_write
 ---------------------------------------------------------------------------------
 (2) _init_clcd                                            1     1      0    1792
                                              2 COMRAM     1     1      0
                         _clcd_write
 ---------------------------------------------------------------------------------
 (2) _init_adc                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _get_time                                             0     0      0      67
                        _read_ds1307
 ---------------------------------------------------------------------------------
 (3) _read_ds1307                                          2     2      0      67
                                              1 COMRAM     2     2      0
                           _i2c_read
                      _i2c_rep_start
                          _i2c_start
                           _i2c_stop
                          _i2c_write
 ---------------------------------------------------------------------------------
 (1) _download_log                                         3     3      0   16013
                                              8 COMRAM     3     3      0
                         _clcd_print
                         _clcd_write
                               _puts
                    _read_ext_eeprom
                        _store_event
 ---------------------------------------------------------------------------------
 (2) _puts                                                 2     0      2     295
                                              1 COMRAM     2     0      2
                              _putch
 ---------------------------------------------------------------------------------
 (3) _putch                                                1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _dashboard                                            0     0      0   15063
                         _clcd_print
                         _clcd_putch
                         _clcd_write
 ---------------------------------------------------------------------------------
 (1) _clear_log                                            1     1      0   16348
                         _clcd_print
                         _clcd_write
                        _store_event
                   _write_ext_eeprom
 ---------------------------------------------------------------------------------
 (1) _change_pass                                          5     5      0   22376
                                             10 COMRAM     5     5      0
                         _clcd_print
                         _clcd_putch
                         _clcd_write
                        _store_event
                   _write_ext_eeprom
 ---------------------------------------------------------------------------------
 (1) _store_event                                          0     0      0    6528
                            ___awdiv
                            ___awmod
                    _read_ext_eeprom
                   _write_ext_eeprom
 ---------------------------------------------------------------------------------
 (2) _write_ext_eeprom                                     4     3      1     697
                                              3 COMRAM     4     3      1
                          _i2c_start
                           _i2c_stop
                          _i2c_write
                    _read_ext_eeprom (ARG)
 ---------------------------------------------------------------------------------
 (2) _read_ext_eeprom                                      2     2      0      67
                                              1 COMRAM     2     2      0
                           _i2c_read
                      _i2c_rep_start
                          _i2c_start
                           _i2c_stop
                          _i2c_write
 ---------------------------------------------------------------------------------
 (3) _i2c_write                                            1     1      0      22
                                              0 COMRAM     1     1      0
                           _i2c_idle
 ---------------------------------------------------------------------------------
 (3) _i2c_stop                                             0     0      0       0
                           _i2c_idle
 ---------------------------------------------------------------------------------
 (3) _i2c_start                                            0     0      0       0
                           _i2c_idle
 ---------------------------------------------------------------------------------
 (3) _i2c_rep_start                                        0     0      0       0
                           _i2c_idle
 ---------------------------------------------------------------------------------
 (3) _i2c_read                                             0     0      0       0
                         _i2c_no_ack
                        _i2c_rx_mode
 ---------------------------------------------------------------------------------
 (4) _i2c_rx_mode                                          0     0      0       0
                           _i2c_idle
 ---------------------------------------------------------------------------------
 (4) _i2c_idle                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _i2c_no_ack                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (2) ___awmod                                              6     2      4    3184
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              8     4      4    2580
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (2) _clcd_putch                                           2     1      1    5940
                                              8 COMRAM     2     1      1
                            ___awdiv (ARG)
                            ___awmod (ARG)
                             ___wmul (ARG)
                         _clcd_write
 ---------------------------------------------------------------------------------
 (2) _clcd_print                                           3     0      3    7331
                                              2 COMRAM     3     0      3
                         _clcd_write
 ---------------------------------------------------------------------------------
 (2) _clcd_write                                           2     1      1    1792
                                              0 COMRAM     2     1      1
 ---------------------------------------------------------------------------------
 (1) ___xxtofl                                            14    10      4     398
                                              0 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (1) ___fltol                                             10     6      4     305
                                             39 COMRAM    10     6      4
                            ___fldiv (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (1) ___fldiv                                             25    17      8    1399
                                             14 COMRAM    25    17      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (7) _isr                                                  0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   ___awdiv
   ___awmod
   ___fldiv
     ___xxtofl (ARG)
   ___fltol
     ___fldiv (ARG)
     ___xxtofl (ARG)
   ___xxtofl
   _change_pass
     _clcd_print
       _clcd_write
     _clcd_putch
       ___awdiv (ARG)
       ___awmod (ARG)
       ___wmul (ARG)
       _clcd_write (ARG)
     _clcd_write
     _store_event
       ___awdiv
       ___awmod
       _read_ext_eeprom
         _i2c_read
           _i2c_no_ack
           _i2c_rx_mode
             _i2c_idle
         _i2c_rep_start
           _i2c_idle
         _i2c_start
           _i2c_idle
         _i2c_stop
           _i2c_idle
         _i2c_write
           _i2c_idle
       _write_ext_eeprom
         _i2c_start
         _i2c_stop
         _i2c_write
         _read_ext_eeprom (ARG)
     _write_ext_eeprom
   _clear_log
     _clcd_print
     _clcd_write
     _store_event
     _write_ext_eeprom
   _dashboard
     _clcd_print
     _clcd_putch
     _clcd_write
   _download_log
     _clcd_print
     _clcd_write
     _puts
       _putch
     _read_ext_eeprom
     _store_event
   _get_time
     _read_ds1307
       _i2c_read
       _i2c_rep_start
       _i2c_start
       _i2c_stop
       _i2c_write
   _inti_config
     _init_adc
     _init_clcd
       _clcd_write
     _init_ds1307
       _read_ds1307
       _write_ds1307
         _i2c_start
         _i2c_stop
         _i2c_write
     _init_i2c
     _init_matrix_keypad
     _init_timer0
     _init_uart
   _menu
     _clcd_print
     _clcd_putch
     _clcd_write
   _password
     ___awdiv
     ___awmod
     _clcd_print
     _clcd_putch
     _clcd_write
     _read_ext_eeprom
   _read_adc
   _read_ext_eeprom
   _read_switches
     _scan_key
   _set_time
     ___awdiv
     ___awmod
     _clcd_print
     _clcd_putch
     _clcd_write
     _store_event
     _write_ds1307
   _store_event
   _view_log
     ___wmul
     _clcd_print
     _clcd_putch
     _clcd_write
     _read_ext_eeprom
     _read_switches

 _isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      27        0.0%
BITBIGSFRllll      281      0       0      25        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0      55       9       33.2%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      FA       7       97.7%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0      78       5       75.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     32      5D       1       98.9%
BITBIGSFRlh         19      0       0      17        0.0%
BITBIGSFRlllhl       F      0       0      24        0.0%
BITBIGSFRh           D      0       0      16        0.0%
BITBIGSFRllhhhh      B      0       0      18        0.0%
BITBIGSFRlllhhh      9      0       0      21        0.0%
BITBIGSFRlllhhh      8      0       0      20        0.0%
BITBIGSFRlllhhl      8      0       0      23        0.0%
BITBIGSFRlllhhh      7      0       0      19        0.0%
BITBIGSFRlllhhh      2      0       0      22        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     224      26        0.0%
DATA                 0      0     224       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.41 build 20230208172133 
Symbol Table                                                                                   Wed Oct 09 19:48:55 2024

               ___fldiv@aexp 0027                            _Y 004E                 ___fldiv@bexp 0026  
                          _i 003F                            _n 0037                 ___fldiv@sign 001F  
             clcd_print@addr 0005               clcd_print@data 0003                           l71 28F2  
                         l74 2618                           _GO 7E11                           l99 1A3A  
                         _i1 008B                           _j1 0035                 ___awdiv@sign 0006  
                         _ev 00B1                           _pa 0074                           _hr 0047  
        ___wmul@multiplicand 0003           _init_matrix_keypad 29AC            write_ext_eeprom@i 0005  
                        l215 254A                          l324 1340                          l245 17EA  
                        l166 0E80                          l345 157E                          l530 2932  
                        l418 06BE                          l602 1FEA                          l187 245E  
                        l604 1FFE                          l533 2740                          l605 2026  
                        l286 1BFE                          l606 2012                          l711 29CC  
                        l447 1F20                          l712 29CE                          l800 2962  
                        l536 276C                          l801 2968                          l617 24D4  
                        l722 29EE                          l562 234A                          l706 2996  
                        l571 2980                          l731 2A06                          l652 29AA  
                        l709 29BE                          l725 29FE                          l558 2828  
                        l734 2A0C                          l590 1F50                          l559 282C  
                        l719 29F6                          l671 28AC                          l807 2676  
                        l568 25B6                          l728 29DA                          l760 2882  
                        l584 29BC                          l592 1F64                          l737 29E6  
                        l497 0AA4                          l754 27B2                          l819 28D2  
                        l595 1F92                          l587 1F3C                          l668 27F2  
                        l596 1FCE                          l588 2028                          l757 2950  
                        l597 1FA6                          l589 1F78                          l599 1FBA  
                        _CKE 7E3E                          l795 2912                          l798 2954  
                        _GIE 7F97                          _RC0 7C10                          _RC1 7C11  
                        _RC2 7C12                          _RD7 7C1F                          _PEN 7E2A  
                        _SEN 7E28                          _PSA 7EAB                          _RX9 7D5E  
                        _SMP 7E3F                          _TX9 7D66                          _sp1 0058  
                        _sp2 0057                          _key 0054                          _min 0046  
                        _log 0041                          _sec 005D                          _isr 0008  
                        _set 005B               clcd_putch@addr 0009               clcd_putch@data 000A  
               ___awmod@sign 0006                          prod 0FF3                          wreg 0FE8  
        ?_init_matrix_keypad 0001                 ___fltol@exp1 0031                         l1050 21F2  
                       l1116 212E                         l1063 22A2                         l3000 2870  
                       l1401 121A                         l3010 2890                         l3002 287C  
                       l1403 107A                         l1412 10C0                         l3020 27F6  
                       l3012 2896                         l3100 1FB4                         l1414 1138  
                       l1406 103E                         l3030 2812                         l3022 2808  
                       l3014 289A                         l3006 2886                         l3110 1FE4  
                       l1415 1126                         l3032 2814                         l3024 280C  
                       l3200 2242                         l3016 28A6                         l3008 288A  
                       l3040 27B6                         l4000 0BB6                         l3034 2816  
                       l3026 280E                         l3210 227C                         l3202 224A  
                       l3050 27D0                         l3042 27BA                         l4010 0BF4  
                       l4002 0BBE                         l3122 200C                         l3106 1FC8  
                       l4100 0ECE                         l3036 2818                         l3028 2810  
                       l3140 2130                         l3204 2258                         l3212 2282  
                       l3052 27D8                         l3044 27C0                         l4020 0C54  
                       l4004 0BD2                         l4012 0C00                         l3060 2946  
                       l3220 29AC                         l3300 29A8                         l3132 2026  
                       l3116 1FF8                         l4110 0EF4                         l4102 0ED0  
                       l3038 281A                         l3150 215C                         l3142 2134  
                       l3214 2292                         l3206 226E                         l3046 27C6  
                       l3310 1DB4                         l4030 0C9C                         l4022 0C60  
                       l4014 0C12                         l4006 0BDA                         l3230 22AE  
                       l3062 294C                         l3054 2936                         l3222 29B4  
                       l3302 28F4                         l4200 118C                         l4120 0F34  
                       l4112 0F02                         l4104 0ED8                         l3160 218A  
                       l3152 2164                         l3144 2142                         l3216 229A  
                       l3208 2276                         l3048 27CC                         l3320 1E3E  
                       l3312 1DCC                         l4024 0C64                         l4016 0C28  
                       l4032 0CA0                         l4008 0BE4                         l3136 2954  
                       l3400 261E                         l3240 22E4                         l3232 22B0  
                       l3056 293A                         l3224 29B6                         l3304 290A  
                       l3128 2020                         l3072 1F4A                         l3064 1F22  
                       l1481 1CEE                         l4210 11F6                         l4202 1190  
                       l4130 0F74                         l4122 0F36                         l4114 0F04  
                       l4106 0EE8                         l1474 1C56                         l3170 21C4  
                       l3162 2192                         l3154 2168                         l3146 214A  
                       l3322 1E46                         l3314 1DF6                         l4050 0D3C  
                       l4042 0CEA                         l4034 0CB4                         l4026 0C76  
                       l4018 0C3A                         l3138 2964                         l3402 2642  
                       l3250 230E                         l3242 22EC                         l3234 22C0  
                       l3226 22A4                         l3058 2940                         l3306 290E  
                       l3066 1F36                         l4212 11FA                         l4204 11AA  
                       l4140 0FA4                         l4132 0F7C                         l4116 0F14  
                       l4124 0F3E                         l4108 0EEE                         l4300 1D58  
                       l3180 21EA                         l3172 21C6                         l3164 21A0  
                       l3156 2170                         l3148 214E                         l3332 1E6E  
                       l3316 1E10                         l4060 0D7C                         l4052 0D50  
                       l4044 0D26                         l4036 0CC8                         l4028 0C90  
                       l3404 2646                         l3260 2342                         l3252 2318  
                       l3244 22F6                         l3236 22CA                         l3228 22A8  
                       l3308 2910                         l3420 28EA                         l3412 28D4  
                       l3500 12E6                         l3084 1F72                         l1477 1DB2  
                       l4214 1208                         l4206 11C0                         l4150 0FE2  
                       l4142 0FA4                         l4134 0F80                         l4126 0F4E  
                       l4118 0F24                         l4310 1DA0                         l4302 1D5A  
                       l3174 21CC                         l3166 21A6                         l3158 2182  
                       l3190 220E                         l3350 1ED6                         l3334 1E8A  
                       l3326 1E66                         l3342 1EB2                         l3318 1E2A  
                       l4070 0DC6                         l4054 0D5A                         l4062 0D88  
                       l4046 0D34                         l4038 0CD0                         l3430 25E8  
                       l3262 2914                         l3254 2320                         l3246 22FC  
                       l3238 22DA                         l3270 2986                         l3422 28EE  
                       l3414 28D6                         l3510 137E                         l3502 1314  
                       l3406 28AE                         l3094 1FA0                         l3078 1F5E  
                       l4216 120E                         l4208 11DA                         l4160 102E  
                       l4152 0FF2                         l4128 0F64                         l4240 2094  
                       l4232 2054                         l4312 1DA2                         l4304 1D5E  
                       l1488 1D4A                         l3168 21BC                         l3176 21D2  
                       l3192 2212                         l3184 21F4                         l3352 1EE0  
                       l3336 1E8E                         l4080 0E08                         l4072 0DD0  
                       l4064 0DA8                         l4056 0D6A                         l3440 260C  
                       l3432 25EC                         l3424 25B8                         l3264 2928  
                       l3256 232A                         l3248 2306                         l3280 276E  
                       l3272 298E                         l3416 28DE                         l3600 1AF8  
                       l3520 13DA                         l3512 138E                         l3504 132A  
                       l3408 28CA                         l3088 1F8C                         l3360 2462  
                       l4400 1A30                         l4320 1806                         l4218 1210  
                       l4170 1078                         l4162 103C                         l4154 1002  
                       l4146 0FB8                         l4138 0F94                         l4090 0E8E  
                       l4250 20C4                         l4242 20A2                         l4234 207E  
                       l4226 202A                         l4306 1D82                         l3178 21E2  
                       l3194 2220                         l3186 21F8                         l3354 1EE4  
                       l3338 1EAA                         l4082 0E2A                         l4066 0DB2  
                       l4058 0D74                         l3442 2614                         l3434 25F6  
                       l3426 25D6                         l3266 2930                         l3258 2338  
                       l3290 279E                         l3282 2776                         l3274 2990  
                       l3418 28E2                         l3610 1B44                         l3602 1B02  
                       l3530 13FC                         l3522 13DE                         l3514 1396  
                       l3506 1344                         l3450 2764                         l3362 2472  
                       l4330 1896                         l4322 1814                         l4180 10BE  
                       l4172 108A                         l4164 1048                         l4156 100A  
                       l4148 0FD2                         l4092 0E9C                         l4260 20EE  
                       l4252 20CE                         l4236 2080                         l4228 2040  
                       l4308 1D92                         l3196 2228                         l3188 2206  
                       l3356 1F00                         l3348 1EBA                         l4084 0E58  
                       l4068 0DBC                         l4076 0DDE                         l3460 2518  
                       l3436 25FE                         l3428 25E0                         l3292 27A6  
                       l3284 2782                         l3276 2992                         l3268 2982  
                       l3620 1B74                         l3612 1B4C                         l3604 1B1A  
                       l3540 142C                         l3532 140C                         l3524 13E4  
                       l3508 1356                         l3444 272A                         l3380 24CA  
                       l3364 2478                         l3700 0998                         l4340 18D4  
                       l4332 189E                         l4324 1862                         l4316 17EC  
                       l4190 111E                         l4174 10A0                         l4182 10D0  
                       l4166 1066                         l4158 101A                         l4094 0E9E  
                       l4262 20FE                         l4238 2090                         l4270 1C02  
                       l3390 255A                         l3198 223A                         l3358 1F1C  
                       l4086 0E6E                         l4078 0DF4                         l3470 2546  
                       l3462 2522                         l3454 24D6                         l3438 2602  
                       l3286 278A                         l3278 2994                         l3294 2998  
                       l3630 1BCC                         l3622 1B8A                         l3614 1B5C  
                       l3606 1B2C                         l3550 14A2                         l3542 143E  
                       l3534 1410                         l3518 13B0                         l3446 273E  
                       l3366 2488                         l3374 24A2                         l3710 09FE  
                       l3702 09B8                         l4350 1914                         l4342 18D8  
                       l4334 18B0                         l4326 187A                         l4318 1802  
                       l4184 10DE                         l4176 10A6                         l4168 1068  
                       l4096 0EAE                         l4088 0E82                         l4264 210E  
                       l4248 20BA                         l4272 1C12                         l3392 2582  
                       l3464 2534                         l3456 24F6                         l3288 2794  
                       l3296 299E                         l3632 1BE4                         l3624 1B96  
                       l3608 1B34                         l3616 1B5E                         l3552 14A4  
                       l3560 14D4                         l3544 1462                         l3536 1414  
                       l3528 13EC                         l3480 125E                         l3472 121E  
                       l3448 274E                         l3800 0024                         l3376 24B2  
                       l3384 24D2                         l3368 2498                         l3720 0A6A  
                       l3712 0A28                         l3704 09C6                         l3640 06D0  
                       l4360 193C                         l4352 1916                         l4336 18C0  
                       l4344 18E0                         l4328 1892                         l4194 1148  
                       l4186 10E2                         l4178 10B0                         l4098 0EBE  
                       l4266 211E                         l4258 20E2                         l4290 1CD8  
                       l4282 1C90                         l4274 1C20                         l3394 2586  
                       l3466 253E                         l3458 250E                         l3730 1594  
                       l3298 29A6                         l3634 1BEC                         l3618 1B70  
                       l3626 1BA4                         l3570 1528                         l3562 14EE  
                       l3554 14C4                         l3546 1472                         l3538 141C  
                       l3490 1292                         l3482 1262                         l3474 122E  
                       l3810 0066                         l3802 0044                         l3378 24BA  
                       l3722 0A7C                         l3706 09E4                         l3714 0A2C  
                       l3650 06FA                         l3642 06E0                         l4370 196C  
                       l4346 18F2                         l4338 18C2                         l4196 1154  
                       l4188 10F0                         l4292 1CE4                         l4284 1C98  
                       l4276 1C66                         l3388 254C                         l3396 296C  
                       l3468 2542                         l3740 15C8                         l3732 1598  
                       l3636 1BFC                         l3628 1BBA                         l3580 1A44  
                       l3572 152A                         l3564 14FA                         l3556 14C8  
                       l3548 1492                         l3492 12A4                         l3484 1274  
                       l3476 123E                         l3900 0452                         l3820 00A8  
                       l3812 006A                         l3804 0048                         l3724 0A84  
                       l3716 0A3E                         l3708 09F6                         l3652 0736  
                       l3644 06F2                         l3660 077A                         l4380 19AC  
                       l4372 1976                         l4348 1902                         l4364 1944  
                       l4198 1162                         l4294 1D20                         l4286 1CA4  
                       l4278 1C7C                         l3398 261A                         l3750 1664  
                       l3742 15D0                         l3734 159C                         l3590 1AC2  
                       l3582 1A74                         l3574 1532                         l3558 14CC  
                       l3566 1508                         l3494 12B4                         l3486 1284  
                       l3478 124E                         l3910 0518                         l3902 045A  
                       l3830 00DE                         l3822 00B8                         l3806 0058  
                       l3814 0072                         l3726 0A9E                         l3718 0A4C  
                       l3670 07EE                         l3662 0786                         l3654 073A  
                       l3638 06C0                         l4390 19E6                         l4382 19B4  
                       l4374 1988                         l4366 1954                         l4358 192C  
                       l4296 1D2C                         l4288 1CD6                         l3760 1736  
                       l3752 1696                         l3744 15FA                         l3736 15AC  
                       l3728 1580                         l3592 1AC8                         l3584 1A84  
                       l3576 1550                         l3568 1518                         l3496 12C0  
                       l3488 1290                         l3912 0522                         l3904 0496  
                       l3920 0542                         l3832 00EE                         l3840 0120  
                       l3824 00C2                         l3816 0084                         l3808 0062  
                       l3680 08A0                         l3672 0818                         l3664 0790  
                       l3656 0756                         l4392 19F8                         l4384 19C4  
                       l4376 1990                         l4368 195C                         l4298 1D3A  
                       l2962 29BE                         l2970 29F0                         l3762 1754  
                       l3754 16B4                         l3746 1616                         l3770 1794  
                       l3738 15BC                         l3594 1ADE                         l3586 1A9C  
                       l3578 156E                         l3498 12C2                         l3930 05A4  
                       l3922 055A                         l3914 052C                         l3906 04D2  
                       l3850 01B2                         l3842 0130                         l3834 0114  
                       l3826 00C6                         l3818 00A4                         l3690 0932  
                       l3682 08AA                         l3674 0842                         l3666 07BA  
                       l3658 075C                         l4394 1A02                         l4386 19CE  
                       l4378 199A                         l2964 2A00                         l2972 29F2  
                       l2980 29EA                         l3780 23F2                         l3764 1772  
                       l3756 16E6                         l3748 1646                         l3772 17B8  
                       l3596 1AEA                         l3588 1AB0                         l3940 05FE  
                       l3932 05AA                         l3924 056C                         l3916 0530  
                       l3908 050E                         l3860 0232                         l3852 01BC  
                       l3844 016C                         l3836 0118                         l3828 00CE  
                       l3692 095C                         l3684 08D4                         l3676 084C  
                       l3668 07E4                         l4396 1A14                         l4388 19DE  
                       l2966 2A02                         l2982 29F8                         l2974 29D2  
                       l3790 241C                         l3782 23FA                         l3774 17D4  
                       l3766 1786                         l3758 1704                         l3598 1AF4  
                       l3950 0670                         l3942 060E                         l3934 05C0  
                       l3926 0588                         l3918 0534                         l3870 02BE  
                       l3862 026E                         l3854 01CE                         l3846 0176  
                       l3838 011C                         l3694 0964                         l3686 08FE  
                       l3678 0876                         l4398 1A1E                         l2968 2A08  
                       l2984 29FA                         l2976 29D6                         l3784 2404  
                       l3792 242C                         l3776 17E0                         l3768 1792  
                       l2992 285C                         l3960 06BC                         l3952 068C  
                       l3944 062E                         l3936 05D4                         l3928 0592  
                       l3880 0372                         l3872 02D0                         l3864 0278  
                       l3856 020E                         l3848 0194                         l3696 0976  
                       l3688 0908                         l2986 29DC                         l2978 29E8  
                       l3970 0AE0                         l3962 0AA8                         l3794 2448  
                       l3786 2408                         l3778 23DE                         l2994 2860  
                       l3946 063E                         l3938 05EC                         l3890 03D4  
                       l3882 037C                         l3874 0310                         l3866 0296  
                       l3858 0222                         l3954 0696                         l3698 097C  
                       l2988 29E4                         l3980 0B14                         l3972 0AE4  
                       l3964 0ABC                         l3796 2454                         l3788 240C  
                       l2996 2866                         l3956 06B0                         l3948 065E  
                       l3892 0414                         l3884 039A                         l3868 02B4  
                       l3876 0324                         l3990 0B6E                         l3982 0B2A  
                       l3974 0AEC                         l3966 0AD8                         l2998 286C  
                       l3958 06B8                         l3886 03B8                         l3878 0336  
                       l3894 0424                         l3798 0014                         l3992 0B7A  
                       l3984 0B32                         l3976 0AF6                         l3968 0ADC  
                       l3896 0436                         l3888 03C2                         _ADFM 7E07  
                       l3994 0B7E                         l3986 0B42                         l3978 0B02  
                       l3898 043C                         l3996 0B90                         l3988 0B54  
                       ?_isr 0001                         l3998 0BAA                         _ADON 7E10  
                       STR_1 2FBD                         STR_2 2F8A                         STR_3 2FAC  
                       STR_4 2F9B                         STR_5 2F79                         STR_6 2F68  
                       STR_7 2F57                         STR_8 2F35                         STR_9 2F46  
                       _BRGH 7D62                         _CREN 7D5C                         _T0CS 7EAD  
                       u2100 2828                         u2101 2824                         u2110 27F2  
                       u2111 27EE                         u2200 1FE4                         u2120 1F36  
                       u3000 0A9E                         u2201 1FE0                         u2121 1F32  
                       u3001 0A9A                         u3010 1594                         u2210 1FF8  
                       u2130 1F4A                         u3011 1590                         u2211 1FF4  
                       u2131 1F46                         u2300 21E2                         u3020 17B8  
                       u3100 00EE                         u2220 200C                         u2140 1F5E  
                       u2301 21DE                         u3021 17B4                         u3101 00EA  
                       u2221 2008                         u2141 1F5A                         u2310 2206  
                       u2070 29CC                         u3030 17D4                         u3110 0130  
                       u2230 2020                         u2150 1F72                         u2311 2202  
                       u2071 29C8                         u3031 17D0                         u3111 012C  
                       u2231 201C                         u2151 1F6E                         u2080 2806  
                       u2320 2220                         u2400 1F00                         u3040 23F2  
                       u2240 2962                         u3200 056C                         u3120 01CE  
                       u2160 1F8C                         u4000 196C                         u2081 2800  
                       u2321 221C                         u2401 1EFC                         u3041 23EE  
                       u2241 295E                         u3201 0568                         u3121 01CA  
                       u2161 1F88                         u4001 1968                         u2250 2142  
                       u2330 223A                         u2410 1F1C                         u3050 2448  
                       u3210 05A4                         u3130 0232                         u2170 1FA0  
                       u4010 1988                         u2251 213E                         u2331 2236  
                       u2411 1F18                         u3051 2444                         u3211 05A0  
                       u3131 022E                         u2171 1F9C                         u4011 1984  
                       u2260 215C                         u2340 2258                         u3300 0AD8  
                       u2500 263E                         u3220 05C0                         u3140 02D0  
                       u3060 0024                         u2180 1FB4                         u2420 2472  
                       u4020 19AC                         u2261 2158                         u2341 2254  
                       u3301 0AD4                         u3221 05BC                         u3141 02CC  
                       u3061 0020                         u2181 1FB0                         u2421 246E  
                       u4021 19A8                         u2270 2182                         u2350 226E  
                       u3310 0B14                         u2510 2666                         u3230 05EC  
                       u3150 0336                         u3070 0058                         u2190 1FC8  
                       u2430 2488                         u4030 19C4                         u2095 2808  
                       u2271 217E                         u2351 226A                         u3311 0B10  
                       u3231 05E8                         u3151 0332                         u3071 0054  
                       u2191 1FC4                         u2431 2484                         u4031 19C0  
                       u2280 21A0                         u2360 2292                         u3400 0CB4  
                       u3320 0B2A                         u2520 2676                         u2600 12E6  
                       u3240 05FE                         u3160 03D4                         u3080 0084  
                       u2440 2498                         u4040 19DE                         u2281 219C  
                       u2361 228E                         u3401 0CB0                         u3321 0B26  
                       u2521 2672                         u2601 12E2                         u3241 05FA  
                       u3161 03D0                         u3081 0080                         u2441 2494  
                       u4041 19DA                         u2290 21BC                         u2370 1E3E  
                       u3410 0CC8                         u3330 0B54                         u2610 1300  
                       u2530 274E                         u3250 060E                         u3170 0436  
                       u3090 00B8                         u2450 24B2                         u4050 19F8  
                       u2291 21B8                         u2371 1E3A                         u3411 0CC4  
                       u3331 0B50                         u2507 2634                         u2611 12FA  
                       u2531 274A                         u3251 060A                         u3171 0432  
                       u3091 00B4                         u2451 24AE                         u4051 19F4  
                       u2380 1E62                         u3500 0E58                         u3420 0CE6  
                       u3340 0B90                         u2540 2534                         u2700 143E  
                       u2620 1302                         u3260 063E                         u3180 0452  
                       u2460 24CA                         u4060 1A14                         u2381 1E5E  
                       u3501 0E54                         u3421 0CE2                         u3341 0B8C  
                       u2541 2530                         u2517 265C                         u4117 22B6  
                       u2701 143A                         u3261 063A                         u3181 044E  
                       u2461 24C6                         u4061 1A10                         u3510 0E9C  
                       u2470 257E                         u2390 1EAA                         u3430 0D26  
                       u3350 0BD2                         u2710 1472                         u2630 1314  
                       u2550 122E                         u3270 0670                         u3190 055A  
                       u4070 1A30                         u3511 0E98                         u2391 1EA6  
                       u3431 0D22                         u3351 0BCE                         u4127 22D0  
                       u2711 146E                         u2631 1310                         u2551 122A  
                       u3271 066C                         u3191 0556                         u4071 1A2C  
                       u3600 103C                         u3520 0EAE                         u2480 25A6  
                       u3440 0D50                         u3360 0C12                         u2800 1B2C  
                       u2720 14A2                         u2640 1356                         u2560 123E  
                       u3280 06B0                         u3601 1038                         u3521 0EAA  
                       u3441 0D4C                         u3361 0C0E                         u4137 22E6  
                       u2801 1B28                         u2721 149E                         u2641 1352  
                       u2561 123A                         u3281 06AC                         u3610 1066  
                       u3530 0EBE                         u2490 25B6                         u3450 0DF4  
                       u3370 0C28                         u3290 0ABC                         u2810 1B44  
                       u2730 14EE                         u2650 138E                         u2570 124E  
                       u3611 1062                         u3531 0EBA                         u2491 25B2  
                       u3451 0DF0                         u3371 0C24                         u3291 0AB8  
                       u4147 2308                         u2811 1B40                         u2731 14EA  
                       u2651 138A                         u2571 124A                         u3700 1162  
                       u3620 108A                         u3540 0F02                         u3460 0E08  
                       u3380 0C3A                         u2820 1B5C                         u2740 1518  
                       u2660 13AC                         u2580 1274                         u2900 0756  
                       u3701 115E                         u3621 1086                         u3541 0EFE  
                       u2477 2574                         u3461 0E04                         u3381 0C36  
                       u4157 231A                         u2821 1B58                         u2741 1514  
                       u2661 13A8                         u2581 1270                         u2901 0752  
                       u3710 11AA                         u3630 10A0                         u3550 0F14  
                       u3470 0E2A                         u3390 0C76                         u2830 1B70  
                       u2750 1528                         u2670 13DA                         u2590 12A4  
                       u2910 077A                         u3711 11A6                         u3631 109C  
                       u3551 0F10                         u2487 259C                         u3471 0E26  
                       u3391 0C72                         u4167 2330                         u2831 1B6C  
                       u2751 1524                         u2671 13D6                         u2591 12A0  
                       u2911 0776                         u3720 11DA                         u3640 10BE  
                       u3560 0F24                         u3800 210E                         u3480 0E44  
                       u2840 1B8A                         u2760 1A84                         u2680 13FC  
                       u2920 0976                         u3721 11D6                         u3641 10BA  
                       u3561 0F20                         u3801 210A                         u3481 0E3E  
                       u4177 2344                         u2841 1B86                         u2761 1A80  
                       u2681 13F8                         u2921 0972                         u3730 1208  
                       u3650 10DE                         u3570 0F64                         u3810 1C12  
                       u3490 0E46                         u2850 1BBA                         u2770 1AC2  
                       u2690 142C                         u2930 0998                         u3731 1204  
                       u3651 10DA                         u3571 0F60                         u3811 1C0E  
                       u2851 1BB6                         u2771 1ABE                         u2691 1428  
                       u2931 0994                         u3660 10F0                         u3580 0FA4  
                       u3740 2040                         u3900 1DA0                         u3820 1C20  
                       u2860 1BCC                         u2780 1ADE                         u2940 09E4  
                       u3661 10EC                         u3581 0FA0                         u3741 203C  
                       u3901 1D9C                         u3821 1C1C                         u2861 1BC8  
                       u2781 1ADA                         u2941 09E0                         u3670 111E  
                       u3590 101A                         u3750 2074                         u3830 1C7C  
                       u2870 1BE4                         u2790 1B1A                         u2950 09F6  
                       u3910 18B0                         u3671 111A                         u3591 1016  
                       u3831 1C78                         u2871 1BE0                         u2791 1B16  
                       u2951 09F2                         u3911 18AC                         u3680 1134  
                       u3760 20A2                         u3840 1CD2                         u2880 1BFC  
                       u2960 0A28                         u3920 18C0                         u3681 1130  
                       u3761 209E                         u3841 1CCE                         u2881 1BF8  
                       u2961 0A24                         u3921 18BC                         u3690 1148  
                       u3770 20B6                         u3850 1D1C                         u2970 0A3E  
                       u2890 06E0                         u3930 18D4                         u3691 1144  
                       u3771 20B2                         u3755 206A                         u3851 1D18  
                       u2971 0A3A                         u2891 06DC                         u3931 18D0  
                       u3780 20DE                         u3860 1D3A                         u2980 0A6A  
                       u3940 18F2                         _RCEN 7E2B                         _RCIF 7CF5  
                       u3781 20DA                         u3861 1D36                         u2981 0A66  
                       u3941 18EE                         u3790 20FE                         u3870 1D4A  
                       u2990 0A7C                         u3950 1902                         u3791 20FA  
                       u3871 1D46                         u2991 0A78                         u3951 18FE  
                       u3880 1D58                         u3960 1914                         u3881 1D54  
                       u3961 1910                         u3890 1D92                         u3970 1928  
                       u3891 1D8E                         u3971 1924                         u3980 193C  
                       u3981 1938                         u3990 1954                         u3991 1950  
                       _RBPU 7F8F                         _TMR0 0FD6                         _SPEN 7D5F  
                       _RSEN 7E29                         _TXEN 7D65                         _TXIF 7CF4  
                       _SYNC 7D64                         _flag 004C                         _main 17EC  
                       _menu 1A42                         _same 009F                         _pass 00AC  
                       _repa 006A                         _secs 0045                         _wait 0091  
                       _time 00A3                         fsr1h 0FE2                         fsr2h 0FDA  
                       indf1 0FE7                         indf2 0FDF                         fsr1l 0FE1  
                       fsr2l 0FD9                         btemp 005E                         _puts 261A  
                       prodh 0FF4                         prodl 0FF3                         start 000E  
            ___fldiv@new_exp 0020         ??_init_matrix_keypad 0001                 ___param_bank 0000  
             clcd_write@byte 0002                  _store_event 1DB4                _i2c_rep_start 29F8  
              ??_i2c_rx_mode 0001                        ??_isr 0001                 ?_init_ds1307 0001  
              ___fltol@sign1 0030                        _ADCS0 7E00                        _ADCS1 7E01  
                      _ADCS2 7E02                        ?_main 0001                 ?_read_ds1307 0001  
                      _ACKEN 7E2C                        _ACKDT 7E2D                        ?_menu 0001  
                      _BCLIF 7D0B              __end_of___fldiv 121C                        _ACQT0 7E03  
                      _ACQT1 7E04                        _ACQT2 7E05              __end_of___awdiv 21F4  
                      STR_10 2F24                        STR_11 2F13                        STR_12 2F02  
                      STR_20 2EE0                        STR_21 2E9C                        STR_13 2E53  
                      STR_14 2E66                        STR_30 2FE8                        STR_22 2EBE  
                      STR_31 2F65                        STR_23 2ECF                        STR_15 2EAD  
                      STR_32 2F65                        STR_16 2F68                        STR_24 2FF1  
                      _BRG16 7DC3                        STR_33 2F65                        STR_17 2F57  
                      STR_25 2FFA                        STR_26 2FCE                        STR_18 2EF1  
                      STR_34 2E69                        STR_27 2FDB                        STR_19 2E9C  
                      STR_28 2E8B              __end_of___awmod 22A4                        STR_29 2E7A  
            __end_of___fltol 2130                        ?_puts 0002              ___awdiv@divisor 0003  
                      i2l637 26CE              ___awdiv@counter 0005                        _VCFG0 7E0C  
                      _VCFG1 7E0D                        _RCREG 0FAE                        _SENDB 7D63  
                      _SPBRG 0FAF                        _PORTB 0F81                        _PORTD 0F83  
                      _TRISB 0F93                        _TRISC 0F94                        _TRISD 0F95  
                      _SSPIF 7CF3                        _TXREG 0FAD                 ?_init_timer0 0001  
                      _d_log 0100                        _blink 0039                        _field 0044  
                      _wait1 0097                        _wait3 0095                        _time1 0093  
                      _time2 003B                        _time3 008F                        _time4 008D  
                      _time5 0089                        _time6 0087                        _speed 0059  
                      _putch 2952                        _store 0060                 ?_inti_config 0001  
                      tablat 0FF5                        puts@s 0002                        ttemp5 005F  
                      ttemp6 0062                        ttemp7 0066                        status 0FD8  
                      wtemp8 005F             init_ds1307@dummy 0004                   _i2c_no_ack 2A08  
            __initialization 234C               ?_i2c_rep_start 0001                 __end_of_main 1A42  
               __end_of_menu 1C00                 __end_of_puts 2678             __end_of_i2c_idle 29D0  
           __end_of_i2c_read 29E8             __end_of_i2c_stop 29F0            ??_read_ext_eeprom 0002  
              ?_download_log 0001                       ??_main 0032                       ??_menu 000B  
                     ??_puts 0004                __activetblptr 0002          __end_of_i2c_rx_mode 2A08  
       write_ext_eeprom@data 0004                       _ADCON0 0FC2                       _ADCON1 0FC1  
           read_switches@key 0043                       _ADRESH 0FC4                       _ADRESL 0FC3  
                     _T08BIT 7EAE             ___awdiv@dividend 0001             _write_ext_eeprom 27B4  
                     ?_putch 0001                       _GODONE 7E11                       i2l4410 26CC  
                     i2l4402 267A                       i2l4404 2688                       i2l4406 26B2  
                     i2l4408 26CA                 _write_ds1307 2934                       _TMR0IE 7F95  
                     _TMR0IF 7F92                       _TMR0ON 7EAF                       _SSPADD 0FC8  
                     _TRISC3 7CA3                       _TRISC4 7CA4                       _TRISC6 7CA6  
                     _TRISC7 7CA7                       _TRISD7 7CAF                       _SSPBUF 0FC9  
           __end_of___xxtofl 1DB4             __end_of_get_time 261A                       ___wmul 28AE  
            set_time@min_reg 000E                    ??___fldiv 0017                    ??___awdiv 0005  
                  ??___awmod 0005                    ??___fltol 002C              set_time@sec_reg 000F  
                     _count1 003D                       _main_f 0055             __end_of_init_i2c 2998  
                     _ev_ind 0056             __end_of_init_adc 2934                       _menu_f 0053  
           __end_of_read_adc 276E                       clear_0 23B2                       clear_1 23BE  
                     clear_2 23CA               ??_download_log 0009             ___awdiv@quotient 0007  
            ___awmod@divisor 0003                       isa$std 0001                       _wait_f 004A  
           __end_of_scan_key 202A              ___awmod@counter 0005             __end_of_password 1580  
               __pdataCOMRAM 005A             __end_of_set_time 06C0                 __mediumconst 2E52  
                     tblptrh 0FF7                       tblptrl 0FF6                       tblptru 0FF8  
           __end_of_view_log 0AA6                 ___xxtofl@arg 000B                 ___xxtofl@exp 000A  
               ___xxtofl@val 0001                   __accesstop 0060      __end_of__initialization 23D0  
              ___rparam_used 0001                   ___fltol@f1 0028              ??_i2c_rep_start 0001  
                ?_i2c_no_ack 0001               __pcstackCOMRAM 0001                 __pidataBANK0 282E  
               __pidataBANK2 26D2                  _i2c_rx_mode 2A00                __end_of_putch 296A  
          __end_of_i2c_start 29F8            __end_of_i2c_write 29DC                      ??_putch 0001  
    write_ext_eeprom@address 0007                   __pbssBANK0 0060                   __pbssBANK1 0100  
                  ?_i2c_idle 0001                    ?_i2c_read 0001                    ?_i2c_stop 0001  
                 _clcd_print 254C                   _clcd_putch 296A                   _clcd_write 27F4  
               ?_store_event 0001              read_ds1307@data 0003                      ?___wmul 0001  
          read_switches@once 005A                      _ACKSTAT 7E2E                    ?___xxtofl 0001  
                password@key 000D                      _SSPCON1 0FC6                    ?_get_time 0001  
              _read_switches 2460                 menu@menu_key 000B                   ??_i2c_idle 0001  
                 ??_i2c_read 0001            __end_of_dashboard 254C                   ??_i2c_stop 0001  
                  ?_init_i2c 0001         __end_of_download_log 17EC                    ?_init_adc 0001  
                  ?_read_adc 0001            __end_of_clear_log 2460                    ?_scan_key 0001  
            _read_ext_eeprom 2884                      __Hparam 0000                    ?_password 0001  
                    __Lparam 0000                    ?_set_time 0001                      ___fldiv 0E82  
                    ___awdiv 2130                      ___awmod 21F4                    ?_view_log 0001  
                    ___fltol 202A     __end_of_write_ext_eeprom 27F4             set_time@menu_key 0010  
                    __pcinit 234C                      __ramtop 0600                      __ptext0 17EC  
                    __ptext1 06C0                      __ptext2 2460                      __ptext3 1F22  
                    __ptext4 28AE                      __ptext5 0012                      __ptext6 2728  
                    __ptext7 121C                      __ptext8 1A42                      __ptext9 28D4  
                    _in_flag 0049                      _attempt 005C            __end_of_init_clcd 234C  
                    _re_flag 009D                      _menu_op 0200                   ??___xxtofl 0005  
                    _tc_flag 004D            __end_of_init_uart 2914             ___awmod@dividend 0001  
              ??_change_pass 000B                      _timeout 0048                   _input_pass 007E  
             ?_read_switches 0001                   ??_get_time 0004               __pintcode_body 2678  
       end_of_initialization 23D0                   ??_init_i2c 0001                   ??_init_adc 0001  
              __Lmediumconst 2E52                   ??_read_adc 0003                      int_func 2678  
                 ??_scan_key 0001                  ?_clcd_print 0003                  ?_clcd_putch 0009  
                ?_clcd_write 0001                   ??_password 000B                   ??_set_time 000B  
                    postdec1 0FE5                      postdec2 0FDD                      postinc0 0FEE  
                    postinc1 0FE6                      postinc2 0FDE                   ??_view_log 000B  
                  _PORTBbits 0F81              read_adc@channel 0007                i2c_write@data 0001  
                 _view_array 018C                ___xxtofl@sign 0009              read_adc@reg_val 0005  
                ___fldiv@grs 0022                  ___fldiv@rem 001B      __end_of_read_ext_eeprom 28AE  
        __end_of_change_pass 0E82                 ??_i2c_no_ack 0001                 ?_i2c_rx_mode 0001  
             __end_of___wmul 28D4                __pidataCOMRAM 2A0E                  _adc_reg_val 00A1  
                view_log@key 000E          start_initialization 234C              ??_read_switches 0001  
                  _i2c_start 29F0                  __end_of_isr 26D2                    _i2c_write 29D0  
         __end_of_i2c_no_ack 2A0E        __end_of_i2c_rep_start 2A00               set_time@hr_reg 000D  
                   ??___wmul 0005                ??_init_ds1307 0004                  __pdataBANK0 00AC  
                __pdataBANK2 0200                ??_read_ds1307 0002                 _download_log 1580  
read_switches@detection_type 0001                    ___fldiv@a 0013                    ___fldiv@b 000F  
              ??_init_timer0 0001                  __pbssCOMRAM 0033                  _change_pass 0AA6  
                 ?_i2c_start 0001                   ?_i2c_write 0001               change_pass@key 000F  
           ?_read_ext_eeprom 0001                ??_inti_config 0005                    _dashboard 24D6  
                  _clear_log 23DE                    __pintcode 0008                __pmediumconst 2E52  
                   ?___fldiv 000F                     ?___awdiv 0001                     ?___awmod 0001  
                   ?___fltol 0028           read_ds1307@address 0002                    _clock_reg 0082  
          ?_write_ext_eeprom 0004                    _go_back_f 009B                  _blink_delay 0099  
         ??_write_ext_eeprom 0005                  _blink_state 0051                    _attempt_f 004B  
        __end_of_init_ds1307 27B4          __end_of_read_ds1307 2884                    _init_clcd 22A4  
                  _init_uart 28F4                ?_write_ds1307 0002          __end_of_init_timer0 29AC  
             ___wmul@product 0005                 ??_clcd_print 0006                 ??_clcd_putch 000A  
 __end_of_init_matrix_keypad 29BE                 ??_clcd_write 0002                   ?_dashboard 0001  
        __end_of_inti_config 28F4                     i2u410_40 26CA                     i2u410_41 26C6  
                   i2u408_40 2688                     i2u408_41 2684                     i2u409_40 26B2  
                   i2u409_41 26AE                   ?_clear_log 0001        clcd_write@control_bit 0001  
          ___wmul@multiplier 0001                  ??_i2c_start 0001           __end_of_clcd_print 25B8  
                ??_i2c_write 0001           __end_of_clcd_putch 2982           __end_of_clcd_write 282E  
                 ?_init_clcd 0001                   ?_init_uart 0001                    copy_data0 2360  
                  copy_data1 2380                    copy_data2 23A0               ??_write_ds1307 0003  
                   _i2c_idle 29BE                     _i2c_read 29DC                     _i2c_stop 29E8  
                   __Hrparam 0000                 clear_log@key 0001                     __Lrparam 0000  
                _init_ds1307 276E       read_ext_eeprom@address 0002                  _read_ds1307 285A  
                   ___xxtofl 1C00          write_ds1307@address 0003                  _init_timer0 2998  
                   __ptext10 28F4                     __ptext11 2998                     __ptext20 1580  
                   __ptext12 29AC                     __ptext21 261A                     __ptext13 2982  
                   __ptext30 29E8                     __ptext22 2952                     __ptext14 276E  
                   __ptext31 29F0                     __ptext23 24D6                     __ptext15 2934  
                   __ptext40 254C                     __ptext32 29F8                     __ptext24 23DE  
                   __ptext16 22A4                     __ptext41 27F4                     __ptext33 29DC  
                   __ptext25 0AA6                     __ptext17 2914                     __ptext42 1C00  
                   __ptext34 2A00                     __ptext26 1DB4                     __ptext18 25B8  
                   __ptext43 202A                     __ptext35 29BE                     __ptext27 27B4  
                   __ptext19 285A                     __ptext44 0E82                     __ptext36 2A08  
                   __ptext28 2884                     __ptext37 21F4                     __ptext29 29D0  
                   __ptext38 2130                     __ptext39 296A                     _get_time 25B8  
                   _arrow_st 004F                  _inti_config 28D4                     _init_i2c 2982  
        read_ext_eeprom@data 0003                     _init_adc 2914                     _read_adc 2728  
                   _menu_ind 0050                     _menu_key 0052                     _scan_key 1F22  
                ??_dashboard 000B                     _password 121C                  ??_clear_log 0009  
              ??_store_event 0009                     _set_time 0012                     isa$xinst 0000  
                   int$flags 005E                     _view_ind 0033                     _view_log 06C0  
                  putch@byte 0001                 ?_change_pass 0001                     isr@count 0085  
                ??_init_clcd 0003        __end_of_read_switches 24D6                  ??_init_uart 0001  
                   intlevel2 0000         __end_of_write_ds1307 2952          __end_of_store_event 1F22  
           write_ds1307@data 0002  
